<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>2025SPC选拔赛</title>
    <link href="/2025/10/28/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/"/>
    <url>/2025/10/28/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<h1 id="一、手机取证"><a href="#一、手机取证" class="headerlink" title="一、手机取证"></a><strong>一、手机取证</strong></h1><p>这边手机密码是txt放在同目录下的</p><p>有一堆人没看见手机密码哈哈哈哈哈哈哈哈哈哈哈哈</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761281306421-f95e5f3e-866e-4c45-9cd6-ed281efa4b3b.png"></p><h2 id="1-分析嫌疑人的手机，该手机备份压缩包的MD5值是多少？（答案格式：英文全大写）"><a href="#1-分析嫌疑人的手机，该手机备份压缩包的MD5值是多少？（答案格式：英文全大写）" class="headerlink" title="1. 分析嫌疑人的手机，该手机备份压缩包的MD5值是多少？（答案格式：英文全大写）"></a><strong>1. 分析嫌疑人的手机，该手机备份压缩包的MD5值是多少？（答案格式：英文全大写）</strong></h2><p>手机备份压缩包说的就是这个检材呀，这个tar文件</p><p>我们直接扔到hash工具就好了</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761281481262-990ff402-ad01-4d78-b3d3-51c01c449715.png"></p><p>86E786FD5A0A91E23174B484BAFEDAEA</p><h2 id="2-分析嫌疑人的手机，嫌疑人的电子邮箱地址是多少？（答案格式：n13di-163-com）"><a href="#2-分析嫌疑人的手机，嫌疑人的电子邮箱地址是多少？（答案格式：n13di-163-com）" class="headerlink" title="2. 分析嫌疑人的手机，嫌疑人的电子邮箱地址是多少？（答案格式：n13di@163.com）"></a><strong>2. 分析嫌疑人的手机，嫌疑人的电子邮箱地址是多少？（答案格式：<a href="mailto:&#110;&#49;&#51;&#x64;&#x69;&#64;&#49;&#x36;&#51;&#46;&#x63;&#111;&#x6d;">n13di@163.com</a>）</strong></h2><p>把那个华为手机密码输进去之后就能在火眼打开了</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761281645536-e08045e0-ea40-40fb-ba6c-90802c973465.png"></p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761281676319-b4cbde53-b178-43ca-bc1c-6cf3c6b47f06.png"></p><p>能扫出来有个网易邮箱，就是嫌疑人的那个</p><p>这边就一个，没什么好猜测的</p><p><a href="mailto:&#122;&#97;&#106;&#x31;&#x32;&#51;&#x71;&#x61;&#122;&#64;&#x31;&#54;&#x33;&#46;&#x63;&#111;&#x6d;">zaj123qaz@163.com</a></p><h2 id="3-分析嫌疑人的手机，哪个邮箱给她发送的公民信息文件？（答案格式：n13di-163-com）"><a href="#3-分析嫌疑人的手机，哪个邮箱给她发送的公民信息文件？（答案格式：n13di-163-com）" class="headerlink" title="3. 分析嫌疑人的手机，哪个邮箱给她发送的公民信息文件？（答案格式：n13di@163.com）"></a><strong>3. 分析嫌疑人的手机，哪个邮箱给她发送的公民信息文件？（答案格式：<a href="mailto:&#x6e;&#x31;&#51;&#100;&#x69;&#64;&#x31;&#54;&#51;&#x2e;&#99;&#111;&#x6d;">n13di@163.com</a>）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761281777262-04761b0f-d6de-4248-ad1c-09bab14937a0.png"></p><p>他就收到这样子三封邮件，很明显是最下边这一个</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761283426407-19fcee23-4b58-4956-b400-e52137208bc6.png"></p><p>发件人就在这边，这个主人公好像叫小高</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761283449141-e5114783-ba74-4c13-b92f-75116c1fa28e.png"></p><p>还是个搞裸聊这一块的</p><p><a href="mailto:&#x79;&#101;&#116;&#x31;&#x33;&#50;&#113;&#119;&#x65;&#64;&#49;&#x36;&#x33;&#46;&#99;&#111;&#x6d;">yet132qwe@163.com</a><a href="mailto:&#x79;&#x65;&#x74;&#49;&#x33;&#50;&#113;&#x77;&#x65;&#64;&#x31;&#54;&#51;&#46;&#99;&#x6f;&#x6d;">yet132qwe@163.com</a></p><h2 id="4-分析嫌疑人的手机，嫌疑人浏览最多的奢侈品网站是哪个？"><a href="#4-分析嫌疑人的手机，嫌疑人浏览最多的奢侈品网站是哪个？" class="headerlink" title="4. 分析嫌疑人的手机，嫌疑人浏览最多的奢侈品网站是哪个？"></a><strong>4. 分析嫌疑人的手机，嫌疑人浏览最多的奢侈品网站是哪个？</strong></h2><p> A. 爱马仕B.  香奈儿C. 迪奥D.  阿玛尼</p><p>问浏览的奢侈品网站，直接去浏览器看历史记录就好了</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761281890394-526f1c83-2bac-4028-87bf-8c0be91f7a28.png"></p><p>全是这个爱马仕，选A</p><p><font style="background-color:rgba(0, 0, 0, 0);"></font></p><h2 id="5-分析嫌疑人的手机，嫌疑人记录公务员信息的应用“备忘录记事”包名是什么？（ab-cd-ef）"><a href="#5-分析嫌疑人的手机，嫌疑人记录公务员信息的应用“备忘录记事”包名是什么？（ab-cd-ef）" class="headerlink" title="5. 分析嫌疑人的手机，嫌疑人记录公务员信息的应用“备忘录记事”包名是什么？（ab.cd.ef）"></a><strong>5. 分析嫌疑人的手机，嫌疑人记录公务员信息的应用“备忘录记事”包名是什么？（ab.cd.ef）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761281915790-cef80bb3-0d91-4b6e-8aab-192693a45dea.png"></p><p>直接在APK列表查看，可以看见有个备忘录记事，这边包名也显现出来了</p><p>notepad.beiwang.jishi</p><h2 id="6-分析嫌疑人的手机，应用“备忘录记事”中记录了多少年龄小于30岁的人员信息？（答案格式：123）"><a href="#6-分析嫌疑人的手机，应用“备忘录记事”中记录了多少年龄小于30岁的人员信息？（答案格式：123）" class="headerlink" title="6. 分析嫌疑人的手机，应用“备忘录记事”中记录了多少年龄小于30岁的人员信息？（答案格式：123）"></a><strong>6. 分析嫌疑人的手机，应用“备忘录记事”中记录了多少年龄小于30岁的人员信息？（答案格式：123）</strong></h2><p>这个就需要把原来的用MT搭起来或者直接看文件系统数据了</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761283189958-3f580d77-2a10-4575-834e-4324fb1e2191.png"></p><p>这个还规整的，一搜就能搜到</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761283264968-614a61f7-ea0c-4f32-83d9-309cbc65d4d4.png"></p><p>就一个文件，是txt格式的，被改后缀了</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761283306911-48f60854-6816-4e22-a013-9b6fd98abdf7.png"></p><p>记事本打开就能看见内容了</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761283318325-35438364-28aa-4619-b52f-e992c5b52148.png"></p><p>一共十个人，小于30的就4个</p><h2 id="7-分析嫌疑人的手机，嫌疑人曾使用文档扫描软件扫描过文件，请问该扫描软件的名称是什么？（答案格式：名称全称）"><a href="#7-分析嫌疑人的手机，嫌疑人曾使用文档扫描软件扫描过文件，请问该扫描软件的名称是什么？（答案格式：名称全称）" class="headerlink" title="7. 分析嫌疑人的手机，嫌疑人曾使用文档扫描软件扫描过文件，请问该扫描软件的名称是什么？（答案格式：名称全称）"></a><strong>7. 分析嫌疑人的手机，嫌疑人曾使用文档扫描软件扫描过文件，请问该扫描软件的名称是什么？（答案格式：名称全称）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761283355973-a5909ad4-8475-4ada-a1ec-6fbab7f40b47.png"></p><p>同样找软件，直接就能找到有个扫描软件</p><p>夸克扫描王</p><h2 id="8-分析嫌疑人的手机，嫌疑人使用文档扫描软件扫描的文件内容是什么？（-）"><a href="#8-分析嫌疑人的手机，嫌疑人使用文档扫描软件扫描的文件内容是什么？（-）" class="headerlink" title="8. 分析嫌疑人的手机，嫌疑人使用文档扫描软件扫描的文件内容是什么？（ ）"></a><strong>8. 分析嫌疑人的手机，嫌疑人使用文档扫描软件扫描的文件内容是什么？（ ）</strong></h2><p><font style="background-color:rgba(0, 0, 0, 0);">A.提成分红记录 B.诈骗业绩指标 C.伪装身份话术 D.人员名单</font></p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761283497892-d403e27e-a7ab-4f43-808e-6ec56e963e65.png"></p><p>依旧只需要我们搜索quark就能看见了</p><p>这边点进去</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761283615470-e25506f3-7db0-4e81-b823-e85d5dcf031d.png"></p><p>文件很少，随便点点就能发现这一张照片</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761283635162-e8b5bfea-ee2d-447d-8a40-91d6b15a442b.png"></p><p>是伪装身份话术，选c</p><p><font style="background-color:rgba(0, 0, 0, 0);"></font></p><h2 id="9-分析嫌疑人的手机，嫌疑人使用的名称为“薄荷记账”的记账软件共记录了多少笔交易？（答案格式：123）"><a href="#9-分析嫌疑人的手机，嫌疑人使用的名称为“薄荷记账”的记账软件共记录了多少笔交易？（答案格式：123）" class="headerlink" title="9. 分析嫌疑人的手机，嫌疑人使用的名称为“薄荷记账”的记账软件共记录了多少笔交易？（答案格式：123）"></a><strong>9. 分析嫌疑人的手机，嫌疑人使用的名称为“薄荷记账”的记账软件共记录了多少笔交易？（答案格式：123）</strong></h2><p>依旧先找包名</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761283758160-dde3c639-6918-402f-8268-3f882f04d5bf.png"></p><p>锁定文件位置</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761283772889-86457d23-3c01-457e-b60b-cc53b51403c1.png"></p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761283811497-fdafcd02-0a6b-44c2-afaf-b8c6de39a411.png"></p><p>一直点进去就能找到这个account_book_work.db</p><p>前边的路径也不过什么database，都有特征的</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761283896085-1d0b54fd-f709-4856-9187-4076a0b6a802.png"></p><p>在这边直接看也行，导到navicat也一样，更方便看一点吧</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761284011113-a768f45c-a61e-494d-838c-46552107bf3c.png"></p><p>一共十三笔（还是得点进去看看的，排除无效的，也就是这边没有而已）</p><h2 id="10-分析嫌疑人的手机，该记账软件中关于诈骗提成分红的收入明细一共多少钱？（答案格式：123）"><a href="#10-分析嫌疑人的手机，该记账软件中关于诈骗提成分红的收入明细一共多少钱？（答案格式：123）" class="headerlink" title="10. 分析嫌疑人的手机，该记账软件中关于诈骗提成分红的收入明细一共多少钱？（答案格式：123）"></a><strong>10. 分析嫌疑人的手机，该记账软件中关于诈骗提成分红的收入明细一共多少钱？（答案格式：123）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761283989756-d183bcab-e117-4580-b75e-1af768fe1724.png"></p><p>导navicat方便点</p><p>这边看提成分红的几行就行</p><p>524+791+369+793+392+412</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761284127684-f178fc1e-ca0d-4e9b-aff3-e9cc196ebf17.png"></p><p>所以是3281</p><h1 id="二、计算机"><a href="#二、计算机" class="headerlink" title="二、计算机"></a>二、计算机</h1><p>这边需要说明的是如果想仿真这一台Win11计算机</p><p>你必须需要17版本以上的Vmware，否则是打不开的</p><p>其次就是这边还必须重置密码，不然打不开，限制多多</p><p>其实Win11除了仿真版本需求外都蛮香的，主要是熟练，本来就用这个的</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761215837555-93c9ede8-3671-4429-937d-91e88d4cbd04.png"></p><p>当然了，记得要截个屏</p><h2 id="1-分析嫌疑人的电脑，其电脑的设备名称是什么？（答案格式：以实际为准）"><a href="#1-分析嫌疑人的电脑，其电脑的设备名称是什么？（答案格式：以实际为准）" class="headerlink" title="1. 分析嫌疑人的电脑，其电脑的设备名称是什么？（答案格式：以实际为准）"></a><strong>1. 分析嫌疑人的电脑，其电脑的设备名称是什么？（答案格式：以实际为准）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761284540905-3e655166-d721-491e-a002-257c2eb997ce.png"></p><p>一把梭的题，直接就能看见设备名称</p><p>暴富888</p><h2 id="2-分析嫌疑人的电脑，其电脑连接互联网的物理地址-MAC-是多少（答案格式：01-AC-15-R2-B1-3C）"><a href="#2-分析嫌疑人的电脑，其电脑连接互联网的物理地址-MAC-是多少（答案格式：01-AC-15-R2-B1-3C）" class="headerlink" title="2. 分析嫌疑人的电脑，其电脑连接互联网的物理地址(MAC)是多少（答案格式：01-AC-15-R2-B1-3C）"></a><strong>2. 分析嫌疑人的电脑，其电脑连接互联网的物理地址(MAC)是多少（答案格式：01-AC-15-R2-B1-3C）</strong></h2><p>这题直接在火眼看网络适配器就好了</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761284687781-bfe55701-7680-4449-8246-9daed2785d68.png"></p><p>00-0C-29-E3-C6-2B</p><h2 id="3-分析嫌疑人的电脑，其电脑2025年6月9日最后一次接入USB设备序列号的后六位是？（答案格式：以实际为准，英文字母全大写）"><a href="#3-分析嫌疑人的电脑，其电脑2025年6月9日最后一次接入USB设备序列号的后六位是？（答案格式：以实际为准，英文字母全大写）" class="headerlink" title="3. 分析嫌疑人的电脑，其电脑2025年6月9日最后一次接入USB设备序列号的后六位是？（答案格式：以实际为准，英文字母全大写）"></a><strong>3. 分析嫌疑人的电脑，其电脑2025年6月9日最后一次接入USB设备序列号的后六位是？（答案格式：以实际为准，英文字母全大写）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761284761767-d347cf98-d550-45d6-820e-26bbd3d433bd.png"></p><p>最后一次，直接时间排个序，然后看看，就是第一条</p><p>这边后六位就是123AD3</p><h2 id="4-分析嫌疑人的电脑，其电脑BitLocker加密分区的48位恢复密钥的后六位是多少？（答案格式：123456）"><a href="#4-分析嫌疑人的电脑，其电脑BitLocker加密分区的48位恢复密钥的后六位是多少？（答案格式：123456）" class="headerlink" title="4. 分析嫌疑人的电脑，其电脑BitLocker加密分区的48位恢复密钥的后六位是多少？（答案格式：123456）"></a><strong>4. 分析嫌疑人的电脑，其电脑BitLocker加密分区的48位恢复密钥的后六位是多少？（答案格式：123456）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761284810993-b15a42c0-f59c-4193-95a2-d4d679b92309.png"></p><p>加密分区搁这呢，有个.mem文件</p><p>所以就是分析这个来得到</p><p>我们这边使用工具磁盘解密器，直接爆破出key</p><p>我不知道为什么我其实有，但是我从来没用过</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761461072688-5f5b46f5-f48c-4762-a187-033983c080d6.png"></p><p>这边这样子选就好了</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761461109086-477e840a-1ce9-432e-9afa-d9ab57969588.png"></p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761461503793-6434e886-62c1-49f1-9934-18c513be3a30.png"></p><p>可以看到这边最后解出来了</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761461565085-d95cef44-2d6d-4e3d-9516-b6e6fd2c194a.png"></p><p>先保存</p><p>接下来选这个</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761461655193-c2b52c8e-3118-426c-aaab-387422352b1a.png"></p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761461662563-e50cd81f-6441-4fd3-a948-91c9cf5ffc12.png"></p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761461686378-90445285-9f94-4b77-8861-c72d757d4ebf.png"></p><p>这样子选择配置就可以解开bitblocker</p><p>170258-643148-669911-174548-088726-299772-219439-200189</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761461709255-a6796d42-48a5-4fb8-ac87-afad1607c208.png"></p><p>成功显示出恢复密钥</p><p>200189</p><h2 id="5-分析嫌疑人的电脑，当前该公司后台服务器使用的云服务器是哪个厂商的？（答案格式：京东云）"><a href="#5-分析嫌疑人的电脑，当前该公司后台服务器使用的云服务器是哪个厂商的？（答案格式：京东云）" class="headerlink" title="5. 分析嫌疑人的电脑，当前该公司后台服务器使用的云服务器是哪个厂商的？（答案格式：京东云）"></a><strong>5. 分析嫌疑人的电脑，当前该公司后台服务器使用的云服务器是哪个厂商的？（答案格式：京东云）</strong></h2><p>这边有很多混淆项</p><p>但是在这俩人的聊天记录中还是很好确定的</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761461860461-c409af00-dfc1-4fcc-93cd-862f09379483.png"></p><p>云服务器迁移到的是亿速云</p><h2 id="6-分析嫌疑人的电脑，当前该公司后台服务器ssh远程端口是多少？-答案格式：123"><a href="#6-分析嫌疑人的电脑，当前该公司后台服务器ssh远程端口是多少？-答案格式：123" class="headerlink" title="6. 分析嫌疑人的电脑，当前该公司后台服务器ssh远程端口是多少？(答案格式：123)"></a><strong>6. 分析嫌疑人的电脑，当前该公司后台服务器ssh远程端口是多少？(答案格式：123)</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761461900075-18a130c0-4f6b-4594-9d06-ac86aaf0637d.png"></p><p>亿速云的端口是223</p><h2 id="7-分析嫌疑人的电脑，嫌疑人使用的苹果手机序列号是多少？（答案格式：ABCD1234）"><a href="#7-分析嫌疑人的电脑，嫌疑人使用的苹果手机序列号是多少？（答案格式：ABCD1234）" class="headerlink" title="** 7. 分析嫌疑人的电脑，嫌疑人使用的苹果手机序列号是多少？（答案格式：ABCD1234）**"></a>** 7. 分析嫌疑人的电脑，嫌疑人使用的苹果手机序列号是多少？（答案格式：ABCD1234）**</h2><p>这一题在外边找不到，其实是藏在了BitLocker加密的那个盘里</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761463048993-c2fbfbd5-ff20-4b1b-b993-39fb3e129cdb.png"></p><p>打开来长这样子</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761463223239-f320ddf2-65f5-4b34-ad76-16d25baeb408.png"></p><p>我们很容易找到这个备份文件</p><p>打开来看看</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761463272248-5161c948-a291-40a3-9b74-6bf3caa24b78.png"></p><p>下了个插件之后可以在vscode看了</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761463338546-4aa6fcd7-1ec7-45c1-90da-e4bfb1c118f3.png"></p><p>找找看</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761463426166-95b802cc-41e1-4aeb-b8f7-899b5054261a.png"></p><p>搜一下设备ID直接能定位到这边</p><p>所以序列号是C8PZFDJXN741</p><h2 id="8-分析嫌疑人的电脑，嫌疑人曾使用的苹果手机备份四位数字密码是多少？（答案格式：1234）"><a href="#8-分析嫌疑人的电脑，嫌疑人曾使用的苹果手机备份四位数字密码是多少？（答案格式：1234）" class="headerlink" title="8. 分析嫌疑人的电脑，嫌疑人曾使用的苹果手机备份四位数字密码是多少？（答案格式：1234）"></a><strong>8. 分析嫌疑人的电脑，嫌疑人曾使用的苹果手机备份四位数字密码是多少？（答案格式：1234）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761481063647-6d88dc01-8c3d-47f4-beda-b708bbd0d058.png"></p><p>我们刚刚找到的这个manifest.plist文件是一个有着所有元数据的二进制属性列表文件</p><p>然而直接看却找不到备份的四位数字密码</p><p>我们这边需要使用passware kit直接爆破</p><p><a href="https://blog.csdn.net/wow0524/article/details/131519669">https://blog.csdn.net/wow0524/article/details/131519669</a></p><p>此事在这边有几乎差不多的记载</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761481351788-8ada3e2e-e1f1-4b04-919c-26fb63ff6ad3.png"></p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761485641803-66515341-05f2-4559-abe2-fb89f3f1feb6.png"></p><p>这边最后得到答案为0122</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761481373307-f41df8d0-c2fe-412f-8fde-fec0a206d42e.png"></p><p>当然利用hashcat也一样</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761481505006-f57b76f4-d1b7-4c5c-b938-891d83db82cc.png"></p><p>这边输出了这样子一串</p><blockquote><p>$itunes_backup$<em>10</em>16e585bf1551d33f59b0cf12fede2b126f2089e34f6a8afaf4ff2747858f70cebb440b01dc6fe955<em>10000</em>e292f83deafb54b93335ee1c5c448f6916508910<em>10000000</em>6b5e6ad507fd74f01e48a827d4ef51ea66fac184</p></blockquote><p>看来是IOS10.x版本的</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761481710590-4c913ddc-ee90-4d5e-aac2-eaa29619d64f.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">hashcat -a 3 -m 14800 -w 3 -D 2 $itunes_backup$*10*16e585bf1551d33f59b0cf12fede2b126f2089e34f6a8afaf4ff2747858f70cebb440b01dc6fe955*10000*e292f83deafb54b93335ee1c5c448f6916508910*10000000*6b5e6ad507fd74f01e48a827d4ef51ea66fac184 ?d?d?d?d<br></code></pre></td></tr></table></figure><p>也可以得到最后的答案是0122</p><p>这边一直在报错，可能是hashcat需要7.2.0版本才行，但我也没找到，ai告诉我也可以降级我的cuda</p><p>我不想降级（）</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761486857531-9073b96c-5b37-4e2a-806b-fb4d787279b4.png"></p><h2 id="9-分析嫌疑人的电脑，嫌疑人使用的以太坊钱包名称是什么？（答案格式：AbcDe）"><a href="#9-分析嫌疑人的电脑，嫌疑人使用的以太坊钱包名称是什么？（答案格式：AbcDe）" class="headerlink" title="9. 分析嫌疑人的电脑，嫌疑人使用的以太坊钱包名称是什么？（答案格式：AbcDe）"></a><strong>9. 分析嫌疑人的电脑，嫌疑人使用的以太坊钱包名称是什么？（答案格式：AbcDe）</strong></h2><p>这不巧了，平航杯刚见到</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761486930696-23ff91c7-c9eb-4d4d-81d1-cc203aa048a6_1.png"></p><p>这边明写着就是以太坊钱包，我们正好在平航杯也见过，确定就是这个</p><p>MetaMask</p><h2 id="10-分析嫌疑人的电脑，嫌疑人使用的以太坊钱包版本是多少？（答案格式：26-16-0）"><a href="#10-分析嫌疑人的电脑，嫌疑人使用的以太坊钱包版本是多少？（答案格式：26-16-0）" class="headerlink" title="10. 分析嫌疑人的电脑，嫌疑人使用的以太坊钱包版本是多少？（答案格式：26.16.0）"></a><strong>10. 分析嫌疑人的电脑，嫌疑人使用的以太坊钱包版本是多少？（答案格式：26.16.0）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761486930696-23ff91c7-c9eb-4d4d-81d1-cc203aa048a6.png"></p><p>同上，直接就有了</p><p>12.13.0</p><h2 id="11-分析嫌疑人的电脑，嫌疑人的以太坊钱包私钥助记词第4个单词是什么？（答案格式：以实际为准）"><a href="#11-分析嫌疑人的电脑，嫌疑人的以太坊钱包私钥助记词第4个单词是什么？（答案格式：以实际为准）" class="headerlink" title="11. 分析嫌疑人的电脑，嫌疑人的以太坊钱包私钥助记词第4个单词是什么？（答案格式：以实际为准）"></a><strong>11. 分析嫌疑人的电脑，嫌疑人的以太坊钱包私钥助记词第4个单词是什么？（答案格式：以实际为准）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761463825979-8dfe8658-b291-4e79-bb3e-6f548907c599.png"></p><p>这个是在这边的一张截图</p><p>可以看到第四个是cloud</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761463882123-3b6f75e6-1445-482a-8869-be9870bd7456.png"></p><p>旁边的txt里也写了</p><h2 id="12-分析嫌疑人的电脑，嫌疑人的Skype账号是多少？（答案格式：以实际为准）"><a href="#12-分析嫌疑人的电脑，嫌疑人的Skype账号是多少？（答案格式：以实际为准）" class="headerlink" title="12. 分析嫌疑人的电脑，嫌疑人的Skype账号是多少？（答案格式：以实际为准）"></a><strong>12. 分析嫌疑人的电脑，嫌疑人的Skype账号是多少？（答案格式：以实际为准）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761486990635-a2831aa6-ae67-442a-a4eb-63dd52f8b11a.png"></p><p>直接火眼就能看见其账号，就一个，无混淆项</p><p><strong><font style="color:rgba(0, 0, 0, 0.87);"></font></strong><font style="color:rgba(0, 0, 0, 0.87);">live:.cid.d2bb7d5a13237f1d</font></p><h2 id="13-分析嫌疑人的电脑，嫌疑人电脑中Skype应用的安装日期是多少？（答案格式：1900-01-01）"><a href="#13-分析嫌疑人的电脑，嫌疑人电脑中Skype应用的安装日期是多少？（答案格式：1900-01-01）" class="headerlink" title="13. 分析嫌疑人的电脑，嫌疑人电脑中Skype应用的安装日期是多少？（答案格式：1900&#x2F;01&#x2F;01）"></a><strong>13. 分析嫌疑人的电脑，嫌疑人电脑中Skype应用的安装日期是多少？（答案格式：1900&#x2F;01&#x2F;01）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761521036703-c581eb6f-b71b-4aa2-969a-db5bd7b24bb2.png"></p><p>直接在设置里搜可以看到就是2025&#x2F;04&#x2F;01</p><p>当然，虽然不太好，也可以去浏览器看到下载记录，这只是下安装包的记录，但是实在找不到的时候也可以拿来用，一般来说下安装包和下软件是同一天（一般来说）</p><h2 id="14-分析嫌疑人的电脑，嫌疑人电脑中安装的VPN软件名称是什么？（答案格式：Abc-VPN）"><a href="#14-分析嫌疑人的电脑，嫌疑人电脑中安装的VPN软件名称是什么？（答案格式：Abc-VPN）" class="headerlink" title="14. 分析嫌疑人的电脑，嫌疑人电脑中安装的VPN软件名称是什么？（答案格式：Abc VPN）"></a><strong>14. 分析嫌疑人的电脑，嫌疑人电脑中安装的VPN软件名称是什么？（答案格式：Abc VPN）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761520741429-9bac12ab-7c74-4eed-abc2-e7ec8d0fd852.png"></p><p>火眼能搜到，当然了，在虚拟机里也能直接看见</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761520926825-683f9f8f-57cb-407d-9420-d69092a7411a.png"></p><p>就是Any VPN</p><h2 id="15-分析嫌疑人的电脑，嫌疑人自己使用Wireshark抓的流量包文件名称是什么？（答案格式：以实际为准，包含文件扩展名）"><a href="#15-分析嫌疑人的电脑，嫌疑人自己使用Wireshark抓的流量包文件名称是什么？（答案格式：以实际为准，包含文件扩展名）" class="headerlink" title="15. 分析嫌疑人的电脑，嫌疑人自己使用Wireshark抓的流量包文件名称是什么？（答案格式：以实际为准，包含文件扩展名）"></a><strong>15. 分析嫌疑人的电脑，嫌疑人自己使用Wireshark抓的流量包文件名称是什么？（答案格式：以实际为准，包含文件扩展名）</strong></h2><p>直接在桌面打开wireshark</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761521177298-3073f344-6526-4c22-b801-45d7134f4e1d.png"></p><p>看看打开最近的文件，可以看到抓到的流量包文件名称为test.pcapng</p><h2 id="16-分析嫌疑人的电脑，该流量包开始抓取第一个分组的时间是什么？（答案格式：1900-01-01-01-00-00）"><a href="#16-分析嫌疑人的电脑，该流量包开始抓取第一个分组的时间是什么？（答案格式：1900-01-01-01-00-00）" class="headerlink" title="16. 分析嫌疑人的电脑，该流量包开始抓取第一个分组的时间是什么？（答案格式：1900&#x2F;01&#x2F;01 01:00:00）"></a><strong>16. 分析嫌疑人的电脑，该流量包开始抓取第一个分组的时间是什么？（答案格式：1900&#x2F;01&#x2F;01 01:00:00）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761521291156-c040a462-1298-4a7f-a8e0-94931f6b7796.png"></p><p>直接锁定No.1，然后点进去看看时间就好了，注意时区，直接复制值会是UTC的</p><p>这边是</p><p>2025&#x2F;04&#x2F;03 12:47:18</p><h2 id="17-分析嫌疑人的电脑，抓取该流量包的总时长是？"><a href="#17-分析嫌疑人的电脑，抓取该流量包的总时长是？" class="headerlink" title="17. 分析嫌疑人的电脑，抓取该流量包的总时长是？"></a><strong>17. 分析嫌疑人的电脑，抓取该流量包的总时长是？</strong></h2><p>A. 00:02:14 B.00:08:25 C.00:18:25 D.00:29:31</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761521471645-0bdaeb41-0c5b-4466-96d9-cbcae5010a5b.png"></p><p>点这个</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761521498451-58d0fbdf-c559-4da7-be61-e4586444794f.png"></p><p>可以看到选A</p><h2 id="18-分析嫌疑人的电脑，该流量包中IPV4地址为3-24-46-4的占比是多少？"><a href="#18-分析嫌疑人的电脑，该流量包中IPV4地址为3-24-46-4的占比是多少？" class="headerlink" title="18. 分析嫌疑人的电脑，该流量包中IPV4地址为3.24.46.4的占比是多少？"></a><strong>18. 分析嫌疑人的电脑，该流量包中IPV4地址为3.24.46.4的占比是多少？</strong></h2><p>A.96.69% B.97.36% C.98.47% D.99.74%</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761521989284-85a4fe10-51f4-401a-9453-866e9922989d.png"></p><p>这边直接就能统计</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761522019727-0f6ab9ed-096e-45e7-8d19-7a37f4ec5335.png"></p><p>然后点进来一看，99.74%</p><h2 id="19-分析嫌疑人的电脑，嫌疑人使用的AI换脸软件中，当前调用的onnx（Open-Neural-Network-Exchange，开放神经网络交换）格式的模型文件有几个？（答案格式：1）"><a href="#19-分析嫌疑人的电脑，嫌疑人使用的AI换脸软件中，当前调用的onnx（Open-Neural-Network-Exchange，开放神经网络交换）格式的模型文件有几个？（答案格式：1）" class="headerlink" title="19. 分析嫌疑人的电脑，嫌疑人使用的AI换脸软件中，当前调用的onnx（Open Neural Network Exchange，开放神经网络交换）格式的模型文件有几个？（答案格式：1）"></a><strong>19. 分析嫌疑人的电脑，嫌疑人使用的AI换脸软件中，当前调用的onnx（Open Neural Network Exchange，开放神经网络交换）格式的模型文件有几个？（答案格式：1）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761539317996-2835ada0-18d0-4725-97e1-c17fabb3b848.png"></p><p>这边可以看得出来这个王贵一早就有研究过ai换脸</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761539414682-fc5f3000-f9ce-4877-b992-2395fa89145b.png"></p><p>还研究过，这个deepface</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761539451001-f6a191de-2cee-4231-85bb-c7d8c0cc55d5.png"></p><p>所以我们在解密的盘里就能定位到这个</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761539492894-5c992557-abdd-4865-a5ef-869ba1c59660.png"></p><p>最后在models这边就能确定是五个</p><p>所以本题答案为5</p><h2 id="20-分析嫌疑人的电脑，嫌疑人注册登录的数字天堂开发工具的账号是什么？（答案格式：aaa-bbb-ccc）"><a href="#20-分析嫌疑人的电脑，嫌疑人注册登录的数字天堂开发工具的账号是什么？（答案格式：aaa-bbb-ccc）" class="headerlink" title="20. 分析嫌疑人的电脑，嫌疑人注册登录的数字天堂开发工具的账号是什么？（答案格式：aaa@bbb.ccc）"></a><strong>20. 分析嫌疑人的电脑，嫌疑人注册登录的数字天堂开发工具的账号是什么？（答案格式：<a href="mailto:&#97;&#x61;&#x61;&#64;&#x62;&#98;&#x62;&#x2e;&#99;&#99;&#x63;">aaa@bbb.ccc</a>）</strong></h2><p>首先，什么是数字天堂开发工具？</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761539567795-dd003033-6c99-447b-829a-05d6dabfe512.png"></p><p>这边可以搜到，而里边也有个很熟悉的名字</p><p>HBuilderX</p><p>这个出现在了计算机的桌面</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761539651997-f7cc28f3-969a-4d89-a15a-a8eb7ef32bb8.png"></p><p>我们打开来，可以运行</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761539687619-6a1f17cc-d5e0-4389-91fc-59815d3a743f.png"></p><p>想知道什么是账号，这边点登录，一般都会自带账号，然后隐藏密码让你填</p><p>我们点击之后自动就可以看到这边的账号了</p><p><a href="mailto:&#x77;&#x61;&#110;&#x67;&#x67;&#x75;&#105;&#48;&#x34;&#49;&#49;&#64;&#x6f;&#117;&#116;&#108;&#x6f;&#111;&#x6b;&#46;&#99;&#111;&#x6d;">wanggui0411@outlook.com</a></p><h2 id="21-分析嫌疑人电脑里的APK前端源码，如办案人员需要对该APK进行调证，请问调证值是多少？（答案格式：英文大写）"><a href="#21-分析嫌疑人电脑里的APK前端源码，如办案人员需要对该APK进行调证，请问调证值是多少？（答案格式：英文大写）" class="headerlink" title="21. 分析嫌疑人电脑里的APK前端源码，如办案人员需要对该APK进行调证，请问调证值是多少？（答案格式：英文大写）"></a><strong>21. 分析嫌疑人电脑里的APK前端源码，如办案人员需要对该APK进行调证，请问调证值是多少？（答案格式：英文大写）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761539796888-fbc5d953-32f4-479c-a837-63f2d8f94673.png"></p><p>依旧是刚刚的界面，我们打开后能看到有个叫源码前端的东西</p><p>点开来就发现就是这个APK的前端源码</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761539960258-29721092-c255-49d1-b99f-5c04ba36659c.png"></p><p>这边对于调证值没有官方定义</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761539987988-c28bb260-32ad-442b-b9c5-f54034d5989c.png"></p><p>但是我搜索的时候会自动跳出是id值</p><p>所以我们这边直接写id值就好了</p><p>H5AAA8907</p><h2 id="22-分析嫌疑人电脑里的APK前端源码，该APK的中文名称是什么？（答案格式：以实际为准）"><a href="#22-分析嫌疑人电脑里的APK前端源码，该APK的中文名称是什么？（答案格式：以实际为准）" class="headerlink" title="22. 分析嫌疑人电脑里的APK前端源码，该APK的中文名称是什么？（答案格式：以实际为准）"></a><strong>22. 分析嫌疑人电脑里的APK前端源码，该APK的中文名称是什么？（答案格式：以实际为准）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761540031368-c2988837-1e55-421f-8e16-a69652baef1b.png"></p><p>跟上图一样，就是甜心直播</p><h2 id="23-分析嫌疑人电脑里的APK前端源码，该APK前端页面展示了多少名女生的信息？（答案格式：3）"><a href="#23-分析嫌疑人电脑里的APK前端源码，该APK前端页面展示了多少名女生的信息？（答案格式：3）" class="headerlink" title="23. 分析嫌疑人电脑里的APK前端源码，该APK前端页面展示了多少名女生的信息？（答案格式：3）"></a><strong>23. 分析嫌疑人电脑里的APK前端源码，该APK前端页面展示了多少名女生的信息？（答案格式：3）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761540136641-318deeec-a2de-4345-b396-ed492c480cac.png"></p><p>其实火眼很容易翻到这个</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761540309241-51b22393-90b7-47a7-8fac-7d7e9eb0a4dc.png"></p><p>这边有个list.html，打开后数一下就知道是7个</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761540348441-86c9082d-8c80-4e7e-95f9-cb6fefac56ea.png"></p><p>在虚拟机里也能看见，这边有爱好等信息</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761540381556-765144f1-4522-46d1-9aee-2f52f58a969c.png"></p><p>不是这个，首先这个下边明显还有，其次就是这个没什么信息，应该是上边那图，一共7个</p><h2 id="24-分析嫌疑人电脑里的APK前端源码，该APK中的API调用的API-Server是多少？（答案格式：以实际为准，如http-www-qasz-com-abc-def-）"><a href="#24-分析嫌疑人电脑里的APK前端源码，该APK中的API调用的API-Server是多少？（答案格式：以实际为准，如http-www-qasz-com-abc-def-）" class="headerlink" title="24. 分析嫌疑人电脑里的APK前端源码，该APK中的API调用的API Server是多少？（答案格式：以实际为准，如http://www.qasz.com/abc/def/）"></a><strong>24. 分析嫌疑人电脑里的APK前端源码，该APK中的API调用的API Server是多少？（答案格式：以实际为准，如<a href="http://www.qasz.com/abc/def/%EF%BC%89">http://www.qasz.com/abc/def/）</a></strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761540540942-d9978a58-8391-4365-b79d-a7c68e80a474.png"></p><p>直接在这边搜索api</p><p>可以看到有11个结果，但其实只有一个api server，别的都是出现在单词里边的api</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761540615408-595ad291-a9be-48c5-88c2-511572269d7e.png"></p><p>只有这个，确定就是这个了</p><p><a href="http://www.tianxinbobo.com/csapi/uploads/">http://www.tianxinbobo.com/csapi/uploads/</a></p><h2 id="25-分析嫌疑人电脑里的APK前端源码，该APK源码的静态资源文件内有多少个png类型的图片？（答案格式：3）"><a href="#25-分析嫌疑人电脑里的APK前端源码，该APK源码的静态资源文件内有多少个png类型的图片？（答案格式：3）" class="headerlink" title="25. 分析嫌疑人电脑里的APK前端源码，该APK源码的静态资源文件内有多少个png类型的图片？（答案格式：3）"></a><strong>25. 分析嫌疑人电脑里的APK前端源码，该APK源码的静态资源文件内有多少个png类型的图片？（答案格式：3）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761540673644-a2576431-5d97-4574-9092-69abbdb9ce7c.png"></p><p>只算images里的，unpacked的不算静态资源</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761540698806-8d76119f-7192-448f-869c-78ed23c09453.png"></p><p>去掉这个ico图标文件</p><p>剩下14个png</p><h1 id="三、服务器"><a href="#三、服务器" class="headerlink" title="三、服务器"></a>三、服务器</h1><h2 id="重构"><a href="#重构" class="headerlink" title="重构"></a>重构</h2><p>这边服务器需要先重构，这边看起来是个很基础的宝塔系统，但是原来的ens33网卡IP登不上去</p><p>所以我们得重新整一张</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761541336055-bff0b8a6-497a-4d06-a59e-ab0a95241ca4.png"></p><p>先右键设置，然后这边添加一个网络适配器</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761541375641-b409e440-964b-4457-ad07-89634d7c9788.png"></p><p>注意设置，设置成这样子</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761541453095-6c29b79e-7519-4607-82f8-01568b82f7cd.png"></p><p>最后在虚拟网络编辑器里再设置一下VMnet1的DHCP</p><p>从3开始避免有别的服务</p><p>最后记得写应用</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761541806602-6c6ea8a5-f9f1-4790-9d45-10c96195fddd_1.png"></p><p>成功设置了第二张</p><p>systemctl status sshd看看ssh服务</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761541749403-5833c522-2cae-47fb-9598-a346737cea8f.png"></p><p>可以看到端口是222</p><p>主要是刚刚的网卡用不了，所以我们用新网卡来连ssh</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761542544297-d29e6a65-8892-4eed-8ae7-86f1ddc53993.png"></p><p>在输入了用户名和密码后我们成功进行了ssh连接</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761542685371-284f8de5-6233-4fde-8d02-f0a2fe6a2c85.png"></p><p>之后直接bt 5就能连接上了</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761542772961-8e99a615-d987-4a1f-aa04-dfc4a8c1e408.png"></p><p>直接在本地电脑上登录</p><p>这边账号和密码都有了</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761542802395-bc6dd0e9-21a3-4176-9755-17decf3e98a6.png"></p><p>OK成功登录</p><h2 id="1-涉案服务器A的操作系统（Operating-System）的内核版本是什么？-1-2-3-456-abc-efg-123"><a href="#1-涉案服务器A的操作系统（Operating-System）的内核版本是什么？-1-2-3-456-abc-efg-123" class="headerlink" title="1. 涉案服务器A的操作系统（Operating System）的内核版本是什么？(1.2.3-456.abc.efg_123)"></a><strong>1. 涉案服务器A的操作系统（Operating System）的内核版本是什么？(1.2.3-456.abc.efg_123)</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761540753027-cc0f12a5-8982-44ca-8f33-446173f11e32.png"></p><p>一把梭的题</p><p>3.10.0-957.el7.x86_64</p><h2 id="2-涉案服务器A的ssh的端口号是多少？"><a href="#2-涉案服务器A的ssh的端口号是多少？" class="headerlink" title="2. 涉案服务器A的ssh的端口号是多少？"></a><strong>2. 涉案服务器A的ssh的端口号是多少？</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761541755920-aed30e47-e5ea-418f-a688-63ed3ef0ac36.png"></p><p>systemctl status sshd看看ssh服务</p><p>222</p><h2 id="3-分析服务器镜像A，涉案服务器的ip地址是什么？-答案格式：123-123-123-123）"><a href="#3-分析服务器镜像A，涉案服务器的ip地址是什么？-答案格式：123-123-123-123）" class="headerlink" title="3. 分析服务器镜像A，涉案服务器的ip地址是什么？(答案格式：123.123.123.123）"></a><strong>3. 分析服务器镜像A，涉案服务器的ip地址是什么？(答案格式：123.123.123.123）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761541806602-6c6ea8a5-f9f1-4790-9d45-10c96195fddd.png"></p><p>是我们加之前的那个ip</p><p>10.0.0.11</p><h2 id="4-涉案服务器A中使用的nginx版本号是多少？（答案格式：1-2-3）"><a href="#4-涉案服务器A中使用的nginx版本号是多少？（答案格式：1-2-3）" class="headerlink" title="4. 涉案服务器A中使用的nginx版本号是多少？（答案格式：1.2.3）"></a><strong>4. 涉案服务器A中使用的nginx版本号是多少？（答案格式：1.2.3）</strong></h2><p>直接nginx -v就好了</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761542838306-c0687159-3b6e-49d6-8228-dfe51b82e49f.png"></p><p>1.18.0</p><h2 id="5-涉案服务器A中mysql的端口号是多少？（答案格式：123）"><a href="#5-涉案服务器A中mysql的端口号是多少？（答案格式：123）" class="headerlink" title="5. 涉案服务器A中mysql的端口号是多少？（答案格式：123）"></a><strong>5. 涉案服务器A中mysql的端口号是多少？（答案格式：123）</strong></h2><p>sudo ss -tlnp | grep mysqld</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761542876789-0a06dd95-7c3c-45a3-80d5-a300a1396f20.png"></p><p>可以看到端口号是3340</p><h2 id="6-涉案服务器A中宝塔面板绑定的手机号码后四位为？"><a href="#6-涉案服务器A中宝塔面板绑定的手机号码后四位为？" class="headerlink" title="6. 涉案服务器A中宝塔面板绑定的手机号码后四位为？"></a><strong>6. 涉案服务器A中宝塔面板绑定的手机号码后四位为？</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761542937560-073d1360-e7fe-4dc2-96fa-5a79fbbb5545.png"></p><p>我们火眼其实能直接看见</p><p>所以是2768</p><h2 id="7-涉案服务器A中宝塔面板最早保存的第一次登陆时的ip地址和端口号是什么？（答案格式：123-456-789-123-456）"><a href="#7-涉案服务器A中宝塔面板最早保存的第一次登陆时的ip地址和端口号是什么？（答案格式：123-456-789-123-456）" class="headerlink" title="7. 涉案服务器A中宝塔面板最早保存的第一次登陆时的ip地址和端口号是什么？（答案格式：123.456.789.123:456）"></a><strong>7. 涉案服务器A中宝塔面板最早保存的第一次登陆时的ip地址和端口号是什么？（答案格式：123.456.789.123:456）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761543089726-1e2115df-3783-4dbb-8ae1-fa5af5da4066.png"></p><p>直接火眼看日志信息</p><p>这边显示ip地址和端口号是</p><p>192.168.136.1:60332</p><h2 id="8-涉案服务器A前端登录网址是什么？（答案格式：http-xxx-xxx-xxx-xxx-）"><a href="#8-涉案服务器A前端登录网址是什么？（答案格式：http-xxx-xxx-xxx-xxx-）" class="headerlink" title="8. 涉案服务器A前端登录网址是什么？（答案格式：http://xxx.xxx.xxx.xxx/../....）"></a><strong>8. 涉案服务器A前端登录网址是什么？（答案格式：<a href="http://xxx.xxx.xxx.xxx/....%EF%BC%89">http://xxx.xxx.xxx.xxx/../....）</a></strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761543146520-8e5b3ce1-6cf5-492f-a5f4-78e1826b2d24.png"></p><p>所以网站名就是tzs.eqatrad.cn</p><p>我们找到这个网站名之后就要去其日志文件里寻找了</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761544130731-41832af8-9175-4fc4-8afd-5840bc04d473.png"></p><p>这边在wwwlogs成功找到.log文件</p><p>这边不能在网站看，因为太大了，在线看不了，会少很多</p><p>我们在火眼找到打开</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761544237363-2643932e-9424-4fac-acb2-988785d0e1fc.png"></p><p>所以答案是<a href="http://10.0.0.11/mobile/login.html">http://10.0.0.11/mobile/login.html</a></p><h2 id=""><a href="#" class="headerlink" title="**"></a>**</h2><p>**<strong>9. 涉案服务器A平台共成功充值了多少金额？（答案格式：12340.56）</strong><br>这题明显与数据库高度相关，我们得先连上数据库吧</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761544533367-77583ca5-4224-4dea-ae4b-217e3403ccc6.png"></p><p>先在网站找到用户账号密码</p><p>选择ssh，输入linux的账密；然后再转到常规，填入刚才在宝塔查到的密码</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761544883756-77d87756-e57e-4135-b699-58afdf15178f.png"></p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761544926400-886f6519-f4e0-4fa1-b45e-fc1181285dd7.png"></p><p>这边要设置两边，一下连接服务器，一下连接数据库</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761544979419-34e2553a-0d46-4db5-8f06-f28d65cc26d8.png"></p><p>然后我们就能在这边看tzq的数据库了</p><p>这边要看充值，所以看recharge的表</p><p>题目问的是平台充值，也就是注意status得是1</p><p>所以我们这列需要做出限制</p><p>直接导出筛选一下</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761553338573-98deb653-f891-469b-acfa-10a7fdacf8b8.png"></p><p>所以一共是30920984.57</p><h2 id="10-根据涉案服务器A回答，肖一帆一共发展了多少个用户作为直接下线？（答案格式：123）"><a href="#10-根据涉案服务器A回答，肖一帆一共发展了多少个用户作为直接下线？（答案格式：123）" class="headerlink" title="10. 根据涉案服务器A回答，肖一帆一共发展了多少个用户作为直接下线？（答案格式：123）"></a><strong>10. 根据涉案服务器A回答，肖一帆一共发展了多少个用户作为直接下线？（答案格式：123）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761553769549-f917fe51-cda3-4649-afb4-baf7487e0bcd.png"></p><p>要做这道题，肯定是去user这张表里搜索了</p><p>我们在这边先定位肖一帆这个人</p><p>知道了他id是11131</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761553906137-5f8e5b9c-c2a6-4a84-b12b-3f78f9fb09e5.png">右键数据库然后在数据库查找</p><p>这边直接搜搜id为11131的</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761553971085-58bb90d4-9433-4f3a-93a5-8b40e15546da.png"></p><p>（下边还有）</p><p>从这边大致能看到是7个</p><p>当然更具体的是在user里直接搜top，也就是上级</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761554038302-14013a36-7a6d-48a9-953f-d3d16182b062.png"></p><p>可以看到有7个人的上级是他，所以他发展了7个人</p><h2 id="11-根据涉案服务器A中VIP6等级的积分限制是多少？（答案格式：123）"><a href="#11-根据涉案服务器A中VIP6等级的积分限制是多少？（答案格式：123）" class="headerlink" title="11. 根据涉案服务器A中VIP6等级的积分限制是多少？（答案格式：123）"></a><strong>11. 根据涉案服务器A中VIP6等级的积分限制是多少？（答案格式：123）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761554078439-22b10a0a-938d-4b0f-b0bd-9e03042f46d1.png"></p><p>在user_member表里直接能看到VIP6</p><p>这边显示积分限制是1000000</p><h2 id="12-根据涉案服务器A分析652301196309100847是谁的银行卡？-答案示例：王五"><a href="#12-根据涉案服务器A分析652301196309100847是谁的银行卡？-答案示例：王五" class="headerlink" title="12. 根据涉案服务器A分析652301196309100847是谁的银行卡？(答案示例：王五)"></a><strong>12. 根据涉案服务器A分析652301196309100847是谁的银行卡？(答案示例：王五)</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761554127598-bd95b0ed-cd45-4022-81fb-a52bffb50633.png"></p><p>直接在数据库里搜一下这个字符串</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761554148437-a5996edc-4de0-43aa-8bf9-c5d38fc8ced3.png"></p><p>是这个人的</p><p>答案是李进华</p><h2 id="13-根据涉案服务器A分析商户号为12348888的商户其APPkey是多少？（答案格式：以实际为准，字母小写）"><a href="#13-根据涉案服务器A分析商户号为12348888的商户其APPkey是多少？（答案格式：以实际为准，字母小写）" class="headerlink" title="13. 根据涉案服务器A分析商户号为12348888的商户其APPkey是多少？（答案格式：以实际为准，字母小写）"></a><strong>13. 根据涉案服务器A分析商户号为12348888的商户其APPkey是多少？（答案格式：以实际为准，字母小写）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761554186446-7e344b3f-ee5c-403d-b046-fb6c849d46d0.png"></p><p>依旧直接搜索</p><p>这边可以看到一家店</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761554207646-9901d4c6-1b5f-440b-b564-4a46feaa67c1.png"></p><p>所以appkey很好得到</p><p>是abcdefg</p><h2 id="-1"><a href="#-1" class="headerlink" title="**"></a>**</h2><p>**<strong>14. 根据涉案服务器A分析佐维创投集团有限公司的具体地址是什么？（答案格式：以实际为准）</strong><br><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761554256427-202fe725-7c7d-44e7-8da8-70125ace1c6d.png"></p><p>这几题全都一个做法啊</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761554287601-9e4cb0d4-a5be-4758-8585-b8a2fc0c3df6.png"></p><p>澳门中环夏悫道12号美国银行中心30楼</p><h2 id="15-根据涉案服务器A分析阿里云接口API的银行卡接口地址是多少？（答案格式：以实际为准）"><a href="#15-根据涉案服务器A分析阿里云接口API的银行卡接口地址是多少？（答案格式：以实际为准）" class="headerlink" title="15. 根据涉案服务器A分析阿里云接口API的银行卡接口地址是多少？（答案格式：以实际为准）"></a><strong>15. 根据涉案服务器A分析阿里云接口API的银行卡接口地址是多少？（答案格式：以实际为准）</strong></h2><p>问阿里云接口API的银行卡接口地址</p><p>我们搜一下aliyun.com（其实直接搜阿里云也行）</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761554825467-54f77b23-3d7b-4983-8220-6b77b0dc2737.png"></p><p>就能找到这样子的答案</p><p><a href="https://market.aliyun.com/products/56928004/cmapi012976.html">https://market.aliyun.com/products/56928004/cmapi012976.html</a></p><h2 id="16-分析嫌疑人的云服务器B，涉案服务器中Java网站源码jar包名称是？（答案格式：包含后缀）"><a href="#16-分析嫌疑人的云服务器B，涉案服务器中Java网站源码jar包名称是？（答案格式：包含后缀）" class="headerlink" title="16. 分析嫌疑人的云服务器B，涉案服务器中Java网站源码jar包名称是？（答案格式：包含后缀）"></a><strong>16. 分析嫌疑人的云服务器B，涉案服务器中Java网站源码jar包名称是？（答案格式：包含后缀）</strong></h2><p>问我们jar包的名称，那直接搜一下</p><p>find &#x2F; -name *.jar</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761554992115-e18fdcc3-9550-45f1-8433-a4c66467f7cd.png"></p><p>就这个路径是正常的，别的都不像网站源码的地方</p><p>bh-wms-0.0.1-SNAPSHOT.jar</p><h2 id="17-分析嫌疑人的云服务器B，涉案Java网站数据库root账号的密码是多少？（答案格式：Abc-123456）"><a href="#17-分析嫌疑人的云服务器B，涉案Java网站数据库root账号的密码是多少？（答案格式：Abc-123456）" class="headerlink" title="17. 分析嫌疑人的云服务器B，涉案Java网站数据库root账号的密码是多少？（答案格式：Abc@123456）"></a><strong>17. 分析嫌疑人的云服务器B，涉案Java网站数据库root账号的密码是多少？（答案格式：Abc@123456）</strong></h2><p>我们上题刚刚拿到源码</p><p>jadx打开源码看看</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761555521785-d00d3108-f2e4-4ca3-86b1-39066730dec2.png"></p><p>这边标注了注释是mysql</p><p>然后密码是Tuojie@666</p><h2 id="18-分析嫌疑人的云服务器B，涉案Java网站的端口是多少？（答案示例：3123）"><a href="#18-分析嫌疑人的云服务器B，涉案Java网站的端口是多少？（答案示例：3123）" class="headerlink" title="18. 分析嫌疑人的云服务器B，涉案Java网站的端口是多少？（答案示例：3123）"></a><strong>18. 分析嫌疑人的云服务器B，涉案Java网站的端口是多少？（答案示例：3123）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761555599182-c8a2cc77-848d-4854-88f9-b44e36eb473b.png"></p><p>同一页啊，这边写了是8080</p><h2 id="19-分析嫌疑人的云服务器B，该网站后台保留的登录账号的用户昵称为？（答案格式：老李）"><a href="#19-分析嫌疑人的云服务器B，该网站后台保留的登录账号的用户昵称为？（答案格式：老李）" class="headerlink" title="19. 分析嫌疑人的云服务器B，该网站后台保留的登录账号的用户昵称为？（答案格式：老李）"></a><strong>19. 分析嫌疑人的云服务器B，该网站后台保留的登录账号的用户昵称为？（答案格式：老李）</strong></h2><h2 id="重构-1"><a href="#重构-1" class="headerlink" title="重构"></a>重构</h2><p>先构建网站看看</p><p>这边看看开了什么端口</p><p>ss -tunlp</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761555769399-4de3e4d3-4130-45b5-990e-f005d8137f21.png"></p><p>这上题说的8080端口都没开</p><p>运行一下那个jar文件</p><p>java-jar &#x2F;project&#x2F;bh-wms-0.0.1-SNAPSHOT.jar</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761555870553-58ec79b3-f2de-4891-8776-342f722e0edb.png"></p><p>好运行起来了</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761555895898-7d6a260e-8e2c-4766-a40d-a91b2220e4f2.png"></p><p>现在我们在这边访问192.168.244.3:8080就会自动跳转到这个地方了</p><p>（192.168.244.3是ifconfig查的）</p><p>我们可以看到账号写的是18288888888，我们拿这个去暴搜一下看看有没有用户名</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761556169223-c67941fa-90ea-4b8d-8e45-163ff4fb7998.png"></p><p>但题目问的是昵称，一眼很可能写张三，但不对</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761556259008-f0f1753b-6854-4d2d-837f-f33b799c4c18.png"></p><p>应该回过去去用户表里看，就可以发现张三是用户名，真正的昵称是三弟</p><p>所以答案是三弟</p><h2 id="20-分析嫌疑人的云服务器B，位于南京市江宁区的货物仓库存有多少个产品？（答案格式：123）"><a href="#20-分析嫌疑人的云服务器B，位于南京市江宁区的货物仓库存有多少个产品？（答案格式：123）" class="headerlink" title="20. 分析嫌疑人的云服务器B，位于南京市江宁区的货物仓库存有多少个产品？（答案格式：123）"></a><strong>20. 分析嫌疑人的云服务器B，位于南京市江宁区的货物仓库存有多少个产品？（答案格式：123）</strong></h2><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761556366993-009da896-b47c-41bc-825b-163b886b22f8.png"></p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761556354664-d364a8c3-01d7-4405-9799-d52f00105e8f.png"></p><p>首先在仓库信息表可以确定南京江宁仓库id为2</p><p>然后问的是库存，我们去库存表里搜</p><p><img src="/2025SPC%E9%80%89%E6%8B%94%E8%B5%9B/1761556406728-931520be-a6ea-487b-b676-6436b2389c0b.png"></p><p>仓库id为2的有三个</p><p>全部加起来</p><p>21626</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>XYCTF</title>
    <link href="/2025/10/28/XYCTF/"/>
    <url>/2025/10/28/XYCTF/</url>
    
    <content type="html"><![CDATA[<p>（回忆一些有想法的但是没做出来的题目）</p><p><img src="/XYCTF/1756396107918-c2abaa79-e013-4efd-940e-a25f90eb30c1.png"></p><p>找到复盘的地方了，有机会复盘一下，好歹是人生中第一个打的CTF</p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="会飞的雷克萨斯"><a href="#会飞的雷克萨斯" class="headerlink" title="会飞的雷克萨斯"></a>会飞的雷克萨斯</h2><p>题目：<font style="color:rgb(118, 190, 255);">2025年1月30日W1ndys上网冲浪时，收到了舍友发来的聊天记录，聊天记录显示，一小孩放鞭炮引爆地面，请定位爆炸点的具体位置，该题解出需要通过正常的osint题目做题思路</font></p><p>是一题正常的osint题目</p><p>在csdn了解到OSINT代表开源网络情报，许多题目大致是给一张照片然后询问图片经纬值的类型，他的经纬度精确到小数点后五位就是这道题的flag。</p><p>但是这道题显然给了flag格式，不需要太麻烦</p><p>图片的事件很显然是130的爆竹事件，很新的新闻，一搜很容易跳出答案是在<font style="color:rgb(31,35,41);">四川内江市资中县⽔南镇春岚北路，但是说在****内，脑子抽了怎么写都不对，什么中铁停车场内，草地里莫名其妙试了半天</font><img src="/XYCTF/1744194985193-021f56a0-99e7-442b-83f7-b5e065adb1fb.png"></p><p>其实只需要根据下图中的小东十七店名一搜就知道了，搜一下号码，地址便跳出来了</p><p><img src="/XYCTF/1744195226310-84a36e01-e62a-474f-a91f-e2660eeeb61e.png"></p><p>可以看到地址写的是城市中心内</p><p><img src="/XYCTF/1744194441723-8cfbb12c-962d-43ca-9204-3debbfe75a8e.png"></p><p>所以flag出来了，就是<font style="color:rgb(31,35,41);">XYCTF{四川内江市资中县⽔南镇春岚北路城市中⼼内}，真的是最简单的一题了（）</font></p><p><font style="color:rgb(31,35,41);"></font></p><h2 id="sins"><a href="#sins" class="headerlink" title="sins"></a><font style="color:rgb(31,35,41);">sins</font></h2><p><font style="color:rgb(106, 115, 125);">“Come now, let us settle the matter,” says the LORD. “Though your sins are like scarlet, they shall be as white as snow; though they are red as crimson, they shall be like wool. - Isaiah 1:18</font></p><p>题目怪中二的，附件是一个python文件，其实环境也就是运行了这个文件吧（大概？）</p><p><img src="/XYCTF/1744196456828-d1530616-3b48-4576-aee1-7dff20cf86a7.png"></p><p>看这个python程序，大致是需要我输入一个只包含“i0123456789+-*%&#x2F;……&#x3D;《》~&amp;|：（）【】”的字符串，长度要在16以内</p><p>别的看不懂了</p><p>先看看lambda函数和eval函数：</p><h5 id="lambda函数："><a href="#lambda函数：" class="headerlink" title="lambda函数："></a>lambda函数：</h5><p><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">Python 使用 </font><strong><font style="color:rgb(51, 51, 51);background-color:rgb(236, 234, 230);">lambda</font></strong><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);"> 来创建匿名函数。</font></p><p><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">lambda 函数是一种小型、匿名的、内联函数，它可以具有任意数量的参数，但只能有一个表达式。</font></p><p><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">匿名函数不需要使用</font><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);"> </font><strong><font style="color:rgb(51, 51, 51);background-color:rgb(236, 234, 230);">def</font></strong><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);"> </font><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">关键字定义完整函数。</font></p><p><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">lambda 函数通常用于编写简单的、单行的函数，通常在需要函数作为参数传递的情况下使用，例如在 map()、filter()、reduce() 等函数中。</font></p><p><strong><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">lambda 语法格式：</font></strong></p><p><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">lambda arguments: expression</font></p><ul><li><code>&lt;font style=&quot;color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);&quot;&gt;lambda&lt;/font&gt;</code><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">是 Python 的关键字，用于定义 lambda 函数。</font></li><li><code>&lt;font style=&quot;color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);&quot;&gt;arguments&lt;/font&gt;</code><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);"> </font><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">是参数列表，可以包含零个或多个参数，但必须在冒号(</font><code>&lt;font style=&quot;color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);&quot;&gt;:&lt;/font&gt;</code><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">)前指定。</font></li><li><code>&lt;font style=&quot;color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);&quot;&gt;expression&lt;/font&gt;</code><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);"> 是一个表达式，用于计算并返回函数的结果。</font></li></ul><h5 id="eval函数"><a href="#eval函数" class="headerlink" title="eval函数"></a>eval函数</h5><p><strong><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">eval()</font></strong><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);"> </font><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">函数用来执行一个字符串表达式，并返回表达式的值。</font></p><p><strong><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">字符串表达式</font></strong><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">可以包含变量、函数调用、运算符和其他 Python 语法元素。</font></p><h6 id="语法"><a href="#语法" class="headerlink" title="语法"></a><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">语法</font></h6><p><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">以下是 eval() 方法的语法:</font></p><p>eval(expression[, globals[, locals]])</p><h6 id="参数"><a href="#参数" class="headerlink" title="参数"></a><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">参数</font></h6><ul><li><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">expression – 表达式。</font></li><li><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">globals – 变量作用域，全局命名空间，如果被提供，则必须是一个字典对象。</font></li><li><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">locals – 变量作用域，局部命名空间，如果被提供，可以是任何映射对象。</font></li></ul><p><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);">eval() 函数将字符串 expression 解析为 Python 表达式，并在指定的命名空间中</font></p><p><font style="color:rgb(51, 51, 51);background-color:rgb(250, 252, 253);"></font></p><p>因此很显然啊，这题其实eval就是在执行lambda这个函数，用空字典作为 globals 和 locals，而这个lambda函数还是个带参数i的，命名了一个{inp}的函数</p><p><del>好了后边看不懂了，我放弃了（答案是~~~~<font style="color:rgb(43,47,54);">f &#x3D; </font>~~~~<font style="color:rgb(166,38,164);">lambda </font>~~~~<font style="color:rgb(43,47,54);">i:</font>~~~~<font style="color:rgb(80,161,79);">‘1i–’</font>~~~~<font style="color:rgb(43,47,54);">[i%</font>~~~~<font style="color:rgb(152,104,1);">4</font>~~~~<font style="color:rgb(43,47,54);">::-</font>~~~~<font style="color:rgb(152,104,1);">2</font>~~~~<font style="color:rgb(43,47,54);">] </font>~~~~<em><font style="color:rgb(160,161,167);"># 15）</font></em></del></p><h2 id="签个到吧"><a href="#签个到吧" class="headerlink" title="签个到吧"></a><font style="color:rgb(0, 0, 0);">签个到吧</font></h2><p><font style="color:rgb(118, 190, 255);">题目：最小的，具有图灵完备性的语言是？</font></p><p>由提示易得这是个brainfuck语句，打开来一看也确实，但是喂给ai屁用没有（我现在发现文件名bf也在暗示就是这种语言）</p><p><img src="/XYCTF/1744198872999-a0213f84-a39f-46d7-a2dc-eff2d6af6466.png"></p><p>对于brainfuck而言，字符含义如下<img src="/XYCTF/1744198938045-baff40fa-3dff-48a4-898c-878521958f12.png"></p><h3 id="思路一"><a href="#思路一" class="headerlink" title="思路一"></a>思路一</h3><p>可以发现，所有的brainfuck都没有输出符，所以肯定是解不出来的，很多在线的brainfuck解密网址也都无法解密，跟其格式不对有关，只需在所有[-]前边加上输出符号.即可</p><p>“[-]”结构实际上是Brainfuck中的一个常见惯用语法。因为“[-]”的作用是将当前指针所在的单元清零。具体来说，循环会一直执行，直到当前单元的值为零。在循环内部，每次都会将当前单元减1，所以只要当前单元不为零，就会一直减到零为止。因此，无论当前单元的值是多少，执行“[-]”后都会变成0。</p><p>在每个“[-]”前面加上输出符号“.”，也就是变成“.[-]”。这里的“.”在Brainfuck中是输出命令，作用是将当前单元的值作为ASCII字符输出。所以，每次执行“.[-]”的时候，会先输出当前单元的值，然后将该单元清零。</p><p>因此这样子之后放入brainfuck解密网址即可解出flag（当然也能用脚本）</p><p><img src="/XYCTF/1744199618870-26496674-8616-4541-b77c-219378529f26.png"></p><h3 id="思路二"><a href="#思路二" class="headerlink" title="思路二"></a>思路二</h3><p>在发现无法解开后用在线网站<a href="https://copy.sh/brainfuck/"><font style="color:rgb(230, 116, 116);">https://copy.sh/brainfuck/</font></a> 看一下它的一个生成代码</p><p>把代码丢给ds可以直接分析出flag</p><p><img src="/XYCTF/1744199780421-1bd73c99-ea1a-4b91-a0f1-84b7ba881e0c.png"></p><p>（为什么我的ds不能，我不理解，算了）（你的ds我的ds好像不一样）</p><p>flag{W3lC0me_t0_XYCTF_2025_Enj07_1t!}</p><h2 id="XGCTF"><a href="#XGCTF" class="headerlink" title="XGCTF"></a>XGCTF</h2><p><font style="color:rgb(118, 190, 255);">题目：2024年CTFshow举办了一场名为“西瓜杯”的比赛（XGCTF）。其中LamentXU在出题的时候，从某场比赛拉了道原题下来改了改，结果传文件的时候传错了传成原题了。因为这件事LamentXU的损友dragonkeep在他之前的博客上的原题wp上加了一段flag来嘲笑LamentXU。请你找到XGCTF中唯一由LamentXU出的题，并找出这题对应的原题，接着找到dragonkeep师傅的博客，并从博客上讲解该题的博文中找到flag。（hint：dragonkeep师傅因为比较穷买不起域名，因此他博客的域名在dragonkeep的基础上多了个字母）</font></p><p>直接一步步走就好，这题也不难，先找原题（题目不多，一翻马上就翻到了）</p><p><img src="/XYCTF/1744199922631-378b65cc-ddc6-4caf-b2be-360c400aadca.png"></p><p>然后我再去了csdn搜了一下wp</p><p><img src="/XYCTF/1744200037226-84438760-f420-40e9-9a36-aa851b6e284a.png"></p><p>就看到了这样子的一段话，这题是CISCN华东南里边的，然后就去搜了搜CISCN的题目，很容易就找到了原题名为“pollute”</p><p>直接搜索，如下图</p><p><img src="/XYCTF/1744200312562-a54e20d3-a292-4d5b-9496-28364b913f38.png"></p><p>一下子就找到Dragonkeep师傅的老巢了，域名多个字母，对上了</p><p>（然后我在这篇文章里读了半个小时什么都没看出来，浪费时间来的）</p><p>还是谢晨师傅教的</p><p>按住Ctrl+U，查看网页源代码，就能找到这个flag了</p><p><img src="/XYCTF/1744200413375-11f6125f-a931-499b-9554-dde572a150ce.png"></p><p>一看就是base64解密，扔进去就有了</p><p><img src="/XYCTF/1744200468623-478a1af6-66f6-4584-92b0-cfede4a8120b.png"></p><p>flag{1t_I3_t3E_s@Me_ChAl1eNge_aT_a1L_P1e@se_fOrg1ve_Me}</p><h2 id="MADer也要当CTFer"><a href="#MADer也要当CTFer" class="headerlink" title="MADer也要当CTFer"></a><font style="color:rgb(0, 0, 0);">MADer也要当CTFer</font></h2><p><img src="/XYCTF/1757056361277-f6336a97-99fc-4d71-9f6c-811ab86604a2.png"></p><p>打开文件是个视频（挺好看还）</p><p>当初用的媒体播放器看不出来啥，一头雾水，只发现了视频时长不对劲，五六个小时的东西那么快就结束了</p><p><img src="/XYCTF/1744201395993-297e49cd-3fb5-47f9-85bd-47de0d996d05.png"></p><p>利用potplayer后直接就能跳出这些字幕</p><p>可以看得出来这些字幕是十六进制的，于是考虑应该先提取字幕</p><p>这边利用的是提示的小丸工具箱我们直接导出（用ffmpeg应该也行，但小丸方便一些）</p><p><img src="/XYCTF/1757056398892-05ad2158-850d-49dd-b867-5e5cd8a757e8.png"></p><p>在抽取界面直接用第三方工具抽取</p><p><img src="/XYCTF/1757056620290-453f6e13-557e-4748-8f4f-db9e186febb1.png"></p><p>这边直接提取字幕</p><p><img src="/XYCTF/1757056641378-2e3f7252-3033-44e1-9dfb-d39188c374f4.png"></p><p>是一个这样子的内容，是一个ass文件，我们编写脚本提取十六进制</p><p><img src="/XYCTF/1757056671272-27139045-7ab6-4257-bb76-b5bb71fe6b89.png"></p><p><img src="/XYCTF/1757056687991-19e1125f-223a-4ad1-8e18-bbdc03515013.png"></p><p>这边直接输出到txt文件（因为太多了，控制台复制粘贴看不全）</p><p><img src="/XYCTF/1757056742259-fa663adb-9f32-4745-bc88-27cd0e6d62b8.png"></p><p>可以看到完整的十六进制内容，我们直接把十六进制转ASCII一下</p><p><img src="/XYCTF/1757056888048-00d02dd7-3b40-4d92-b3e4-b7757d1da232.png"></p><p>RIFX不太认识是什么文件，ai阅读后得出为ae的文件</p><p><img src="/XYCTF/1757072884372-261defce-3bb0-428e-a311-94524e521616.png"></p><p>我们下载AE扔进去</p><p>把后缀改为.aep后用AE打开</p><p>显示缺插件，AE真的是玩不来</p><p>其实在notepad里直接打开找有意义的leet编码内容就能找到了（我照着别人的复盘的，大都是这样子做的，可是我真的找不到，我也不知道为什么）</p><p><img src="/XYCTF/1757074539144-9d449234-cf49-4c95-88f6-18e4c0ae193c.png"></p><p> flag{l_re@IIy_w@nn@_2_Ie@rn_AE}</p><h2 id="喜欢就说出来"><a href="#喜欢就说出来" class="headerlink" title="喜欢就说出来"></a><font style="color:rgb(0, 0, 0);">喜欢就说出来</font></h2><p><img src="/XYCTF/1747743947651-9afa71e4-efe1-4b65-aec2-0b1d388f519e.png"></p><p>题目附件给的是一个流量包，因此直接扔给wireshark先看看</p><p>说是通过浏览器传递的，因此导出http看看</p><p><img src="/XYCTF/1747744083719-15b8f20d-1141-4eea-bf65-c3e80a62bbd7.png"></p><p><img src="/XYCTF/1747744099453-82cc451a-d937-4c42-9ce4-4b85857722fe.png"></p><p>发现有一个php文件</p><p><img src="/XYCTF/1747744228360-47899053-7e2d-4737-9330-72cad8e312c6.png"></p><p>利用winhex打开后这个php文件里竟然有png的文件头</p><p>先利用16进制编译器把png文件头<font style="color:rgb(255, 20, 147);">89 50 4E 47 0D 0A 1A 0A</font>之前的给删掉</p><p><img src="/XYCTF/1747830077530-4f672739-c0e3-4d10-acc4-afad7c1d9b9f.png"></p><p><img src="/XYCTF/1747830055163-e54236f9-d07d-4900-9bc0-3909ffd7a580.png"></p><p>得到png文件，用TweakPNG打开后观察其格式</p><p><img src="/XYCTF/1747830046632-56bafe7f-2996-4fa3-8682-4363edec1cab.png"></p><p>发现这玩意两个文件头，是两张png文件合二为一的产物<br> 可以看到两个文件头，肯定是要分开来处理的</p><p>:::info<br><del>（这里就是我最不能理解的一个点了，我尝试了去研究IDAT的顺序规律，没找到有规律可言，我又查了CRC，也就是一个检验png是否被篡改的罢了，只能用于检测数据传输中的错误。别人的wp说是不难的，一个一个摆正位置直到图片显示完整，难不成只能靠人力一个个试？？？问题是我试过了顺序不对也是变不成这个照片的，这就很麻烦，又要有删减，又要有位置的固定，必须试到这一个顺序和数目都对的可能性，是不是有什么我漏掉的线索？？？）</del></p><p><del>（如果是这个短的其实倒还好，这个只要把长度为65536的IDAT都拉出来然后加一个53749的即可，顺序也不用改，但这是第二个头）</del></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs"><br></code></pre></td></tr></table></figure><p>解决了，感谢何神，我怎么没想到</p><p><img src="/XYCTF/1747962560894-d463816c-19cc-433d-91c6-acfe2055c1a6.png"></p><p>只要留个头留个尾，然后一个个块看就好了，然后很快就能像拼拼图一样拼好了</p><p><img src="/XYCTF/1747962816950-43b4351c-dfae-473d-9b2d-aa93a769b029.png"></p><p>就像这样子，但是这个图片不修完没法放到stegsolve里，所以还是得一个个试然后拼成好的一张</p><p><img src="/XYCTF/1747962896643-d23b2d45-8c6a-4cd3-8610-6e218ccba6e9.png"></p><p>当然了，选错文件头的话就什么都没有了，是一段乱码</p><p>:::</p><p><img src="/XYCTF/1747915843921-e3c907e0-8dee-4823-95e7-787e3bfa7ef1.png"></p><p><img src="/XYCTF/1747916425085-64d8ff43-af2e-44a4-9d86-0c86d00a52e7.png"></p><p>这样先处理好第一张</p><p><img src="/XYCTF/1747915007518-dff46548-efe6-4e51-98ee-117307e3f4b7.png"></p><p><img src="/XYCTF/1747916432361-7915d99b-d5df-4192-af74-7404fe4cf5eb.png"></p><p>然后是第二张</p><p>可以发现第二张上边存在着一串flag，但是只有前半部分，不难猜到后半部分应该在另一张照片上</p><p><img src="/XYCTF/1747916717203-c02a2989-3438-4950-855e-967c4501a077.png"></p><p>积累：这边可以根据ps调参看一下是不是有什么奇怪的地方，如此处的像素点（其实我刚刚试了图片预览也可看见，就是直接拉大，可以看到，就看能不能想到了）</p><p><img src="/XYCTF/1747916910357-a9f2dcb4-0d13-4093-b578-b1242ad2cfe0.png"></p><p>最后根据原本的题目提示，520恰好出现在stegslove的extract preview里，尝试勾选plans后出现flag后半段，即ta_G@_t0kubetsu_Suki!!!}</p><p><img src="/XYCTF/1747916885608-935bda21-395e-4a33-9fa6-dd6e81928c71.png"></p><p>得解</p><p>flag{WatAshl_W@_anAta_G@_t0kubetsu_Suki!!!}</p><h6 id=""><a href="#" class="headerlink" title=""></a></h6><h2 id="曼波曼波曼波"><a href="#曼波曼波曼波" class="headerlink" title="曼波曼波曼波"></a>曼波曼波曼波</h2><p><img src="/XYCTF/1757074738422-dc17d330-fe2d-4bc3-8c4f-8ce99ad89d05.png"></p><p>我已经不记得当时有没有做这道题了，肯定是没做出来，但是也不记得有没有做了（）</p><p><img src="/XYCTF/1757074904652-d2b26a4b-d7fd-4fc1-b88d-196199db2ebb.png"></p><p>拿到是俩文件，一个txt一个png</p><p>先看png</p><p><img src="/XYCTF/1757075611407-a3079da4-79f8-414b-bef2-43388f79a5c2.png"></p><p>是个假flag，按我出题经验就是故意搞了个这样子的二维码，但是绝对藏东西了，否则毫无意义（真特么什么都没藏，打我脸来了，没东西放附件来干啥，就恶心一小下吗）</p><p>binwalk没东西，lsb也没东西，那我们先略过</p><p><img src="/XYCTF/1757074992343-14b3ca1e-deee-403f-b3e9-f8f4deac8f76.png"></p><p>txt打开很像很像base64，而且像反过来的</p><p>我们直接编写脚本反着走一遍</p><p><img src="/XYCTF/1757075475214-b64a8cc3-196c-4ced-803d-3283c2286e22.png"></p><p>放入cyberchef，果然有文件产出，看起来是jpg</p><p><img src="/XYCTF/1757075466469-7336d70d-64b5-4d54-bcfb-47b7d089a260.png"></p><p><img src="/XYCTF/1757075520073-62bf9b73-484d-4da1-999d-63d24a796168.png"></p><p>那我们直接改后缀</p><p><img src="/XYCTF/1757075560351-5e2bcb7e-ebf5-44cf-aee8-b9abcb8918cc.jpeg"></p><p>是我们曼波，那题目的提示也是用完了</p><p><img src="/XYCTF/1757075837252-a66e54a6-8908-47d7-a7d6-34ede6878297.png"></p><p>这jpg藏的东西有点多啊（）</p><p>我们foremost一下</p><p><img src="/XYCTF/1757075870475-d51f9dd1-731c-41d3-bf8a-2eed37b86dee.png"></p><p>是一个有仨文件的压缩包</p><p><img src="/XYCTF/1757075922362-8e97d227-4033-4392-afad-84a76e07d837.png"></p><p><img src="/XYCTF/1757075940706-ed7aca53-bc9b-44a4-a922-d832ac63b3cf.png"></p><p><img src="/XYCTF/1757075954308-7028ee9d-7218-4dc8-92cb-f80ffe421f96.png"></p><p>一个png，一个加密的压缩包，一个提示词</p><p>那我们直接用XYCTF2025试试看解密</p><p>解开来还是这样子一张png，绝对是跟双图有关</p><p><img src="/XYCTF/1757076018330-80a04cee-3fbe-407d-83e1-884b3ee3abd9.png"></p><p><img src="/XYCTF/1757076320476-62f552b4-986b-4800-b2c9-602cd1b8e65d.png"></p><p>这边是双图盲水印，其实我还是第一次遇到</p><p>XYCTF{easy_yin_xie_dfbfuj877}(光是看着这水印输眼睛都要瞎掉了)</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2025fic初赛复盘</title>
    <link href="/2025/10/28/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/"/>
    <url>/2025/10/28/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/</url>
    
    <content type="html"><![CDATA[<h2 id="第一部分-网页快照"><a href="#第一部分-网页快照" class="headerlink" title="第一部分 网页快照"></a>第一部分 网页快照</h2><h3 id="1-请分析检材一，该取证录像文件的-SHA256-值为"><a href="#1-请分析检材一，该取证录像文件的-SHA256-值为" class="headerlink" title="1. 请分析检材一，该取证录像文件的 SHA256 值为"></a><strong><font style="color:rgb(96, 98, 102);">1. 请分析检材一，该取证录像文件的 SHA256 值为</font></strong></h3><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746085555008-35a506f7-783d-46cd-bff0-8f3f1b05f90a.png"></p><p>常规题，直接放到hashtool一搜就好了，答案为：2753DA22FE23CADAADC14FE4C1D5096A153360D9F91097EA376846431F5C1567</p><h3 id="2-请分析检材一，远程取证所使用的-OBS-工具版本号为"><a href="#2-请分析检材一，远程取证所使用的-OBS-工具版本号为" class="headerlink" title="2. 请分析检材一，远程取证所使用的 OBS 工具版本号为"></a><strong><font style="color:rgb(96, 98, 102);">2. 请分析检材一，远程取证所使用的 OBS 工具版本号为</font></strong></h3><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746085631814-d0b40fab-a8bf-4238-a7a6-61c2787ef77b.png"></p><p>视频开头就是，29.1.3</p><h3 id="3-请分析检材一，该检材所使用的远程取证的工具名称为"><a href="#3-请分析检材一，该检材所使用的远程取证的工具名称为" class="headerlink" title="3. 请分析检材一，该检材所使用的远程取证的工具名称为"></a><strong><font style="color:rgb(96, 98, 102);">3. 请分析检材一，该检材所使用的远程取证的工具名称为</font></strong></h3><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746085671730-a91c469a-82c3-4d6c-bb5e-3a8c394efe4f.png"></p><p>如图，显然是网镜，选A</p><h3 id="4-请分析检材一，在该检材中，远程取证过程中校验的北京时间为"><a href="#4-请分析检材一，在该检材中，远程取证过程中校验的北京时间为" class="headerlink" title="4. 请分析检材一，在该检材中，远程取证过程中校验的北京时间为"></a><strong><font style="color:rgb(96, 98, 102);">4. 请分析检材一，在该检材中，远程取证过程中校验的北京时间为</font></strong></h3><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746085729684-5bd2e703-a157-4a74-b978-ed11fda641da.png"></p><p>如图，环境监测时间为13：36：18，所以答案为D</p><h3 id="5-请分析检材一，远程取证的网站-IP-地址为"><a href="#5-请分析检材一，远程取证的网站-IP-地址为" class="headerlink" title="5. 请分析检材一，远程取证的网站 IP 地址为"></a><strong><font style="color:rgb(96, 98, 102);">5. 请分析检材一，远程取证的网站 IP 地址为</font></strong></h3><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746085811703-c55749e9-a075-43af-8106-b8daf21d087e.png"></p><p>如图，IP地址为172.16.10.200</p><h3 id="6-请分析检材一，在该检材中，远程取证的网站密码为"><a href="#6-请分析检材一，在该检材中，远程取证的网站密码为" class="headerlink" title="6. 请分析检材一，在该检材中，远程取证的网站密码为"></a><strong><font style="color:rgb(96, 98, 102);">6. 请分析检材一，在该检材中，远程取证的网站密码为</font></strong></h3><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746085864621-eac6cd77-5e47-474b-a626-914e4cecfe14.png"></p><p>如图，admin123（甚至好心的帮忙打开了密码可见）</p><p>（后边不做了）</p><h2 id="第二部分-手机取证"><a href="#第二部分-手机取证" class="headerlink" title="第二部分 手机取证"></a>第二部分 手机取证</h2><h3 id="请分析检材二，请分析”手机”检材，并回答，并回答该手机的device-name是？"><a href="#请分析检材二，请分析”手机”检材，并回答，并回答该手机的device-name是？" class="headerlink" title="请分析检材二，请分析”手机”检材，并回答，并回答该手机的device_name是？"></a><strong><font style="color:rgb(96, 98, 102);">请分析检材二，请分析”手机”检材，并回答，并回答该手机的device_name是</font></strong>？</h3><p>放到火眼去发现手机可以分析出IMEI值，根据IMEI值可以利用微信公众号得到一个手机的具体型号，因此答案如下：</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745753787251-9ed1035d-b67d-49f1-98d3-bb9b6d5c254d.png"></p><p>（我写的就是红米6 Pro，答案不知道批不批，别跟我说只有Redmi6 Pro才对）</p><h3 id="2-请分析检材二，请分析”手机”检材，并回答，嫌疑人pc开机密码是什么？"><a href="#2-请分析检材二，请分析”手机”检材，并回答，嫌疑人pc开机密码是什么？" class="headerlink" title="2. 请分析检材二，请分析”手机”检材，并回答，嫌疑人pc开机密码是什么？"></a><strong><font style="color:rgb(96, 98, 102);">2. 请分析检材二，请分析”手机”检材，并回答，嫌疑人pc开机密码是什么？</font></strong></h3><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745753924965-abc712fe-882b-48c4-bd03-fd9e5d5c2727.png"></p><p>便签里可以看见这些内容，当时有想到说可能去便签的数据库找一下内容</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745754166006-90c8060f-dae8-4a89-bd19-f4a4a881dc71.png"></p><p>其实都找到这个界面了。。我划了两下没看见走了，然后猜一二列是qazwsx（我服了）</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745754374952-78461dd4-ce4c-42cb-af09-35bd59ccf7e0.png"></p><p>其实在里边，pc密码直接出来了，就是1qaz2wsx</p><h3 id="3-请分析检材二，请分析”手机”检材，并回答，嫌疑人接头暗号是什么？"><a href="#3-请分析检材二，请分析”手机”检材，并回答，嫌疑人接头暗号是什么？" class="headerlink" title="3. 请分析检材二，请分析”手机”检材，并回答，嫌疑人接头暗号是什么？"></a><strong><font style="color:rgb(96, 98, 102);">3. 请分析检材二，请分析”手机”检材，并回答，嫌疑人接头暗号是什么？</font></strong></h3><p>跟上边的数据库有关，上边的没找到所以后边的也没有（）</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745754374952-78461dd4-ce4c-42cb-af09-35bd59ccf7e0.png"></p><p>如图，接头暗号应该是</p><p>{“note”:[{“format”:”HEADING”,”text”:”接头暗号”},{“format”:”IMAGE”,”text”:”ub690t1mq9kelnah.png”},{“format”:”CHECKLIST_UNCHECKED”,”text”:”说上述暗号”}</p><p>即一张文本命名为ub690t1mq9kelnah.png的图片</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745754535496-c3c0d5d3-7ebf-4996-963c-dfe3d91611ad.png"></p><p>OCR一下</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745754517362-68f51aea-5dea-4e7f-83fc-f75fbceada79.png"></p><p>直接出来了</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745754555987-9c27d838-60b6-421f-9d31-2937f3b1f8bd.png"></p><h3 id="4-请分析检材二，请分析”手机”检材，并回答，嫌疑人存放的秘钥环是多少？"><a href="#4-请分析检材二，请分析”手机”检材，并回答，嫌疑人存放的秘钥环是多少？" class="headerlink" title="4. 请分析检材二，请分析”手机”检材，并回答，嫌疑人存放的秘钥环是多少？"></a><strong><font style="color:rgb(96, 98, 102);">4. 请分析检材二，请分析”手机”检材，并回答，嫌疑人存放的秘钥环是多少？</font></strong></h3><p>直接搜索秘钥环，全局检索，直接就出来了是1qaz2ws3edc（我考试为什么没有想出来呢奇了怪了）</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745755014791-4242426c-b805-4319-a402-1e761b38f300.png"></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745755003136-6176c0ca-1d7e-4737-a007-928ce04927bc.png"></p><h3 id="5-请分析检材二，请分析”手机”检材，并回答，嫌疑人一生中最重要的日子是什么时候？"><a href="#5-请分析检材二，请分析”手机”检材，并回答，嫌疑人一生中最重要的日子是什么时候？" class="headerlink" title="5. 请分析检材二，请分析”手机”检材，并回答，嫌疑人一生中最重要的日子是什么时候？"></a><strong><font style="color:rgb(96, 98, 102);">5. 请分析检材二，请分析”手机”检材，并回答，嫌疑人一生中最重要的日子是什么时候？</font></strong></h3><p>这个简单，这个写出来了，就在手机里有关倒数日软件，或者是在OCR里直接搜重要的日子即可</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745755111090-2eedcbc4-f6bf-4155-85e2-50ee6e5144fd.png"></p><p>直接</p><p>可以看到</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745755132044-4499e4d8-888f-47dd-8f80-4685f2bff98d.png"></p><p>所以是2026.2.26</p><h3 id="6-请分析检材三，请分析”手机”检材，并回答，嫌疑人微信生成的聊天记录数据库文件名称是什么？"><a href="#6-请分析检材三，请分析”手机”检材，并回答，嫌疑人微信生成的聊天记录数据库文件名称是什么？" class="headerlink" title="6. 请分析检材三，请分析”手机”检材，并回答，嫌疑人微信生成的聊天记录数据库文件名称是什么？"></a><strong><font style="color:rgb(96, 98, 102);">6. 请分析检材三，请分析”手机”检材，并回答，嫌疑人微信生成的聊天记录数据库文件名称是什么？</font></strong></h3><p>这个常识题啊，但是跳转到源文件其实也一样，反正都能知道</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745755192629-f7052f38-82d2-4876-8f07-61b5aa1e6652.png"></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745755182871-9de5a4fc-89c3-4b17-8951-59f531b05772.png"></p><p>就是EnMicroMsg.db</p><h3 id="7-请分析检材二，请分析”手机”检材，并回答，嫌疑人微信账号对应的-UIN-为多少？"><a href="#7-请分析检材二，请分析”手机”检材，并回答，嫌疑人微信账号对应的-UIN-为多少？" class="headerlink" title="7. 请分析检材二，请分析”手机”检材，并回答，嫌疑人微信账号对应的 UIN 为多少？"></a><strong><font style="color:rgb(96, 98, 102);">7. 请分析检材二，请分析”手机”检材，并回答，嫌疑人微信账号对应的 UIN 为多少？</font></strong></h3><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745755261024-a03e9fee-d062-4851-85c8-6a8b1ab4b2c9.png"></p><p>如图可以直接看，当然也可以向我下边一样找到老巢<font style="color:rgb(113, 119, 125);">&#x2F;data&#x2F;data&#x2F;com.tencent.mm&#x2F;shared_prefs&#x2F;system_config_prefs.xml</font></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745755336401-46cdb3cc-ebe9-42cf-9d0c-0e3f6ba3549f.png"></p><p>也一样</p><h3 id="8-请分析检材二，请分析”手机”检材，并回答，嫌疑人微信聊天记录数据库的加密秘钥是什么？"><a href="#8-请分析检材二，请分析”手机”检材，并回答，嫌疑人微信聊天记录数据库的加密秘钥是什么？" class="headerlink" title="8. 请分析检材二，请分析”手机”检材，并回答，嫌疑人微信聊天记录数据库的加密秘钥是什么？"></a><strong><font style="color:rgb(96, 98, 102);">8. 请分析检材二，请分析”手机”检材，并回答，嫌疑人微信聊天记录数据库的加密秘钥是什么？</font></strong></h3><p>知道uin了，直接用小工具（可惜我比赛后才下，比赛的时候搜到说是uin+imei然后md5加密再取前7位，因为有俩imei所以我用的是meid，我还以为对了）</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745755465941-ac5a3ee6-fb50-4701-a462-d0a5be44978d.png"></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745755549913-d1c57184-1438-4411-a3f7-60b8d4251786.png"></p><p>直接就出答案了（比赛前怎么不知道）</p><h3 id="9-请分析检材二，请分析”手机”检材，并回答，嫌疑人“欠条-rar”的解压密码是多少？"><a href="#9-请分析检材二，请分析”手机”检材，并回答，嫌疑人“欠条-rar”的解压密码是多少？" class="headerlink" title="9. 请分析检材二，请分析”手机”检材，并回答，嫌疑人“欠条.rar”的解压密码是多少？"></a><strong><font style="color:rgb(96, 98, 102);">9. 请分析检材二，请分析”手机”检材，并回答，嫌疑人“欠条.rar”的解压密码是多少？</font></strong></h3><p> 最痛苦的一题，但凡做出来后边还能对不少<br>在微信里找到相关聊天记录，回到原位置</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745756806098-bcbe0160-485f-49bc-9851-69f6cf9ab06e.png"></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745756860712-61905ff6-2370-412a-8e2d-472685c0b32b.png"></p><p>可以看到有两张图片，怀疑是图片拼接题</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745756790995-c3c8a62d-dc57-4b7e-b333-91551164db37.png"></p><p>果然可以找到一个二维码</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745757098088-f7bd9187-19bc-446a-ae52-1c40b6007771.png"></p><p>如图，得到陈某的电话13170010703，也是欠条的密码：3170010703</p><p>（也能这样子做）</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746090976722-40aea66c-a372-427c-a72f-b70ab2d1c9fc.png"></p><h3 id="10-请分析检材二，请分析”手机”检材，并回答，嫌疑人“欠条-rar”解压后，其中VeraCrypt容器的MD5值是多少？"><a href="#10-请分析检材二，请分析”手机”检材，并回答，嫌疑人“欠条-rar”解压后，其中VeraCrypt容器的MD5值是多少？" class="headerlink" title="10. 请分析检材二，请分析”手机”检材，并回答，嫌疑人“欠条.rar”解压后，其中VeraCrypt容器的MD5值是多少？"></a><strong><font style="color:rgb(96, 98, 102);">10. 请分析检材二，请分析”手机”检材，并回答，嫌疑人“欠条.rar”解压后，其中VeraCrypt容器的MD5值是多少？</font></strong></h3><p>纯送分，第九题解出来就简单了</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745757394485-d3a209e2-6b5e-4d03-acc5-9f4330947e26.png"></p><h3 id="11-请分析检材二，请分析”手机”检材，并回答，嫌疑人提供的“欠条-rar”解压后，其中”1-png”图上显示的VeraCrypt容器密码是多少？"><a href="#11-请分析检材二，请分析”手机”检材，并回答，嫌疑人提供的“欠条-rar”解压后，其中”1-png”图上显示的VeraCrypt容器密码是多少？" class="headerlink" title="11. 请分析检材二，请分析”手机”检材，并回答，嫌疑人提供的“欠条.rar”解压后，其中”1.png”图上显示的VeraCrypt容器密码是多少？"></a><strong><font style="color:rgb(96, 98, 102);">11. 请分析检材二，请分析”手机”检材，并回答，嫌疑人提供的“欠条.rar”解压后，其中”1.png”图上显示的VeraCrypt容器密码是多少？</font></strong></h3><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745757638859-61c75d28-0a9a-4005-8106-a5fce4381f19.png"></p><p>可以看到屏幕当中有一串字符，应该是相关的密码，其实我觉得挺清楚的，但是也可以对比度加强点啥的</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745757835048-432f7f16-241f-4e07-871e-fcb0b3e42e85.jpeg"></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745757813792-e65949ff-073a-4444-9f90-36050be4f918.jpeg"></p><p>确实会更清楚点</p><p>反正是这个<font style="color:rgb(51, 51, 51);">#!@KE2sax@!da0h5hghg34&amp;@</font></p><h3 id="12-请分析检材二，请分析”手机”检材，并回答，嫌疑人李某全名是什么？"><a href="#12-请分析检材二，请分析”手机”检材，并回答，嫌疑人李某全名是什么？" class="headerlink" title="12. 请分析检材二，请分析”手机”检材，并回答，嫌疑人李某全名是什么？"></a><strong><font style="color:rgb(96, 98, 102);">12. 请分析检材二，请分析”手机”检材，并回答，嫌疑人李某全名是什么？</font></strong></h3><p><font style="color:rgb(51, 51, 51);">李某全名根据那张在欠条vc里的图片可以直接看到是</font></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745760239791-57dfda34-3b31-42d4-85a5-7cf473cf8df7_1.png"></p><p>所以李某可知为李安弘，陈某为陈浩北（可以解下边的题目）</p><p>其实这道题不用解出欠条也能知道（）</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745760319690-89a50569-560e-439b-86ad-0d93eef0ce5d.png"></p><p>毕竟案件背景里直接写了嫌疑人叫李安弘</p><h3 id="13-请分析检材二，请分析”手机”检材，并回答，嫌疑人欠款金额是多少？"><a href="#13-请分析检材二，请分析”手机”检材，并回答，嫌疑人欠款金额是多少？" class="headerlink" title="13. 请分析检材二，请分析”手机”检材，并回答，嫌疑人欠款金额是多少？"></a><strong><font style="color:rgb(96, 98, 102);">13. 请分析检材二，请分析”手机”检材，并回答，嫌疑人欠款金额是多少？</font></strong></h3><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745760239791-57dfda34-3b31-42d4-85a5-7cf473cf8df7.png"></p><p>如图，8w元（给我蒙对了，爽死我了）</p><p>（这次属于我所对标的手机取证到此为止，难度其实不高，主要在于没能发现两张图片可以通过stegstove发现二维码，如果找到这个的话可以多做很多题，可惜了，还有一些简单题没能做出来也蛮不应该的，唉，盘古石杯再接再厉吧）</p><h2 id="第三部分-介质取证"><a href="#第三部分-介质取证" class="headerlink" title="第三部分 介质取证"></a>第三部分 介质取证</h2><h3 id="1-请分析检材三，请分析”电脑”检材，并回答，该电脑最后一次开机时间是？"><a href="#1-请分析检材三，请分析”电脑”检材，并回答，该电脑最后一次开机时间是？" class="headerlink" title="1. 请分析检材三，请分析”电脑”检材，并回答，该电脑最后一次开机时间是？"></a><strong><font style="color:rgb(96, 98, 102);">1. 请分析检材三，请分析”电脑”检材，并回答，该电脑最后一次开机时间是？</font></strong></h3><p>如图，利用火眼先分析</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745832716131-f48b257e-6e14-4383-925b-dd30b8dce4e1.png"></p><p>所以最后一次开机应该是2025-04-14 11:49:47，选C</p><h3 id="2-请分析检材三，请分析”电脑”检材，并回答，嫌疑人的备用机号码是多少？"><a href="#2-请分析检材三，请分析”电脑”检材，并回答，嫌疑人的备用机号码是多少？" class="headerlink" title="2. 请分析检材三，请分析”电脑”检材，并回答，嫌疑人的备用机号码是多少？"></a><strong><font style="color:rgb(96, 98, 102);">2. 请分析检材三，请分析”电脑”检材，并回答，嫌疑人的备用机号码是多少？</font></strong></h3><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745833284946-b527bd70-1e40-4dbf-9317-47f00a76668c.png"></p><p>从火眼看发现根本没有手机号码，推测应该不是在火眼，先打开虚拟机，看看能否找到虚拟机中的便签软件</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745833552248-d271c0ae-8aaa-4ab0-b071-9cd73931f1a5.png"></p><p>发现确实有这玩意啊</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745833589800-526272e2-acaa-461b-b301-8e781c8cc3c7.png"></p><p>一个个打开来看看，也不多</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745833626628-98bc03e1-52f4-4fc7-9064-f89c1bf2d1b7.png"></p><p>看到这一个的时候其实一瞬间可以看到很大的数字，选中就清楚多了</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745833654953-4e8ae1b6-09b5-4da6-9f9f-0c7603c27cb3.png"></p><p>备用机号为18877332134</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745833791183-6d7845a2-8634-4fd6-a11f-357539e47521.png"></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745834037172-a40d54d8-c5c5-4e28-ae33-4301a0cfd0cf.png"></p><p>（上边不是白色的图，是查到备用机号之后我去火眼看了一眼，我发现火眼其实取证出来了，但是把这个颜色也带上了，眼力好的其实真能看见，做出来之后我瞄着能看清，拖一下的话倒是更清楚）</p><h3 id="3-请分析检材三，请分析”电脑”检材，并回答，域名dgy02-com曾保存过一个密码，该密码是多少？"><a href="#3-请分析检材三，请分析”电脑”检材，并回答，域名dgy02-com曾保存过一个密码，该密码是多少？" class="headerlink" title="3. 请分析检材三，请分析”电脑”检材，并回答，域名dgy02.com曾保存过一个密码，该密码是多少？"></a><strong><font style="color:rgb(96, 98, 102);">3. 请分析检材三，请分析”电脑”检材，并回答，域名dgy02.com曾保存过一个密码，该密码是多少？</font></strong></h3><p>打开虚拟机的Chrome，自己会跳出来这个（我为什么一心想在自己电脑上找？）</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745834733386-953d11df-230f-4fb1-bab0-a09671212435.png"></p><p>根据案件背景，这台电脑和手机同属于李某，手机上出现过秘钥环三字（在电脑上是怎么找都找不到的），填入</p><p>打开浏览器后选择右边侧栏的密钥管理</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745834889518-75c1ee17-1654-4e8b-80d5-f7e9b241c629.png"></p><p>可以看到里边就这一个网的密钥存储，打开来就看见了tcgg123456</p><h3 id="4-请分析检材三，请分析”电脑”检材，并回答，其电脑安装的微信版本是多少？"><a href="#4-请分析检材三，请分析”电脑”检材，并回答，其电脑安装的微信版本是多少？" class="headerlink" title="4. 请分析检材三，请分析”电脑”检材，并回答，其电脑安装的微信版本是多少？"></a><strong><font style="color:rgb(96, 98, 102);">4. 请分析检材三，请分析”电脑”检材，并回答，其电脑安装的微信版本是多少？</font></strong></h3><p>这个直接火眼了</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745835296973-8eabdaaf-f467-4047-97c1-e73c1a4df3b0.png"></p><p>软件信息一查wechat直接跳答案了</p><p>也可以在虚拟机用指令apt list –installed</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745836544704-45b9babc-06fb-4a99-9ea0-c4f164951276.png"></p><p>就是有点多，可以指定一下就微信apt list –installed</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745836583611-4e67cb40-97e6-4eb9-b35f-b1960b2b0e0f.png"></p><p>可见也是4.0.0.21</p><h3 id="5-请分析检材三，请分析”电脑”检材，并回答，该系统有哪些远程控制软件"><a href="#5-请分析检材三，请分析”电脑”检材，并回答，该系统有哪些远程控制软件" class="headerlink" title="5. 请分析检材三，请分析”电脑”检材，并回答，该系统有哪些远程控制软件"></a><strong><font style="color:rgb(96, 98, 102);">5. 请分析检材三，请分析”电脑”检材，并回答，该系统有哪些远程控制软件</font></strong></h3><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745836634069-5377352a-23a2-4219-954b-5bf29b5c0744.png"></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745836666751-5b45e414-2141-4037-9a72-0d7f01779928.png"></p><p>直接搜就出来了</p><h3 id="6-请分析检材三，请分析”电脑”检材，并回答，电脑2025年4月10日11点4分29秒曾被向日葵远程控制，其记录的日志文件名为"><a href="#6-请分析检材三，请分析”电脑”检材，并回答，电脑2025年4月10日11点4分29秒曾被向日葵远程控制，其记录的日志文件名为" class="headerlink" title="6. 请分析检材三，请分析”电脑”检材，并回答，电脑2025年4月10日11点4分29秒曾被向日葵远程控制，其记录的日志文件名为"></a><strong><font style="color:rgb(96, 98, 102);">6. 请分析检材三，请分析”电脑”检材，并回答，电脑2025年4月10日11点4分29秒曾被向日葵远程控制，其记录的日志文件名为</font></strong></h3><p>题目说是2025.4.10内11.4.29的向日葵日志文件，因此直接搜索向日葵的文件看看，搜索sunlogin</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745925304870-2d250203-9c90-45f8-a996-b2f1d598d970.png"></p><p>注意：日志文件一般以“.log”为后缀，例如“server.log”</p><p>根据时间，初步可以确定可能是这个</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745925428535-2b565cd6-4631-46b0-9e67-b42bc78ca692.png"></p><p>回到原位置打开来看看，找到4.10的11.4.29</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745925522127-b4fa56ab-5316-4d02-867e-158c87806570.png"></p><p>是这样一部分，那就可以确定了，就是这个日志文件，所以答案就是这个<font style="color:rgb(77, 77, 77);">sunlogin_service.log.2</font></p><p><font style="color:rgb(77, 77, 77);"></font></p><h3 id="7-请分析检材三，请分析”电脑”检材，并回答，电脑2025年4月10日11点4分29秒曾被向日葵远程控制，日志内记录对方公网IP地址和端口为"><a href="#7-请分析检材三，请分析”电脑”检材，并回答，电脑2025年4月10日11点4分29秒曾被向日葵远程控制，日志内记录对方公网IP地址和端口为" class="headerlink" title="7. 请分析检材三，请分析”电脑”检材，并回答，电脑2025年4月10日11点4分29秒曾被向日葵远程控制，日志内记录对方公网IP地址和端口为"></a><strong><font style="color:rgb(96, 98, 102);">7. 请分析检材三，请分析”电脑”检材，并回答，电脑2025年4月10日11点4分29秒曾被向日葵远程控制，日志内记录对方公网IP地址和端口为</font></strong></h3><p>跟上题在同一个位置，可以看到这边写着成功接收到公网，后边跟着的就是ip和端口了</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745925594177-5ac08c0a-2791-49bb-9d44-739fff786e53.png"></p><p><font style="color:rgb(77, 77, 77);">ip为：</font><font style="color:rgb(0, 0, 0);">116.192.161.222</font></p><p><font style="color:rgb(0, 0, 0);">端口为：2577</font></p><h3 id="8-请分析检材三，请分析“电脑”检材，并回答，某文件的MD5值为“2bdfcdbd6c63efc094ac154a28968b7d”，该文件名为"><a href="#8-请分析检材三，请分析“电脑”检材，并回答，某文件的MD5值为“2bdfcdbd6c63efc094ac154a28968b7d”，该文件名为" class="headerlink" title="8. 请分析检材三，请分析“电脑”检材，并回答，某文件的MD5值为“2bdfcdbd6c63efc094ac154a28968b7d”，该文件名为"></a><strong><font style="color:rgb(96, 98, 102);">8. 请分析检材三，请分析“电脑”检材，并回答，某文件的MD5值为“2bdfcdbd6c63efc094ac154a28968b7d”，该文件名为</font></strong></h3><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745926529677-88488716-1d3d-43ef-a4dd-f97b8c0d0fba.png"></p><p><font style="color:rgb(0, 0, 0);">先在这边设置一下右键快速计算哈希</font></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745926844423-ae7ec8ed-3e4e-44e1-b6ae-c1bc6d217f12.png"></p><p><font style="color:rgb(0, 0, 0);">其实这个看着挺诡异的，就独立一个然后也没用到过，可以猜测一下是不是这个算一下（或者可能只能全部去下或者）</font></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745927607011-154c5416-9147-44da-bb2b-31d2b543c6f3.png"></p><p><font style="color:rgb(0, 0, 0);">发现还真是这个，所以答案为important.docx</font></p><p><font style="color:rgb(0, 0, 0);"></font></p><h3 id="9-请分析检材三，请分析”电脑”检材，据调查，上述文件存放了钱包助记词，第一个单词是什么？"><a href="#9-请分析检材三，请分析”电脑”检材，据调查，上述文件存放了钱包助记词，第一个单词是什么？" class="headerlink" title="9. 请分析检材三，请分析”电脑”检材，据调查，上述文件存放了钱包助记词，第一个单词是什么？"></a><strong><font style="color:rgb(96, 98, 102);">9. 请分析检材三，请分析”电脑”检材，据调查，上述文件存放了钱包助记词，第一个单词是什么？</font></strong></h3><p><font style="color:rgb(0, 0, 0);">说到助记词，那就不得不提上边的important.docx了，显然这里边暂时是没有的，观察到这个十六进制开头是个zip格式，所以应该是变过来的，变回去看看</font></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745928261868-90f2ffcd-ab09-425b-a688-9aa409fb4d32.png"></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745928106707-06ebea06-94f8-46b8-b508-89627cb8bc9a.png"><font style="color:rgb(0, 0, 0);">直接改成zip格式看里边到底有点啥</font></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745928414625-7fbaf593-cfd2-4d7f-b8e0-8c5d82134d86.png"></p><p><font style="color:rgb(0, 0, 0);">发现里边内藏了一个important文件</font></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745928513072-1c700069-8f11-400b-b7ae-f972fe952f55.png"></p><p><font style="color:rgb(0, 0, 0);">.xml格式肯定还是不对，老样子放到winhex看一眼文件头（一个把戏玩两遍是吧）</font></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745928758636-dace7672-fdd3-49b8-a979-4880a0e5bff1.png"></p><p><font style="color:rgb(0, 0, 0);">FFD8FF是JPEG文件的常见开头，改好之后就是这样子</font></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745928875154-033bad7c-32d2-417d-a6c4-b7a656b91f27.png"></p><p><font style="color:rgb(0, 0, 0);">所以第一个词答案是solution</font></p><p><font style="color:rgb(0, 0, 0);">（不是为什么xml文件直接扔给微信会直接跳出图片啊？？？）</font></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745928941737-aba09ebe-ceb6-4607-906f-a78de379f2d1.png"></p><p>奇了怪了</p><p>问ai之后跳出来的解释是这样子的</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745929093144-a5f4030c-2486-498c-942a-af169b91c748.png"></p><p>原来是这样！这个好玩欸！</p><h3 id="10-请分析检材三（“我的测试机”），最近曾访问过的音频文件，该音频文件的文件名是什么"><a href="#10-请分析检材三（“我的测试机”），最近曾访问过的音频文件，该音频文件的文件名是什么" class="headerlink" title="10. 请分析检材三（“我的测试机”），最近曾访问过的音频文件，该音频文件的文件名是什么"></a><strong><font style="color:rgb(96, 98, 102);">10. 请分析检材三（“我的测试机”），最近曾访问过的音频文件，该音频文件的文件名是什么</font></strong></h3><h3 id=""><a href="#" class="headerlink" title=""></a><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745929426040-bfd9b89c-a53d-49b3-94b5-feaca120a8b3.png"></h3><p>很容易找到这个测试机，同样放到火眼分析</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745929518523-67e20ec8-577d-49bf-a8a5-635bbd46ca82.png"></p><p>音频文件是“自传小说.MP3”</p><p>或者打开虚拟机一看，上边大大的放着一个自传小说</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746173545855-47121ce2-b2f5-4b90-87cd-f01d9f2f08e8.png"></p><h3 id="11-请分析检材三（“我的测试机”），最近曾使用过USB设备，该设备的名称为"><a href="#11-请分析检材三（“我的测试机”），最近曾使用过USB设备，该设备的名称为" class="headerlink" title="11. 请分析检材三（“我的测试机”），最近曾使用过USB设备，该设备的名称为"></a><strong><font style="color:rgb(96, 98, 102);">11. 请分析检材三（“我的测试机”），最近曾使用过USB设备，该设备的名称为</font></strong></h3><p>火眼分析测试机的镜像，可以直接分析出usb使用记录</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746081249667-e984ac16-0872-4194-bc75-a26dd24adafb.png"></p><p>如图，所以是thinkplus，选A</p><h3 id="12-请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人现任妻子毕业的大学是？"><a href="#12-请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人现任妻子毕业的大学是？" class="headerlink" title="12. 请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人现任妻子毕业的大学是？"></a><strong><font style="color:rgb(96, 98, 102);">12. 请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人现任妻子毕业的大学是？</font></strong></h3><p>意思是要听一下这个音频内容</p><p>可以用<a href="https://www.iflyrec.com/home/">讯飞听见</a>或者<a href="https://itingnao.com/home">听脑AI</a></p><p>时间有点长所以可能转起来会需要些时间，但是后续都和这个音频有关</p><p>而且有河南话选项还挺厉害</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746082501507-e6d58082-415e-4bf1-9b43-3a351f0fb81d.png"></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746084458101-3b4fe275-75b7-474b-9051-423915ea31ea.png"></p><p>果不其然要钱啊</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746084542895-58127259-2015-4400-b9b5-7eb44fc4d71f.png"></p><p>提取出内容后可以用ai阅读一下</p><p>得到说最后他现任妻子毕业于北京大学（上海大学那个分了）</p><h3 id="13-请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人是通过一个朋友认识的陈老板，该朋友姓氏拼音是？"><a href="#13-请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人是通过一个朋友认识的陈老板，该朋友姓氏拼音是？" class="headerlink" title="13. 请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人是通过一个朋友认识的陈老板，该朋友姓氏拼音是？"></a><strong><font style="color:rgb(96, 98, 102);">13. 请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人是通过一个朋友认识的陈老板，该朋友姓氏拼音是？</font></strong></h3><p> <img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746084633621-820652d2-e75d-4d60-82ed-0c4467480e13.png"><br>同理啊，拼音是wang</p><h3 id="14-请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人所说的香格里拉大酒店实则是？"><a href="#14-请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人所说的香格里拉大酒店实则是？" class="headerlink" title="14. 请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人所说的香格里拉大酒店实则是？"></a><strong><font style="color:rgb(96, 98, 102);">14. 请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人所说的香格里拉大酒店实则是？</font></strong></h3><p>桂明老千管辖的棋牌室的后院</p><p>跟给的格式保持一致的话就是后院</p><h3 id="15-请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人银行密码是多少？"><a href="#15-请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人银行密码是多少？" class="headerlink" title="15. 请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人银行密码是多少？"></a><strong><font style="color:rgb(96, 98, 102);">15. 请分析检材三（“我的测试机”）中的音频内容，并回答，嫌疑人银行密码是多少？</font></strong></h3><p>是音频分段的藏头诗 </p><p>07145924</p><p>因为音频明显是分段的，这个分段不会毫无意义，而分成那么多段的第一个字便是答案</p><p>想出这个的也是神人了</p><h2 id="第四部分-互联网取证"><a href="#第四部分-互联网取证" class="headerlink" title="第四部分 互联网取证"></a>第四部分 互联网取证</h2><h3 id="1-请分析检材二，找到李某上游人员陈某博客宣传所用域名为"><a href="#1-请分析检材二，找到李某上游人员陈某博客宣传所用域名为" class="headerlink" title="1. 请分析检材二，找到李某上游人员陈某博客宣传所用域名为"></a><strong><font style="color:rgb(96, 98, 102);">1. 请分析检材二，找到李某上游人员陈某博客宣传所用域名为</font></strong></h3><p>这个好找，就在微信聊天记录</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746086050858-4f5a8215-faca-4c55-91f5-0ed66c8c022a.png"></p><p>靠这个联系的</p><p>利用火眼直接隐写分析</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746086105942-2d7574e2-7d11-4869-b3fb-b8f624106280.png"></p><p>得到域名为chen.foren6</p><h3 id="2-请分析陈某宣传所用域名，该域名的顶级域名在以下那个区块链注册"><a href="#2-请分析陈某宣传所用域名，该域名的顶级域名在以下那个区块链注册" class="headerlink" title="2. 请分析陈某宣传所用域名，该域名的顶级域名在以下那个区块链注册"></a><strong><font style="color:rgb(96, 98, 102);">2. 请分析陈某宣传所用域名，该域名的顶级域名在以下那个区块链注册</font></strong></h3><p>域名以.foren6结尾，属于自定义顶级域，因此选b</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746095640564-74005dec-67e8-4c79-9877-f5b9cc0575a2.png"></p><h3 id="3-请分析陈某宣传所用域名的顶级域名的域名解析服务器（DNS）共有几个"><a href="#3-请分析陈某宣传所用域名的顶级域名的域名解析服务器（DNS）共有几个" class="headerlink" title="3. 请分析陈某宣传所用域名的顶级域名的域名解析服务器（DNS）共有几个"></a><strong><font style="color:rgb(96, 98, 102);">3. 请分析陈某宣传所用域名的顶级域名的域名解析服务器（DNS）共有几个</font></strong></h3><p>调查域名当然要用dig指令了</p><p><a href="https://gitcode.com/open-source-toolkit/2ac5c/?utm_source=tools_gitcode&index=top&type=card&&isLogin=1">dig安装包</a></p><p><a href="https://blog.csdn.net/qq_41982020/article/details/121231166?ops_request_misc=%257B%2522request%255Fid%2522%253A%25226b3efb12c7050e41b40662845a18c94a%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=6b3efb12c7050e41b40662845a18c94a&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-121231166-null-null.142%5Ev102%5Econtrol&utm_term=dig&spm=1018.2226.3001.4187">dig命令的介绍与使用</a></p><p><font style="color:rgb(77, 77, 77);">dig（domain information group）是常用的域名查询工具，可以从DNS域名服务器查询主机地址信息，获取到详细的域名信息。</font></p><p>陈某所用的顶级域名为.foren6，因此dig ns foren6</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746095927245-9b2d607d-9039-465b-9405-e2e418457495.png"></p><p>（我不知道为什么我dig不出**<font style="color:rgb(64, 64, 64);background-color:rgb(236, 236, 236);">ANSWER SECTION</font>**的部分）</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746096114537-c42cb856-bccf-40d1-adbf-b2a75ee97912.png"></p><p>利用dig +noall +answer NS example.com.指令还是可以看到DNS有俩</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746183842094-e3c01eb5-39b1-4172-871f-e42a8630706c.png"></p><p>成功了！！！！！！！</p><p>在虚拟机nat连接下配置net8为下图后成功连上了这个DNS服务器！！！</p><p>成功dig出了！！！！！！！</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746183916977-58e3c59e-ff38-4a11-8a96-ae71149dbd46.png"></p><p>多亏了两位朱学长</p><p>至于为什么是这个地址，那是因为这是HNS区块链</p><p><a href="https://docs.hnsdns.com/dns-resolver/">链接在这</a></p><h3 id="4-请分析陈某宣传所用域名的顶级域名的NS1服务器ip为"><a href="#4-请分析陈某宣传所用域名的顶级域名的NS1服务器ip为" class="headerlink" title="4. 请分析陈某宣传所用域名的顶级域名的NS1服务器ip为"></a><strong><font style="color:rgb(96, 98, 102);">4. 请分析陈某宣传所用域名的顶级域名的NS1服务器ip为</font></strong></h3><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746096297812-9573b489-477f-4814-8421-9ae73cc737a3.png"></p><p>同理利用dig ns. varo 得到服务器ip</p><p>我搞不到answer，因为没连接上区块链，所以自然dig不出啥答案，至于咋连我也不知道（再想想吧）</p><p>现在搞到了！！！</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746183995507-01e91cf6-1384-45f8-931c-f85dbd355f39.png"></p><h3 id="5-请分析陈某宣传所用域名，该域名DNS记录指向邮件服务器域名为"><a href="#5-请分析陈某宣传所用域名，该域名DNS记录指向邮件服务器域名为" class="headerlink" title="5. 请分析陈某宣传所用域名，该域名DNS记录指向邮件服务器域名为"></a><strong><font style="color:rgb(96, 98, 102);">5. 请分析陈某宣传所用域名，该域名DNS记录指向邮件服务器域名为</font></strong></h3><p>输入指令dig mx chen.foren6</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746101827272-25ac4589-5d7e-40f4-8f84-8fd485bc0dd0.png"></p><p>答案为mail.163.com</p><p><font style="color:rgb(0, 0, 0);background-color:rgb(250, 250, 250);"></font></p><h3 id="6-请分析陈某宣传所用域名，该域名的txt记录中chen的值为"><a href="#6-请分析陈某宣传所用域名，该域名的txt记录中chen的值为" class="headerlink" title="6. 请分析陈某宣传所用域名，该域名的txt记录中chen的值为"></a><strong><font style="color:rgb(96, 98, 102);">6. 请分析陈某宣传所用域名，该域名的txt记录中chen的值为</font></strong><font style="color:rgb(0, 0, 0);background-color:rgb(250, 250, 250);"></h3><p></font><font style="color:rgb(0, 0, 0);background-color:rgb(250, 250, 250);"> </font><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746184033977-52ef772f-7000-4c65-96b5-2834f01af89c.png"><br>终于成功了，就是这个！chen&#x3D;fengbaoliejiu</p><h3 id="7-请分析陈某宣传所用域名，该域名DNS记录没有以下那个域名"><a href="#7-请分析陈某宣传所用域名，该域名DNS记录没有以下那个域名" class="headerlink" title="7. 请分析陈某宣传所用域名，该域名DNS记录没有以下那个域名"></a><strong><font style="color:rgb(96, 98, 102);">7. 请分析陈某宣传所用域名，该域名DNS记录没有以下那个域名</font></strong></h3><p><font style="color:rgb(0, 0, 0);background-color:rgb(250, 250, 250);">用 </font><code>&lt;font style=&quot;color:rgb(0, 0, 0);background-color:rgb(250, 250, 250);&quot;&gt;dig ANY&lt;/font&gt;</code><font style="color:rgb(0, 0, 0);background-color:rgb(250, 250, 250);"> 来查看域名解析的全部信息</font></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746187724568-73c7ba6f-9c16-4428-b4b0-e5ca982c2fff.png"></p><p>A选项拥有answer，所以有这个域名</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746187762498-9e2198e8-44d0-4aa8-b5df-271080410464.png"></p><p>B选项拥有answer，所以有这个域名</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746187865391-a1b1afc8-6441-4a09-aeab-4d6e6b9da2b9.png"></p><p>C选项拥有answer，所以有这个域名（我不清楚为什么别人wpdig不出这个answer，但是我真dig出来了，可能后期改了？？？）</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746187908963-49d49a92-bca0-4953-b363-7371a36c7f08.png"></p><p>D选项无answer，所以最后是D选项</p><h3 id="8-请分析陈某宣传所用域名，该博客域名最终DNS解析指向的github仓库名为"><a href="#8-请分析陈某宣传所用域名，该博客域名最终DNS解析指向的github仓库名为" class="headerlink" title="8. 请分析陈某宣传所用域名，该博客域名最终DNS解析指向的github仓库名为"></a><strong><font style="color:rgb(96, 98, 102);">8. 请分析陈某宣传所用域名，该博客域名最终DNS解析指向的github仓库名为</font></strong></h3><p>直接尝试输入网址chen.foren6</p><p>会直接跳到blog.chen.foren6</p><p>然后再尝试dig一下</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746184073648-e64e039f-80f7-4dbc-984d-5c0f5e602b54.png"></p><p>所以答案是chewhaoN.github.io</p><h3 id="9-请分析陈某github账号，陈某对jkroepke-2Moons项目增改了几个文件"><a href="#9-请分析陈某github账号，陈某对jkroepke-2Moons项目增改了几个文件" class="headerlink" title="9. 请分析陈某github账号，陈某对jkroepke&#x2F;2Moons项目增改了几个文件"></a><strong><font style="color:rgb(96, 98, 102);">9. 请分析陈某github账号，陈某对jkroepke&#x2F;2Moons项目增改了几个文件</font></strong></h3><p>上GitHub！</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746102382051-a085784f-e076-4902-9f26-3fe3de3d3225.png"></p><p>在这边甚至可以确定第二题肯定选hns</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746102411744-8169e502-4813-459e-bd7e-9615f8c695cd.png"></p><p>根据chewhaoN.github.io可知陈某用户名为chewhaoN</p><p>因此直接输入网址<a href="https://github.com/chewhaon">https://github.com/chewhaon</a>便可以看见其个人页面</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746185366167-5b973761-58a0-494d-911b-8cb488dd92ae.png"></p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746186883724-7fbd9237-cb00-443e-93d1-1986e0e7f95f.png"></p><p>将chewhaoN的2moons和jkroepke的进行对比，发现其修改了俩文件</p><p>所以修改了俩（好吧但是不知道咋对比）</p><p>或许可以将 chewhaoN&#x2F;2Moons 和 jkroepke&#x2F;2Moons 分别克隆到本地, 删除两个文件夹内的 <code>.git</code> 目录, 使用 <code>git diff</code> 指令, 进行比对</p><h3 id="10-请分析陈某github账号，陈某在修改2Moons过程中提到了什么锅底"><a href="#10-请分析陈某github账号，陈某在修改2Moons过程中提到了什么锅底" class="headerlink" title="10. 请分析陈某github账号，陈某在修改2Moons过程中提到了什么锅底"></a><strong><font style="color:rgb(96, 98, 102);">10. 请分析陈某github账号，陈某在修改2Moons过程中提到了什么锅底</font></strong></h3><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746188566230-cf902a46-3051-40e5-924a-8382bb5026cd.png">不好意思这题和第十一题都做不来（）</p><p><a href="https://forensics.xidian.edu.cn/wiki/FIC2025Preliminary/#1_1">wp链接给上</a></p><h3 id="11-请分析陈某github账号，陈某在游戏2Moons中放置的后门连接码的密码为"><a href="#11-请分析陈某github账号，陈某在游戏2Moons中放置的后门连接码的密码为" class="headerlink" title="11. 请分析陈某github账号，陈某在游戏2Moons中放置的后门连接码的密码为"></a><strong><font style="color:rgb(96, 98, 102);">11. 请分析陈某github账号，陈某在游戏2Moons中放置的后门连接码的密码为</font></strong></h3><p>如上，能力有限</p><h3 id="12-请访问陈某当前博客，陈某课程的扫码报名地址的域名为"><a href="#12-请访问陈某当前博客，陈某课程的扫码报名地址的域名为" class="headerlink" title="12. 请访问陈某当前博客，陈某课程的扫码报名地址的域名为"></a><strong><font style="color:rgb(96, 98, 102);">12. 请访问陈某当前博客，陈某课程的扫码报名地址的域名为</font></strong></h3><p>这个简单啊</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746188647746-59b6b024-bcc0-4369-b0d7-0bdfc8e4ba62.png"></p><p>这么大个二维码，扫一下里边网址是</p><p>fic.forensix.cn（这不是fic官网吗。。）</p><h3 id="13-请分析陈某当前博客，通过互联网找到陈某的旧博客网站标题为"><a href="#13-请分析陈某当前博客，通过互联网找到陈某的旧博客网站标题为" class="headerlink" title="13. 请分析陈某当前博客，通过互联网找到陈某的旧博客网站标题为"></a><strong><font style="color:rgb(96, 98, 102);">13. 请分析陈某当前博客，通过互联网找到陈某的旧博客网站标题为</font></strong></h3><p>旧博客，在上边可以看到</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746188993969-84497372-8024-4dd0-abc4-d4eb048f6757.png"></p><p>但是点进去是这样子的</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746189012215-deb0e5dc-7d68-4ca8-8919-cc1f511a15c1.png"></p><p>这个时候就需要用到小工具，<a href="https://archive.org/">网页时光机</a>了</p><p>直接输入网址</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746189150827-13a40685-605e-4ebe-b672-193533cab770.png"></p><p>4.26的快照打不开了，只能打开4.7的</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746189242564-175198d2-8d4b-4dfc-87ee-78904c0408c7.png"></p><p>来了嗷</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746189285697-944b023d-8cd4-4547-b95c-59bd6bb2f8d6.png"></p><p>标题可见，网站标题叫柳如烟大战霸天虎</p><h3 id="14-请分析陈某旧博客，陈某的姓名为"><a href="#14-请分析陈某旧博客，陈某的姓名为" class="headerlink" title="14. 请分析陈某旧博客，陈某的姓名为"></a><strong><font style="color:rgb(96, 98, 102);">14. 请分析陈某旧博客，陈某的姓名为</font></strong></h3><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746189367652-5654d0ad-dc1e-4052-9897-ab79997fcdea.png"></p><p>陈浩北，其实欠条里也有写</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1745760239791-57dfda34-3b31-42d4-85a5-7cf473cf8df7.png"></p><h3 id="15-请分析陈某旧博客，陈某的邮箱地址为"><a href="#15-请分析陈某旧博客，陈某的邮箱地址为" class="headerlink" title="15. 请分析陈某旧博客，陈某的邮箱地址为"></a><strong><font style="color:rgb(96, 98, 102);">15. 请分析陈某旧博客，陈某的邮箱地址为</font></strong></h3><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746189507220-9e4a087a-7bce-433d-b567-0c1cd3c943e8.png"></p><p>在网页源代码搜索@，易见邮箱地址为<a href="mailto:&#109;&#97;&#x69;&#108;&#x6d;&#101;&#x40;&#99;&#x68;&#101;&#110;&#46;&#x66;&#111;&#x72;&#x65;&#x6e;&#54;">mailme@chen.foren6</a></p><h3 id="16-请分析陈某旧博客，陈某的11位手机号为"><a href="#16-请分析陈某旧博客，陈某的11位手机号为" class="headerlink" title="16. 请分析陈某旧博客，陈某的11位手机号为"></a><strong><font style="color:rgb(96, 98, 102);">16. 请分析陈某旧博客，陈某的11位手机号为</font></strong></h3><p>就在上边那张图邮箱头上，13170010703</p><h3 id="17-请分析陈某旧博客，陈某最爱的dota英雄为"><a href="#17-请分析陈某旧博客，陈某最爱的dota英雄为" class="headerlink" title="17. 请分析陈某旧博客，陈某最爱的dota英雄为"></a><strong><font style="color:rgb(96, 98, 102);">17. 请分析陈某旧博客，陈某最爱的dota英雄为</font></strong></h3><p>根据那篇文章的标题“圣刀会也没我这么厉害”</p><p>百度搜索</p><p><img src="/2025fic%E5%88%9D%E8%B5%9B%E5%A4%8D%E7%9B%98/1746189754565-126bde56-72b4-40fa-bf2f-92d2afee7d87.png"></p><p>这是<font style="color:rgb(25, 25, 25);">邪影芳灵语音，所以自然选这个了</font></p><p><font style="color:rgb(25, 25, 25);"></font></p><p><font style="color:rgb(25, 25, 25);">（终于写的差不多了，fic初赛感觉总体难度还是中下吧，作为一个pgs前的练手还是蛮不错的，主要是因为很久没有做取证题目了，可能要有四五个月，所以很多简单题都没做出来，最后得分是240，但我个人认为其实能力范围内的大概有350分左右，这些并没有特别超纲，属于是我看wp之后马上就能搞明白的）</font></p><p><font style="color:rgb(25, 25, 25);">期待明年的fic，明年幽清晨一定不止优胜！</font></p><p><font style="color:rgb(25, 25, 25);"></font></p><p><font style="color:rgb(25, 25, 25);"></font></p><p><font style="color:rgb(25, 25, 25);"></font></p><p><font style="color:rgb(25, 25, 25);"></font></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2025MoeCTF</title>
    <link href="/2025/10/28/2025MoeCTF/"/>
    <url>/2025/10/28/2025MoeCTF/</url>
    
    <content type="html"><![CDATA[<h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><p>:::info<br>ak后评价：这几天老是在玩做的比较慢，抽空做完了moectf的misc，总体评价是简单的没边了很适合新手（除了有一题我想的太复杂了自己在那边左脑打右脑，其实贼简单）</p><p>有不少音频题，这是别的misc几乎遇不到的</p><p>好玩</p><p>:::</p><h2 id="misc入门指北"><a href="#misc入门指北" class="headerlink" title="misc入门指北"></a>misc入门指北</h2><p><img src="/2025MoeCTF/1754788952213-e97af1df-02dc-4de5-b262-f22613016a6f.png"></p><p>一题给了pdf，说</p><p><img src="/2025MoeCTF/1754789017798-6ce59c1f-7f39-4cda-9fe0-61ea309c2f66.png"></p><p><img src="/2025MoeCTF/1754789056317-9aa86d84-7d1b-46da-ab44-9eec6faff30e.png"></p><p>果然很经典就是一个个打上去然后给它调成了白色的看不见而已，如果下边调黑其实也能出</p><p><img src="/2025MoeCTF/1754789135300-aeeb9bdf-72be-44c2-8630-dfe1cbf37f7c.png"></p><p>所以flag就是moectf{We1c0m3_7o_tH3_w0R1d_0f_m1sc3111aN3ous!!}</p><h2 id="ez-LSB"><a href="#ez-LSB" class="headerlink" title="ez_LSB"></a>ez_LSB</h2><p><img src="/2025MoeCTF/1754789344805-3f3fa991-9c10-4f5b-ac94-5fe01e6141cc.png"></p><p>很简单啊一看就是lsb隐写，那就放到stegslove里边看看就好了</p><p><img src="/2025MoeCTF/1754789617654-13b65f46-147e-4ebe-a8f7-0acc9e7193a2.png"></p><p>看见这样一串字bW9lY3Rme0xTQl8xc19zMF8xbnQ zcmVzdDFuZyEhc2o5d2R9</p><p>看起来就很像base64啊。毕竟48个字符数字也正好对应</p><p><img src="/2025MoeCTF/1754789718457-da6efcf2-e1a4-4b0a-b4b8-d6d9ea9ab908.png"></p><p>解得moectf{LSB_1s_s0_1nt3rest1ng!!sj9wd}</p><h2 id="SSTV"><a href="#SSTV" class="headerlink" title="SSTV"></a>SSTV</h2><p><img src="/2025MoeCTF/1754789830176-d9422e90-2fc5-4133-879b-0b0924d8377d.png"></p><p>结合提示，这个音频其实就是sstv的电码，听的我耳朵都要炸了</p><p>下个RXSSTV解码一下</p><p><font style="color:rgb(77, 77, 77);">由于SSTV工具是根据音频传递图片信息，正常解法需要一台设备播放一台设备收音，所以需要一个虚拟声卡，还能避免杂音的干扰。（我不明白为什么我用手机放它接收不到，但是我人声讲话可以）</font></p><p><img src="/2025MoeCTF/1754790846656-e6f93037-275a-446d-91bf-21ff203de6fa.png"></p><p>然后利用虚拟声卡我们就成功得到了flag</p><p>moectf{d3codiNG_SStV_reQu1REs-PATI3nC3}</p><h2 id="捂住一只耳"><a href="#捂住一只耳" class="headerlink" title="捂住一只耳"></a>捂住一只耳</h2><p><img src="/2025MoeCTF/1754791364781-005b0201-aab2-45c3-891e-f98f6d5187b6.png"></p><p>真的很喜欢muisc的misc</p><p>这个根据题目，应该是一个左右声道分离的事情</p><p><img src="/2025MoeCTF/1754791593147-7985161e-f9ad-4708-aa4e-d8e9d77b3a95.png"></p><p>很明显啊上边的有问题，先导出来看看</p><p><img src="/2025MoeCTF/1754791716185-71bfcfe0-c9ec-4ca5-9fcb-eac746a6b42d.png"></p><p>听上去像摩斯电码</p><p><img src="/2025MoeCTF/1754791768174-ad4bec64-ab0b-4b96-b20c-c37bd9c350a8.png"></p><p>找个现成的网站搞一下，flag出来了moectf{half_radio_in_xdu}</p><h2 id="Enchantment"><a href="#Enchantment" class="headerlink" title="Enchantment"></a>Enchantment</h2><p><img src="/2025MoeCTF/1754823299532-5152f289-abad-4eab-8cc2-02be57484367.png"></p><p>这题说是图片、附魔台听不懂，但给了一个流量包，打开来看看</p><p><img src="/2025MoeCTF/1754823383186-0f36e07f-c9ec-44fe-ad6e-51e43c84311b.png"></p><p>一看就这个最多，括号里还写个png，肯定和这个有关，先导出来看看</p><p><img src="/2025MoeCTF/1754823502959-6f322e90-616a-4cc7-b1b6-d5cbde385855.png"></p><p>应该是png，把前后的多余东西删掉</p><p><img src="https://cdn.nlark.com/yuque/0/2025/png/54209285/1754823558087-282e23e7-c760-408d-b89b-6c83469c2b15.png"></p><p>打开来还真是个附魔台，还是时运三，有点东西啊</p><p>所以附魔台上的文字就是这个文字咯？</p><p>注意到附魔台的文字其实是“标准银河字母”</p><p><img src="/2025MoeCTF/1754824282049-ef1d4d22-a81b-403a-91e7-48ed41fb507f.png"></p><blockquote><p><del>似乎没什么关系</del></p><p><img src="/2025MoeCTF/1754824671517-b31ffa1f-789d-4955-ad2f-3b279f55d2b6.png"></p><p><del>把png放到binwalk看一眼，发现有zlib</del></p><p><img src="/2025MoeCTF/1754824760416-46d7026b-8aae-4174-b3f7-9ebbc4194644.png"></p><p><del>这个是default compression，说明文件头是789C</del></p><p><img src="/2025MoeCTF/1754824875481-bca7dee3-72ab-4c30-a520-280beabd9b63.png"></p><p><del>分离一下</del></p><p><img src="/2025MoeCTF/1754825810140-45537c05-cd6a-46bc-a7b1-82cc1cf19ea2.png"></p><p><del>查看十六进制，发现这个.zlib文件没啥内容，而这个3E无后缀的文件虽然内容少但是似乎藏着些什么</del></p><p><img src="/2025MoeCTF/1754840502387-570a9138-fe66-4b56-acfc-82b276b6a052.png"></p><p><del>尝试解密看看能不能干个二维码出来</del></p></blockquote><p>我真无语了就是直接对照着标准银河字母解密罢了</p><p>第一行：the_flag_is_below</p><p>第二行：now_you_have</p><p>第三行：mastered_enchanting</p><p>所以答案就是moectf{now_you_have_mastered_enchanting}。。。无语</p><h2 id="ez-png"><a href="#ez-png" class="headerlink" title="ez_png"></a>ez_png</h2><p><img src="/2025MoeCTF/1754840636088-dfaceb03-0512-4d45-84f1-a62cba4ed2cd.png"></p><p>平平无奇吗，有点意思，看看照片</p><p><img src="/2025MoeCTF/1754840741620-a6ba4ba1-7b36-4d98-a79b-26a25a022977.png"></p><p>这边说跟颜色无关，所以可以排除lsb隐写之类的了</p><p>骨骼，怀疑是藏东西了，binwalk一下</p><p><img src="/2025MoeCTF/1754840803617-412ad00e-eb6d-4abd-b3a6-691f90f9b66e.png"></p><p>看见有俩zlib</p><p><img src="/2025MoeCTF/1754840843461-e769e362-5406-4ba4-94bb-12792ebf65ca.png"></p><p>提取出来先</p><p>3E直接空了，没用，删了</p><p><img src="/2025MoeCTF/1754841041992-8587b8d8-a28c-499b-9d7d-4dcb1c55bb88.png"></p><p>？直接打开DB7C7的十六进制直接就出了？这也太简单了吧，这不binwalk使用题吗？？？</p><p>这题有上题一半恶心吗，我思考半天结果只是人力解密</p><p>flag：moectf{h1DdEn_P4YlOaD_IN-Id4T}</p><h2 id="Rush"><a href="#Rush" class="headerlink" title="Rush"></a>Rush</h2><p>新题来咯~</p><p><img src="/2025MoeCTF/1755316081577-3c36bd6d-3586-4f80-a1a8-9759a2b9c5ee.png"></p><p>这不就gif图片吗？直接stegSlove了</p><p><img src="/2025MoeCTF/1755316144600-933f8d4f-159e-484f-9a29-5070499f5bf0.png"></p><p>还是个残缺的</p><p><img src="/2025MoeCTF/1755316283184-372859da-c9bc-4ae9-bbc5-b430a3903fd7.png"></p><p>补一下就好了</p><p>moectf{QR_C0d3s_feATUR3_eRror_c0RRECt10N}</p><h2 id="ez-锟斤拷"><a href="#ez-锟斤拷" class="headerlink" title="ez_锟斤拷????"></a>ez_锟斤拷????</h2><p><img src="/2025MoeCTF/1755316332905-e2480abc-236a-4875-8bde-652721d84463.png"></p><p><font style="color:rgb(77, 77, 77);">这是连续的 UTF-8 容错字符以 GBK 解码的结果</font></p><p><img src="/2025MoeCTF/1755316598772-08b3c652-b6cc-43ca-b6ed-0c8ee6a1c98e.png"></p><p>我们直接在乱码恢复网站搜索即可</p><p><img src="/2025MoeCTF/1755316618257-9d513b71-a814-461a-9795-bf1365e8f75d.png"></p><p>可以看到这边有</p><p>ｍｏｅｃｔｆ｛ＥｎＣ０ｄ１ｉｎｇ＿ｇｂＫ＿＠ｎＤ＿Ｕｔｆ＿８＿１ｓ＿４ｕｎ！！ｅｗｗｗｗ｝</p><p>moectf{EnC0d1ing_gbK_@nD_Utf_8_1s_4un!!ewwww}</p><h2 id="encrypted-pdf"><a href="#encrypted-pdf" class="headerlink" title="encrypted_pdf"></a>encrypted_pdf</h2><p><img src="/2025MoeCTF/1755316798753-8e1660eb-ed26-4fbf-8134-2c0fb65b20e6.png"></p><p>加密pdf</p><p><img src="/2025MoeCTF/1755316860156-a7d50513-a713-4089-85c0-31dcfe7963ac.png"></p><p>密码是简单的</p><p>那就尝试弱口令爆破呗</p><p>去kali用pdfcrack</p><p>说简单，那就先试试看数字呗</p><p>pdfcrack -f 1.pdf -n 1 -m 6 -c 0123456789qwertyuiopasdfghjklzxcvbnm</p><p>跑半天跑不出来</p><p><img src="/2025MoeCTF/1755324489894-dba4cfb6-0217-4b6e-a3d0-45ac7369df00.png"></p><p>老实了，直接去破解网站吧</p><p><img src="/2025MoeCTF/1755324569420-70dd4287-fb40-44ba-af1d-514f0cce230b.png"></p><p><img src="/2025MoeCTF/1755324576799-d857a634-943e-4170-82fc-be168cdf99a6.png"></p><p>有提示啊，直接搜吧</p><p><img src="/2025MoeCTF/1755324555503-e59bba54-9d73-4034-aa38-c3084268d315.png"></p><p><img src="/2025MoeCTF/1755324655674-ce420213-cc96-48b5-abf9-40e450d665c2.png"></p><p>还有后半段，很神奇吧</p><p>moectf{Pdf_1s_r3a1ly_c0lor4ul_ihdw}</p><p>我去还不对吗</p><p><img src="/2025MoeCTF/1755324863645-e2955ed7-3822-4e3b-ad43-bba17e50bc7d.png"></p><p>矢量化一下吧</p><p><img src="/2025MoeCTF/1755324855374-8a378129-d1f3-4bbb-97ed-24f9d35c2868.png"></p><p>moectf{Pdf_1s_r3a1ly_c0lor4ul!!ihdw}</p><p>这下对了</p><h2 id="ez-ssl"><a href="#ez-ssl" class="headerlink" title="ez_ssl"></a>ez_ssl</h2><p><img src="/2025MoeCTF/1755317362791-2e8404e9-0138-4fce-a1bd-3b51b3504211.png"></p><p><img src="/2025MoeCTF/1755325673959-70447365-e62b-492f-ad2f-4866a1b64c1e.png"></p><p>跟tls有关，先tcp搜一下log</p><p><img src="/2025MoeCTF/1755326851511-5f77310e-7d96-4a50-a981-50b0a84ddf26.png"></p><p><img src="/2025MoeCTF/1755436988787-7725c954-f86a-485c-855c-226176080089.png"></p><p>上传的是ssl.log，不是这个</p><p><img src="/2025MoeCTF/1755437084086-9a1f8e20-df31-4150-8ad6-df3cacc8bbda.png"></p><p>好这个对了，就是这个</p><p>给他命名完.log后缀后放入tls</p><p><img src="/2025MoeCTF/1755326386733-51144aa1-9f77-4d70-babd-2b2c96a3ed9f.png"></p><p><img src="/2025MoeCTF/1755326529171-12499d3b-3257-428f-ac50-8e90273a51be.png"></p><p>（上边是原来的）</p><p><img src="/2025MoeCTF/1755437110728-9e85bccc-18f2-4c8e-8686-ece8ee1fe6ce.png"></p><p>可以看到多了不少文件</p><p><img src="/2025MoeCTF/1755437133934-45f9110c-0e7c-4cb8-a641-b9cbecd308f0.png"></p><p>这zip都写脸上了，导出一下</p><p><img src="/2025MoeCTF/1755437171480-0f9daa01-54b1-4d51-a17c-17569f58569d.png"></p><p>果然是个zip，打开来是flag.txt,说是密码是七位纯数字,那爆破起来很方便了(比隔壁lil简单多了)</p><p><img src="/2025MoeCTF/1755437266315-58e10c92-1bfc-4ade-8705-58b435dfc2de.png"></p><p>怎么突然报错了</p><p><img src="/2025MoeCTF/1755437281264-b16aa229-23cc-4f90-9602-58dfe1f9c9e0.png"></p><p>噢要把这个冗余的删了才算</p><p><img src="/2025MoeCTF/1755437458591-d20c701a-1810-4c6f-8a9d-ad2057a28528.png"></p><p>然后去爆破就好了，很快的，16s</p><p>密码为：6921682</p><p><img src="/2025MoeCTF/1755437503143-e3da8da8-5682-41f5-9756-f1b9539a6365.png"></p><p>怎么都喜欢塞Ook编码，跟隔壁磐石一模一样</p><p><img src="/2025MoeCTF/1755437546913-eba5f089-46d0-4e6a-bc57-af536ed0447c.png"></p><p>moectf{upI0@d-l0G_TO-DeCrYPT_uploAD}</p><h2 id="万里挑一"><a href="#万里挑一" class="headerlink" title="万里挑一"></a>万里挑一</h2><p><img src="/2025MoeCTF/1755327230290-d4073d99-b1dd-40e8-a383-0436e4640d69.png"></p><p>给了一大堆，但是密码我看了看就是数字和小写字母的集合</p><p><img src="/2025MoeCTF/1755327218454-d2aad950-26df-4e7e-9b21-32c6bb51982d.png"></p><p>20个字符</p><p>试试看爆破，好，大概要一年以上，明年见</p><p>好了肯定不是这样子做的，我们思考一下</p><p>首先尝试了伪加密，发现不是的</p><p><img src="/2025MoeCTF/1755438676362-e71c2e79-7c50-42ef-af8e-2c56aa784b31.png"></p><p>其实我是想直接复制粘贴的，但显然随波逐流不太给力，直接死机了</p><p><img src="/2025MoeCTF/1755439640437-bb515b95-79b7-472f-9216-84dcd9424a1a.png"></p><p>多重嵌套解压一下</p><p><img src="/2025MoeCTF/1755439949009-e2d5d979-aa2b-4a32-acd3-34fb970f1e18.png"></p><p>解压之后利用循环结构从G:\Misc\password\0\0\0\0中的pwd.txt文件遍历到G:\Misc\password\9\9\9\9的pwd.txt文件</p><p>再根据这些文件里的内容都是The password is:3ce3a183fdf9cb067c67的原理把冒号之后的3ce3a183fdf9cb067c67内容提取出来</p><p><img src="/2025MoeCTF/1755440047858-9ce18829-f29f-4cf9-8bd2-10fbd7274f7d.png"></p><p>这密码字典不就来了，咱爆破去！</p><p><img src="/2025MoeCTF/1755440119679-32566bdb-0ec2-454f-b108-8415abfef669.png"></p><p>欧克啊也是顺利爆出来了，a296a5ec1385f394e8cb是7571号文件</p><p><img src="/2025MoeCTF/1755440174410-9736cdd3-c128-4c8e-bf60-e08d911311e4.png"></p><p>额还有第二层？直接把明文写脸上了吗</p><p>但是我们找不到多余的信息了</p><p>根据明文的提示，我们不可能直接构造flag.txt，一定是通过明文.exe来搞出flag.txt的</p><p>这边我们新建文件，直接写4D5A90000300000004000000</p><p>直接拿这个最常见的Windows可执行文件12字节来创建个文件尝试明文爆破（主要还是利用了ZipCrypto很老的特点，直到一部分可以推出全部）</p><p><img src="/2025MoeCTF/1758098474719-22b38d70-d6f5-45a5-b199-c88db08bdc1e.png"></p><p>去bkcrack.exe -C 1.zip -c “明文.exe” -p mingwen.bin</p><p><img src="/2025MoeCTF/1758098843178-7d8fbab2-38f1-4e87-8c3d-7f7349bfb7eb.png"></p><p>解得如上，我们得到了key：eec878a3 6808e48f 3aa41bd8</p><p>bkcrack -C 1.zip -k eec878a3 6808e48f 3aa41bd8 -U new.zip easy</p><p>设置个新密码easy</p><p><img src="/2025MoeCTF/1758099080614-a1312708-007b-4d1f-ab47-3477279b343f.png"></p><p><img src="/2025MoeCTF/1758099105921-80e7e313-2f0b-4a3a-ab60-e26037c26a6f.png"></p><p>easy作为密码直接打开就是了，然后就得解了（这个exe是没啥意义打不开的那种）</p><p>moectf{Y0u_h4v3_cho5en_7h3_r1ght_z1pf1le!!uysdgfsad}</p><h2 id="weird-photo"><a href="#weird-photo" class="headerlink" title="weird_photo"></a>weird_photo</h2><p><img src="/2025MoeCTF/1756139263920-b3d6175a-2ab1-4c9c-82ce-530e704133e5.png"></p><p>小题，好玩</p><p>这种题感觉已经得心应手嗷，这不是注意CRC吗，一眼CRC有问题啊</p><p><img src="/2025MoeCTF/1756139383974-a52e0930-b8d2-4f51-b300-cdda34354794.png"></p><p>宽高有问题啊，改改就是了</p><p><img src="/2025MoeCTF/1756139372178-0e54ad56-f1c7-4577-bb37-1074b2d0bd90.png"></p><p>moectf{Image_Height_Restored}</p><h2 id="WebRepo"><a href="#WebRepo" class="headerlink" title="WebRepo"></a>WebRepo</h2><p><img src="/2025MoeCTF/1756139457049-c3e83f16-2a89-4976-81be-16be52d717a9.png"></p><p>想到了不好的回忆：指LilCTF</p><p><img src="/2025MoeCTF/1756139495878-029a678f-87d6-4395-8d50-9cbea3113ffa.png"></p><p><img src="/2025MoeCTF/1756139532761-72fedae3-f892-4f59-84d5-f84f4f3836db.png"></p><p>扫一下是这个内容，我们试着binwalk一下</p><p><img src="/2025MoeCTF/1756139625082-35dfb76c-6a8a-486c-ab81-fcc04fa8aa90.png"></p><p>有个7zip</p><p><img src="/2025MoeCTF/1756139706936-ceac6199-84ac-4abc-be95-5a14deec4712.png"></p><p>定位后提取</p><p><img src="/2025MoeCTF/1756139770953-74852002-4c74-4bb9-8956-82cae48b17d2.png"></p><p>后缀一改，类似于是个git泄露的题目</p><p><img src="/2025MoeCTF/1756175601643-dff8202b-0165-4f57-acfa-1195f64b0985.png"></p><p>在这边我们可以看到在这个版本有flag的痕迹，我们利用指令git reset –hard 249ff41401736165cd4514cee7afcd31ecfe7d09回退到该版本</p><p><img src="/2025MoeCTF/1756973962624-91863bb3-93ac-4096-8e63-e3c8d52f37ba.png"><img src="/2025MoeCTF/1756973969583-62591f9f-0a29-4ebe-bca5-0e39333e7c76.png"></p><p>成功在同目录下还原flag</p><h2 id="Encrypted-volume"><a href="#Encrypted-volume" class="headerlink" title="Encrypted volume"></a>Encrypted volume</h2><p><img src="/2025MoeCTF/1758095508123-f9b887fd-1f5d-48d2-af53-215d027c537a.png"></p><p><img src="/2025MoeCTF/1758095536165-250caacb-72f0-4ee2-846c-14eebd68ee15.png"></p><p>压缩包打开就这俩，我研究了半辈子第一个文件到底藏啥了死活没研究出来</p><p>毕竟是0kb，我想半天想不明白能有啥，然后去爆破容器了，也不行</p><p>结果刚刚想到说可能是这个rar有问题</p><p><img src="/2025MoeCTF/1758095604912-851db9d0-08a3-44e9-bd7c-bf964c3ed966.png"></p><p>果然，早该binwalk一下的，藏了个png</p><p><img src="/2025MoeCTF/1758095631649-d77aaa07-7588-4b40-b157-0a58728111e4.png"></p><p>是个二维码，扫出来是这个:@(s&lt;”A3F:89x541Ux[&lt;</p><p>应该就是密码了，我们直接vc一下</p><p><img src="/2025MoeCTF/1758095793101-4313095f-936b-4dcd-8cec-afee0eabb046.png"></p><p>打开容器是个txt，是brainfuck编码</p><p><img src="/2025MoeCTF/1758095838702-852b07e3-71ce-4d22-892b-31afc0da8b96.png"></p><p>其实蛮简单一题，就看能不能找到png了，找不到就做不出来，找到了就很顺（其实有点套娃的意思，最后的brainfuck没什么意义）</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>哈基米难没露躲<br><img src="/2025MoeCTF/1757164104299-45039076-1f54-4027-8786-6f95a7be2035.png"></p><p>是一个txt文件，打开来全是哈吉米</p><p><img src="/2025MoeCTF/1757164157290-0ff8be3d-489d-49c5-b899-5244f76c2054.png"></p><p>我怀疑有哈吉米编码了</p><p><img src="/2025MoeCTF/1757164189202-09f8177e-896b-40a4-8531-5858138bf036.png"></p><p>主要是我之前刷到过这个视频（）</p><p><img src="/2025MoeCTF/1757164214064-b7579df0-b5ea-492b-a407-151646e1c96c.png"></p><p>搞半天不能用2.0的哈吉米翻译器，必须用1.0的简单base64加盐<a href="https://lhlnb.top/hajimi/base64">https://lhlnb.top/hajimi/base64</a></p><p><img src="/2025MoeCTF/1757165343587-3b00cd25-7521-4026-9804-1fbde3330a85.png"></p><p>搞半天还是假的！！！‌‌‌‌‍‬‍‌‌‌‌‍‬fakeflag‌‌‌‌‍‬‍‍‌‌‌‌‍‬‌‌‌‌‌‍‍‌‌‌‌‌‍‬‍‬{‌‌‌‌‍‬you‌‌‌‌‌‌‍‌‌‌‌‍‬‌‬‌‌‌‌‌‬‌‌‌‌‌‌‬‍‌‌‌‌‌‍‍‌‌‌‌‌‍‬‌‌‌‌‍‬‌‬‌‌‌‌‌‬‍‌‌‌‌‌‬‍‌‌‌‌‍‬‌‍‌‌‌‌‌‍‌_can_‌‌‌‌‌‌‬‌‌‌‌‌‌‌‌‌‌‌‬‍‌‌‌‌‌‍‌‌‌‌‌‌‌‍‌‌‌‌‌‌‌try‌‌‌‌‌‌‍‌‌‌‌‌‬‍‌‌‌‌‍‬‌‍‌‌‌‌‌‌‍_‌‌‌‌‍‬‌‬‌‌‌‌‍‬‍‌‌‌‌‌‌‬‍‌‌‌‌‌‍‬‌‌‌‌‌‍‍‌‌‌‌‍‬‌‬‌‌‌‌‍‬‍‍searching‌‌‌‌‌‌‌‌‌‌‌‌_text‌‌‌‌‌‍‬_‌‌‌‌‌‬‌‌‌‌‌‌‌‬‌‌‌‌‍‬‌‌‌‌‌‌‬‌‌‌‌‌‌‌‬‌‌‌‌‍‍Steganography}</p><p>叫我搜文本隐写，想不到什么文本隐写</p><p>我想复制这个text‌‌‌‌‌‍‬_‌‌‌‌‌‬‌‌‌‌‌‌‌‬‌‌‌‌‍‬‌‌‌‌‌‌‬‌‌‌‌‌‌‌‬‌‌‌‌‍‍Steganography去搜一下，结果中间爆出一堆问号</p><p>应该就是零宽了</p><p><img src="/2025MoeCTF/1757165726308-2162b8da-0de4-42b1-b9ff-266a6e6f6d42.png"></p><p>果然啊！！！moectf{1b8956b9-a423-4101-a1bd-65be33682c82}</p><p><img src="/2025MoeCTF/1757165687511-0f4ee12c-eeb0-4c12-87ab-b77ccd7967fd.png"></p><p>二血直接拿下！！！</p><h2 id="2048-master"><a href="#2048-master" class="headerlink" title="2048_master"></a>2048_master</h2><p><img src="/2025MoeCTF/1757834009675-6007481c-600c-457e-8fc3-e667dbdac7bc.png"></p><p>这题做的很乱，我也是思路很乱</p><p>拿到一个exe游戏，直接玩我是没有那个心思</p><p>肯定是先想能不能ida一下</p><p><img src="/2025MoeCTF/1757836177505-230d4f8b-fa40-4b2d-abc7-de8935a0071f.png"></p><p><img src="/2025MoeCTF/1757836205383-f57c16ec-e7c4-495b-9f08-fe64d570abaf.png"></p><p>主要还是看见了字符串的内容，明白了flag藏在flag.txt中，但是不能提取出来，考虑到是2048，试试看能不能直接用CE修改数值</p><p><img src="/2025MoeCTF/1757834394506-ebda8202-d85e-4af5-ac27-57d30d43a223.png"></p><p><img src="/2025MoeCTF/1757834468090-7c2ec83c-614d-4dd7-a711-faafccfacb0a.png"></p><p>这边发现分数的确可以调，但是没法得到flag</p><p>因此转变思路变成了修改上部内容</p><p>而上边的内容不是直接用CE能解决的</p><p><img src="/2025MoeCTF/1757835001575-158baeec-ed75-43d4-8c5d-6b53b60d3072.png"></p><p><img src="/2025MoeCTF/1757835019837-25ab0a77-2b98-49ef-ac3b-f7a9c2007b13.png"></p><p>这边发现生成了一个layout.dat会随时跟着exe更新</p><p>于是逆向思考能不能修改这个得到flag</p><p><img src="/2025MoeCTF/1757836439143-f028482b-ed6a-4cdf-866f-4214c655eb40.png"></p><p>结合提示修改为2048，发现已经输出异常了</p><p><img src="/2025MoeCTF/1757836466050-ce920f0f-8f98-4527-b2d4-4c31283c148d.png"></p><p>此时随便按两下就有了</p><p>moectf{Y0u_4re_a_2048_m4st3r!!!!r0erowhu}</p><h2 id="网谷杯-non-interlaced"><a href="#网谷杯-non-interlaced" class="headerlink" title="网谷杯-non-interlaced"></a>网谷杯-non-interlaced</h2><p>Hint：神奇的图片有什么意义呢？</p><p>这边随手记录两道网谷杯的题目，两道misc，我也没参赛，别人给的，这边随便记一笔就是了</p><p><img src="/2025MoeCTF/1757836622390-8f60fe00-6c0f-4327-a879-7557dca08d4a.png"></p><p>这题打开发现长成这样子，按顺序一共九张奇怪的图片</p><p>按照正常的思路，应该是九张照片按什么顺序有一定做法</p><p>先看看1.png好了</p><p><img src="/2025MoeCTF/1757836810405-eaf6da4f-d160-4bc8-9ab9-b426a1b446ce.png"></p><p>扔到随波逐流发现R这一条是有压缩包的样子</p><p>我们用stegslove打开，直接Red一行勾选完</p><p><img src="/2025MoeCTF/1757837081379-37c57378-90de-4386-8a32-e0453f36b783.png"></p><p>然后保存即可，同理看看9.png，发现这个是蓝色的一栏，且有着压缩包的文件尾</p><p><img src="/2025MoeCTF/1757837188593-15e953f7-18f6-452d-8771-5f00d1e1e434.png"></p><p>然后就水到渠成了，全部按这个颜色顺序一个个来就是了。最后把十六进制拼起来</p><p>拼成了压缩包打开，是一个图片</p><p><img src="/2025MoeCTF/1757837215489-1483cc19-6c4a-4598-bd39-d6ba2d997d5c.png"></p><p>如图</p><h2 id="网谷杯-Format-8bits"><a href="#网谷杯-Format-8bits" class="headerlink" title="网谷杯-Format-8bits"></a>网谷杯-Format-8bits</h2><p>Hint：看不懂的汉字隐藏了什么秘密呢？</p><p><img src="/2025MoeCTF/1757836689631-38d1ce62-d8dd-4f0d-ad50-8669cb45ae0d.jpeg"></p><p>直接binwalk，发现有个压缩包</p><p><img src="/2025MoeCTF/1757837317340-0382529a-b3d6-4923-855a-78b7f299ac4c.png"></p><p><img src="/2025MoeCTF/1757837326068-6c6d1d97-964c-40ce-b2af-8c5af37f88cb.png"></p><p>是一堆乱码，其实一开始我是在想会不会是和422异或什么的，发现不是</p><p>结合之前做过的moe的题目</p><p>怀疑是乱码修复</p><p>问题是之前的网站不太行，这边新找了一个不错</p><p><a href="https://xth8013.com/tool/recoverCharset">https://xth8013.com/tool/recoverCharset</a></p><p><img src="/2025MoeCTF/1757837595171-d768b6d0-a86d-4c9f-b711-7ce813ca28a2.png"></p><p>得解</p><h2 id="MoeCTF指导版"><a href="#MoeCTF指导版" class="headerlink" title="MoeCTF指导版"></a>MoeCTF指导版</h2><p>史上最恶心人之题</p><p><img src="/2025MoeCTF/1758527507617-f18e0b3f-928f-46f5-b3bf-cc09835c45e7.png"></p><p>先照着按</p><p><img src="/2025MoeCTF/1758527550024-22a713ac-df03-46eb-9a80-99d737df6740.png"></p><p>这边数数的时候不能再点投喂了</p><p><img src="/2025MoeCTF/1758444951295-c6cb55f4-954a-41af-a6da-6d33a3288c29.png"></p><p>24</p><p><img src="/2025MoeCTF/1758445160706-31e1a356-f589-4b77-b963-7595695b3219.png"></p><p><img src="/2025MoeCTF/1758445050153-1ab4b55d-c723-4dd6-a38e-3272a732499a.png"></p><p>主要是9.1</p><p>我写了半天才发现下边这个</p><p><img src="/2025MoeCTF/1758528543740-da1ce27d-6e23-46ed-a920-923a1d5e7256.png"></p><p>13930</p><p>所以是14101(有加分，要恶心死谁？)</p><p><img src="/2025MoeCTF/1758445066636-85f3c337-e2c2-44ea-8fc8-f69b393d87f5.png"></p><p>？？？</p><p><img src="/2025MoeCTF/1758445297309-6f544b12-ff36-420e-8d92-dd2a39db4710.png"></p><p>重新搞了一次，73</p><p>所以账号是</p><p>241410173</p><p><img src="/2025MoeCTF/1758527596079-c0323a5e-1cbe-4560-b192-d8a81ceaf2ae.png"></p><p><img src="/2025MoeCTF/1758527604076-c74fc11f-83bd-4fcf-b737-54a5e99055a1.png"></p><p><img src="/2025MoeCTF/1758527609759-090eb1a2-b161-46c5-94a7-9689bfd7dbb9.png"></p><p>。我又被恶心了两遍，一个是压根没看前边有几个汉字，第二次是没想到是前三句，我还以为是前两个问题</p><p><img src="/2025MoeCTF/1758527718790-52669444-bf12-4f90-a73c-2cd4928316bb.png"></p><p>还有一句这个，所以第三块变成了14+28+14&#x3D;56</p><p>241410156</p><p><img src="/2025MoeCTF/1758527779051-df9b1655-605f-4c5a-a8d1-f310f26cf11b.png"></p><p>我们输入password</p><p><img src="/2025MoeCTF/1758528029040-13e2e7c4-8099-46bd-afbc-31ba01458e74.png"></p><p>改为incorrect!（我就知道又要搞我）</p><p><img src="/2025MoeCTF/1758528069771-8d045ee3-b71f-4eb6-9a74-e6ecb4432278.png"></p><p><img src="/2025MoeCTF/1758528873258-08d1b96b-20cf-418b-9f71-9769798631cf.png"></p><p>能看清的也是神人了</p><p><img src="/2025MoeCTF/1758528953590-9a611562-5400-4c2b-bb6c-a3ccb63ab5a7.png"></p><p>找到之后直接看元素方便点</p><p>xbhiuebkjvs</p><p><img src="/2025MoeCTF/1758529079085-174b636a-9480-4e16-9303-6bd06903f4c9.png"></p><p>填入******</p><p><img src="/2025MoeCTF/1758529100442-d25a3ad5-1544-444a-b0c6-141106561728.png"></p><p><img src="/2025MoeCTF/1758529151393-5745036c-7967-42dd-84a1-2ba675cb8bf8.png"></p><p>我们似乎必须先按一下翻转然后才能按出flag（或许是因为之前说flag被嵌在里边了吧）</p><p><img src="/2025MoeCTF/1758529325091-1d273825-62ad-426b-9452-a5bf3d93e85b.png"></p><p>我再也不想做这题了</p><p>moectf{76498885-9445-3f2c-67e0-95ad523665c8}</p><h2 id="Pyjail-0"><a href="#Pyjail-0" class="headerlink" title="Pyjail 0"></a>Pyjail 0</h2><p><img src="/2025MoeCTF/1757165779460-2d8dc8f6-dbdc-47b4-8362-880334603361.png"></p><p><img src="/2025MoeCTF/1757214038914-2f5f9237-c376-4dcd-995e-85efe44a0d34.png"></p><p>还要先搞ncat</p><p><img src="/2025MoeCTF/1757215164963-7d09a9cc-5c77-45ec-9db8-1d0a0552cadf.png"></p><p><img src="/2025MoeCTF/1757215213178-60db7aac-7272-427f-bd21-46dcdfbf391f.png"></p><p>搞了个中文版的</p><p>根据题目提示，先输入反着的内容，通过验证码</p><p>接下来输入文件地址，这边说和第十二章一样，那就应该是在环境变量里</p><p>直接输入&#x2F;proc&#x2F;self&#x2F;environ看看</p><p><img src="/2025MoeCTF/1757838378271-e612d69f-371d-49c5-b68a-c93c32441d91.png"></p><p>直接就出了</p><h2 id="Pyjail-1"><a href="#Pyjail-1" class="headerlink" title="Pyjail 1"></a>Pyjail 1</h2><p><img src="/2025MoeCTF/1757838438862-ab847630-46df-4615-ad91-76e31783bf3a.png"></p><p>在我做这个的时候正好看到了这个</p><p><img src="/2025MoeCTF/1757838934392-536335a7-0ea9-4524-92ec-fa1cf3184b2a.png"></p><p>先不用，看看源码</p><p><img src="/2025MoeCTF/1757838658114-a0812511-ad3b-400c-9976-7838cdc16a0e.png"></p><p>先看看python代码</p><p>其实我觉得有点像web题？</p><p>这边过滤了五个函数，我们的目标就是print出在&#x2F;tmp目录下的flag文件</p><p>import杜绝了用别的方法打开，open也被过滤了，但我们必须打开才能看见flag</p><p>这边我们可以利用chr()一个个拼成最后的open，因此print中后半部分为<a href="'/tmp/flag.txt'">chr(111)+chr(112)+chr(101)+chr(110)</a>.read()</p><p>但是光构造没用啊，必须要内置函数</p><p>为了逃逸python沙箱，我们需要利用getattr函数这个核心技巧，来安全访问内置函数</p><p><img src="/2025MoeCTF/1757839796660-836b1d6c-e73f-4151-9c7b-8c88d85a5899.png"></p><p>为什么一定要构造的那么复杂？</p><p><img src="/2025MoeCTF/1757839982216-75a84221-db79-47a8-ac2f-a3027b89f597.png"></p><p>于是得到最后的payload：</p><p>print(getattr(<strong>builtins</strong>, ‘<strong>dict</strong>‘, <strong>builtins</strong>)<a href="'/tmp/flag.txt'">chr(111)+chr(112)+chr(101)+chr(110)</a>.read())</p><p>具体步骤如图</p><p><img src="/2025MoeCTF/1757840012244-065bdcd2-d06d-4ce8-9b00-dfda0ec5343c.png"></p><p><img src="/2025MoeCTF/1757839599493-84766b49-fc8f-418b-b891-8949637134b7.png"></p><p>得到flag</p><h2 id="Pyjail-2"><a href="#Pyjail-2" class="headerlink" title="Pyjail 2"></a>Pyjail 2</h2><p><img src="/2025MoeCTF/1757840097720-30610eb2-a73e-4846-98e0-9e0b64840dec.png"></p><p>内容一致，就只是python程序不一样了（我说就很像web吧？）</p><p><img src="/2025MoeCTF/1757840169930-e11039ee-61fa-4b23-9ceb-53abdf8430ff.png"></p><p>在刚刚的基础上又过滤了一大堆这种特殊字符，寻找方式绕过</p><p>由于下划线被禁，不能用刚刚的方法了</p><p>先搞明白刚刚的原理是什么</p><p><img src="/2025MoeCTF/1757895809413-21f8b801-5823-4693-b7dd-d71170a4c0ad.png"></p><p>主要是这样子六步</p><p>但由于被禁，我们无法获取__builtins__对象，也无法访问其__dict__属性，无法获取函数字典</p><p>这边考虑主要是这样子绕过</p><p>1，利用getattr与chr构造得到各个函数</p><p>比如我们这边可以用getattr(chr(95)+chr(95)+chr(103)+chr(101)+chr(116)+chr(105)+chr(116)+chr(101)+chr(109)+chr(95)+chr(95) )</p><p>来替换’<strong>getitem</strong>‘</p><p>2，利用global（）函数获取全局变量字典</p><p>利用这两步，分别以此构造出read函数，open函数等等即可得到最后的payload</p><p><img src="/2025MoeCTF/1757896212086-a412d136-0a08-4828-9a6b-767da5f7da13.png"></p><p>这边分为了八步：</p><p>1，global函数获取全局变量字典</p><p>2，获取字典的 <code>__getitem__</code>方法，使用 <code>getattr</code>获取 <code>__getitem__</code>方法，也就相当于了[]操作符</p><p><img src="/2025MoeCTF/1757896276776-14c6249f-4172-41b7-97fe-79c9aba15099.png"></p><p>3，利用步骤二的getitem方法获取 <code>__builtins__</code>对象</p><p><img src="/2025MoeCTF/1757896353767-58bf3328-104f-4759-bda4-93c75d8c56bb.png"></p><p>4，有了 <code>__builtins__</code>对象，即可访问获取<code>open</code>函数</p><p><img src="/2025MoeCTF/1757896388174-6e6a661b-b09b-472e-b211-47e2333ea065.png"></p><p>5，调用open函数打开文件</p><p>6，获取read</p><p><img src="/2025MoeCTF/1757896438290-d6d30460-7353-49cc-b00b-880279652d6c.png"></p><p>7，用read打开文件</p><p>8，打印即可</p><p>print(getattr(getattr(getattr(globals(), chr(95)+chr(95)+chr(103)+chr(101)+chr(116)+chr(105)+chr(116)+chr(101)+chr(109)+chr(95)+chr(95))(chr(95)+chr(95)+chr(98)+chr(117)+chr(105)+chr(108)+chr(116)+chr(105)+chr(110)+chr(115)+chr(95)+chr(95)), chr(111)+chr(112)+chr(101)+chr(110))(chr(47)+chr(116)+chr(109)+chr(112)+chr(47)+chr(102)+chr(108)+chr(97)+chr(103)+chr(46)+chr(116)+chr(120)+chr(116)), chr(114)+chr(101)+chr(97)+chr(100))())</p><p><img src="/2025MoeCTF/1757842513834-badafa92-5742-4029-85f8-c290c0f8382d.png"></p><p>得到flag</p><h2 id="Pyjail-3"><a href="#Pyjail-3" class="headerlink" title="Pyjail 3"></a>Pyjail 3</h2><p><img src="/2025MoeCTF/1757896466205-f618cb71-106f-433a-b7cc-cd40a6b43d89.png"></p><p><img src="/2025MoeCTF/1757896503575-25e5850a-7969-4b45-bbed-8001d8999ed5.png"></p><p>这边可以看见直接把__builtins__改成None了，也就是说我们无法调用所有的内置函数</p><p>后边的{}也说了我们没有任何的预定义的局部变量</p><p>面对这种情况，或许只能利用__import__导入模块了</p><p>不知道__import__(‘os’).system(‘’)行不行</p><p><img src="/2025MoeCTF/1757932480278-77cfc717-c22d-43d6-ba62-33ecd2ba2fea.png"></p><p>可以先试试看，至少简单表达式是可以的</p><p>getattr(getattr(().<strong>class</strong>.<strong>base</strong>.<strong>subclasses</strong>()[132].<strong>init</strong>.<strong>globals</strong>[‘sys’],’modules’)[‘os’],’read’)(getattr(getattr(().<strong>class</strong>.<strong>base</strong>.<strong>subclasses</strong>()[132].<strong>init</strong>.<strong>globals</strong>[‘sys’],’modules’)[‘os’],’open’)(‘&#x2F;tmp&#x2F;flag.txt’), 1000)</p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="Crypto入门指北"><a href="#Crypto入门指北" class="headerlink" title="Crypto入门指北"></a>Crypto入门指北</h2><p><img src="/2025MoeCTF/1754879522569-f4477818-4259-4545-b5d9-ee918cb7b64f.png"></p><p>这个入门指北主要讲的就是EIGamal的密码了，是继RSA以来另一个有意思的密码，我觉得值得深挖</p><p><img src="/2025MoeCTF/1755162985775-ce2ebede-c7e6-47e3-a13d-d9682cc64923.png"></p><p>所以这题把私钥给泄露了，肯定是能做出来的</p><p><img src="/2025MoeCTF/1755163243165-cf56d039-4270-4d60-9bc6-ae71c1260a3d.png"></p><p>利用这个公式就能解出题目的答案</p><p>我们直接先求s &#x3D; pow(c1, x, p)</p><p>然后求s的模逆元s_inv &#x3D; pow(s, -1, p)</p><p>最后直接求m &#x3D; (c2 * s_inv) % p</p><p>然后再long_to_bytes即可</p><p><img src="/2025MoeCTF/1755164185473-c922bd63-42c0-420c-af22-5ae11258e33b.png"></p><p>moectf{th1s_1s_y0ur_f1rst_ElG@m@l}</p><h2 id="ez-DES"><a href="#ez-DES" class="headerlink" title="ez_DES"></a>ez_DES</h2><p><img src="/2025MoeCTF/1755164231777-1175a74f-7dba-4f76-8399-e1126c71582a.png"></p><p>分组密码吗？有点意思</p><p>先看看什么是DES</p><p><img src="/2025MoeCTF/1755164277690-deb14261-44a1-4328-a7a4-dab10e436783.png"></p><p><img src="/2025MoeCTF/1755164293969-7ea2dd1e-7009-4527-bcc7-8ec0e939e529.png"></p><p>我们一步步倒着看</p><p><img src="/2025MoeCTF/1755166289017-8df68401-8b6e-4f39-a1c6-7521c32bc509.png"></p><p>这边知道了c，也知道了这个encrypt函数是啥意思，目前下边的c是key加密的flag内容</p><p>而key如下，是五个固定＋三个随机</p><p><img src="/2025MoeCTF/1755166932394-9fb0c78d-bac0-4faa-87c0-15f2c9f62e6b.png"></p><p>那我们直接写代码逆向回去就好了</p><p>注意这边key需要遍历一下</p><p><img src="/2025MoeCTF/1755169491662-17716a33-5624-4497-a3aa-0c04eb86dd2b.png"></p><p>得到答案</p><p>Found flag: moectf{_Ju5t envmEra+e.!}</p><p>Key: ezdes8br</p><h2 id="baby-next"><a href="#baby-next" class="headerlink" title="baby_next"></a>baby_next</h2><p><img src="/2025MoeCTF/1755168890219-d92b298a-b865-4c20-ab75-10556873a419.png"></p><p><img src="/2025MoeCTF/1755168946703-37862186-6414-427b-961a-830e2de5e13f.png"></p><p>看起来就是rsa的题目呀</p><p>前边告诉我们flag一共38位，有八位是moectf{}</p><p><img src="/2025MoeCTF/1755168860174-c5c74343-ac96-4778-a125-cea42abcfd3e.png"></p><p>题目说很好分解，那我们直接上yafu</p><p>果然很好分解</p><p>p &#x3D; 9835790642950870702456388102541833011851580184211232019829465812360043670916676289614924432072209183922656300400121695605187082642402117584019839337925591</p><p>q &#x3D; 9835790642950870702456388102541833011851580184211232019829465812360043670916676289614924432072209183922656300400121695605187082642402117584019839297179867</p><p>直接输入rsa（也只会写这个代码了</p><p><img src="/2025MoeCTF/1755169181681-510edef8-7ba3-43fa-97eb-8add90a63605.png"></p><p><img src="/2025MoeCTF/1755169286281-61d92779-561d-459e-acb0-5b8c7939cb76.png"></p><p>还是rsa简单</p><p>moectf{vv0W_p_m1nu5_q_i5_r34l1y_sm4lI}</p><h2 id="ez-square"><a href="#ez-square" class="headerlink" title="ez_square"></a>ez_square</h2><p><img src="/2025MoeCTF/1755169400585-ee81030a-543f-4fff-b5a8-e75f236763e2.png"></p><p>欸又是rsa的题，还是这个熟练点</p><p><img src="/2025MoeCTF/1755169783620-26abeb5b-a733-42e5-89ef-7405cf0bf4fb.png"></p><p>这题主要是n不好分解，所以给了个hint来辅助一下，辅助我们得到p和q</p><p>一边是（p+q）^2mod(p<em>q)&#x3D;hint的式子，一边是p</em>q&#x3D;n的式子，两个等式求p和q两个未知量，正好求解</p><p>结合题目，这边hint计算后为平方数</p><p>是 2343458209274425996985047093820966198128351630302072151512123489799998738482601894111632387083653590921895308705989628111300210058143690024967352474744452 的平方</p><p><img src="/2025MoeCTF/1755222147546-3bf9cd6f-071e-4c42-bae2-e18d4f721bc0.png"></p><p>代码必须合适才能解出来，不然等半天也搞不出来</p><p>p &#x3D; 8063541879684999172434156846785579383392012202377476576385935453837904086104134169422578105606735811577484535836740321806192056243591239447944792906642589</p><p>q &#x3D; 10407000088959425169419203940606545581520363832679548727898058943637902824586736063534210492690389402499379844542729949917492266301734929472912145381387041</p><p><img src="/2025MoeCTF/1755222206182-942660d5-5556-4202-ac57-9cc1fb7858c4.png"></p><p>然后还是经典rsa代码</p><p><img src="/2025MoeCTF/1755222219650-9eabf695-2610-4996-89f2-ca4d3575bcab.png"></p><h2 id="ezBSGS"><a href="#ezBSGS" class="headerlink" title="ezBSGS"></a>ezBSGS</h2><p><img src="/2025MoeCTF/1755522194041-14ca1a7f-dcf7-413c-89ba-b18b6eec3d55.png"></p><p>要求满足13^x&#x3D;114514mod100000000000099的最小整数x</p><p>专门提一嘴题目，那肯定是和BSGS拖不了干系了</p><p><img src="/2025MoeCTF/1755523425114-e6c68af4-55e0-4af8-bf96-3efaffbc1304.png"></p><p>与题干几乎一致，我们也能满足114514和100000000000099互质</p><p><img src="/2025MoeCTF/1755523551216-8abb6df9-ef2a-4306-9770-960c947de3fd.png"></p><p>直接修改已有脚本</p><p><img src="/2025MoeCTF/1755523952879-624cf9c1-241d-4f90-bb1d-596f494fa424.png"></p><p>依次输入100000000000099，13，114514，</p><p><img src="/2025MoeCTF/1755524066515-160c0a29-e784-4db7-88e9-c0e4e3066cbd.png"></p><p>得到flag</p><p>moectf{18272162371285}</p><h2 id="ezAES"><a href="#ezAES" class="headerlink" title="ezAES"></a>ezAES</h2><p><img src="/2025MoeCTF/1755524117060-7839dd57-a7e6-4fd4-88e5-633c6a20cfdb.png"></p><p><img src="/2025MoeCTF/1755524207484-b1b33bc8-c3ec-41d1-bb21-d290d12b9ced.png"></p><p>从后往前看，enc&#x3D;aes（key，flag），enc已知，key已知，aes算法已知，求flag</p><p><img src="/2025MoeCTF/1755525889609-fbea259b-f9e2-48d0-829f-84abe9ec97c9.png"></p><p>代码写的比较烦，有10 轮完整操作（SubBytes、ShiftRows、MixColumns、AddRoundKey） + 1 轮最终轮</p><p>总的来说就是有逆字节替换、逆行移位、逆列混合等操作</p><h2 id="happyRSA"><a href="#happyRSA" class="headerlink" title="happyRSA"></a>happyRSA</h2><p><img src="/2025MoeCTF/1755526833834-f48d918a-3b93-4174-beaf-0094b6bb784b.png"></p><p>这个太眼熟了，nss也有一题happyRSA</p><p><img src="/2025MoeCTF/1755526939116-e6b03904-24ca-46e2-8fe5-c53e51ae07bd.png"></p><p>上边的是本题，下边的是nss的</p><p><img src="/2025MoeCTF/1755526978965-8ec196c9-4a59-44c5-b56e-cac1bd3aec36.png"></p><p>要我说其实差不多对吗，都是多给了一个方程求p和q</p><p>x&#x3D;power_tower_mod(n_phi + 1, r, pow(n_phi, 3))</p><p>求出p和q这题就结束了</p><p><img src="/2025MoeCTF/1755528539825-e23d989f-a7d0-4a10-8118-9047520ef9d1.png"></p><p>power_tower_mod函数如上，迭代这个123456次</p><p>x&#x3D;power_tower_mod(p+q, r, (p+q)**3)</p><h2 id="ezlegendre"><a href="#ezlegendre" class="headerlink" title="ezlegendre"></a>ezlegendre</h2><p><img src="/2025MoeCTF/1755222276305-ebee1b47-cf72-4315-990d-ea692d314e3a.png"></p><p>给了一堆三十九位的数字串</p><p><img src="/2025MoeCTF/1755222263005-1de29282-cf88-40b8-8ad8-da51ba37a8ac.png"></p><h2 id="杂交随机数"><a href="#杂交随机数" class="headerlink" title="杂交随机数"></a>杂交随机数</h2><p><img src="/2025MoeCTF/1756308883329-02fcd799-2cd6-4bf8-82f3-2a8098615b21.png"></p><p><img src="/2025MoeCTF/1756308869411-5390e0a0-d41c-47ad-87f7-c8b8d6cfa8e6.png"></p><p>代码如上，在尝试了几次之后可以发现其实压根就不随机，最后的输出数和flag息息相关，并且唯一，因此我们可以就这个输出数直接给逆推回flag（甚至还可以爆破？但是或许太麻烦了）</p><p>我们逐块分析</p><p><img src="/2025MoeCTF/1756311581612-88142443-efe9-4415-8a85-94eeb5bfb57d.png"></p><p>lfsr函数，两个参数，先把mask填充的和这个data一样长，然后把这俩玩意异或了，然后再算算这个异或出来的东西的1的个数是奇数还是偶数，奇数就1，偶数就0，把data左移一位来放上这个0&#x2F;1</p><p><img src="/2025MoeCTF/1756311787598-599208d0-165f-4ba5-a012-70d55094a2f1.png"></p><p>接下来是四个参数的lcg函数，生成的是伪随机序列，就是进行了个计算而已，没什么好说的</p><p><img src="/2025MoeCTF/1756311872118-988541aa-35d6-459b-9cd2-3f53557322fb.png"></p><p>后边先初始化，x转化为64位二进制字符，然后分成两半，前一半给L，后一半给R，b是个固定的值，m也是，这俩都是后期给lcg玩的应该</p><p><img src="/2025MoeCTF/1756311960526-d0f7bea2-74b0-46ef-9d4c-aefd158ea3a1.png"></p><p>核心是这个循环，显然循环了整整2025次，先管R叫mask，然后seed是当前的L的二进制整数，再用lfsr函数把L和R结合自更新出新的L</p><p>然后再用lcg函数生成新的R（参数为现在的R，-233，seed,2^32）</p><p>最后交换L和R的位置</p><p>就这种事情还干了2025次</p><p><img src="/2025MoeCTF/1756312153555-e7eae714-8492-4691-8049-9b5443c37a33.png"></p><p>最后拼起来再转整数</p><p>最后得到了我们这个整数，所以我们要转回去的话，先把现在这个搞成二进制的，拆开来</p><p>然后进2025次循环，每次循环就先置换，置换完了还原R，然后还原L，这个地方有点难度因为他本来就是自加密</p><p><img src="/2025MoeCTF/1756313764449-2e2c8bdf-9902-4632-a3ec-37f5f1f14064.png"></p><p>搜索一下其实可以搜到这个算法</p><h2 id="happyrsa"><a href="#happyrsa" class="headerlink" title="happyrsa"></a>happyrsa</h2><p><img src="/2025MoeCTF/1757409244685-9c2e8c2a-8f34-4f90-82f6-d77857152846.png"></p><p>是一道RSA的题目</p><p><img src="/2025MoeCTF/1757409274585-a04b2daf-dfc2-4805-a20f-216d1aad9ca5.png"></p><p>这边主要是多了一个函数，递归123456次，然后a是一直不变的</p><p>m不断变为<font style="color:rgb(33, 33, 33);">小于或等于该整数m的相对素数的数量</font></p><p>最后返回a的a%m次方再取m的余</p><p>a其实是不变的，k也知道了就是取123456次递归，问题只在于m的变化，即m在123456次后会变成什么样子</p><p>理清了加密思路后我们看看这边怎么做</p><p>首先是提示，↑↑表示幂塔（tetration）运算</p><p><img src="/2025MoeCTF/1757411075616-b9c284bf-95b6-4a0c-b98b-c1dcdb22f601.png"></p><p>幂塔，顾名思义就是个塔（）</p><p>因为有提示，所以我们直接可以得到下边的这个式子</p><p><img src="/2025MoeCTF/1757412004429-6fb31ea8-b8d0-4d68-84d6-9fed9db3abd1.png"></p><p>这边还是主要由于这个简化形式，否则怕是难做</p><p>于是解密步骤化为了下述的三部</p><p><img src="/2025MoeCTF/1757412375743-9f76f66a-47bc-4cd4-8edc-270e83990160.png"></p><p>化简出来后，我们就可以用x表示N，即n_phi了，那样的话N其实已知了</p><p>然后恢复p和q，毕竟p+q已知，pq已知</p><p>接着最后解密m即可，就没难度了</p><p>这边最难的部分还是化简，还要再深思一下，我实在不明白怎么化简的</p><p><img src="/2025MoeCTF/1757412510137-bbefa9f2-dc84-429e-8f57-6b3bca372e1f.png"></p><p>主要还是这样子三步，化简出来就简单了</p><p>得到flag：moectf{rsa_and_s7h_e1se}</p><h2 id="神秘数字太多了"><a href="#神秘数字太多了" class="headerlink" title="神秘数字太多了"></a>神秘数字太多了</h2><p><img src="/2025MoeCTF/1757414270538-b02221e3-06af-40a4-8e03-4bfd65c844cb.png"></p><p>和BSGS算法息息相关</p><p>我们需要构造这个N个1</p><p><img src="/2025MoeCTF/1757414358177-ca27bc79-8a47-4e4d-a28e-ab2a8fe1320e.png"></p><p>直接这样子即可，所以我们要找的N其实就是上述式子的k</p><p>于是式子转变为了</p><p><img src="/2025MoeCTF/1757414393338-af250d7a-5239-4612-a9f4-ea8d93db3b18.png"></p><p><img src="/2025MoeCTF/1757414558656-716dcc13-9467-4e12-83dc-1ef7f9cf1344.png"></p><p>直接用BSGS算法</p><p><img src="/2025MoeCTF/1757414569020-fd9ea830-3e1c-4185-bbc4-7a671fbe95c2.png"></p><p>输入即可得到答案</p><p>moectf{7718260004383}</p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><p>:::info<br>ak啦！真的超有意思，非常适合新手，特别好玩，也很生动，虽然可能有点太简单了（）</p><p>:::</p><h2 id="0-Web入门指北"><a href="#0-Web入门指北" class="headerlink" title="0 Web入门指北"></a>0 Web入门指北</h2><p><img src="/2025MoeCTF/1754963372649-e2b3d310-5ac2-413e-9420-730db64a0f73.png"></p><p>给了个指北说明书，跟题目我看没什么关系</p><p><img src="/2025MoeCTF/1754963469150-a69a4fa0-3fc3-4604-83cf-819ff436d374.png"></p><p>还给了七个上锁的zip，有点意思</p><p>所以第一题应该只和txt文件有关了</p><p><img src="/2025MoeCTF/1754963519676-db27964d-b210-4fa0-b69c-44ec79fad7b5.png"></p><p>给了一大长串的JSfuck编码</p><p>可以直接按F12进入控制台，然后输入这个jsfuck代码运行，看见答案</p><p><img src="/2025MoeCTF/1754964680651-b6e87da6-c074-4120-964c-8dda869b5204.png"></p><p>moectf{jv@vScr1p7_14_so0o0o0o_inT3r3&amp;t!!!}</p><h2 id="Moe笑传之猜猜爆"><a href="#Moe笑传之猜猜爆" class="headerlink" title="Moe笑传之猜猜爆"></a>Moe笑传之猜猜爆</h2><p><img src="/2025MoeCTF/1754990320792-d5697881-c633-40a4-9046-01dda97f7710.png"></p><p>点开来查看源码</p><p><img src="/2025MoeCTF/1754990375006-e3608080-e33f-4c17-85fa-62d38d654b1f.png"></p><p>这题是在和randomNumber比较</p><p>所以我们可以直接打开控制台，输入randomNumber，然后把这个数字拿去猜，百猜百中</p><p><img src="/2025MoeCTF/1754990313182-c218acea-0989-4442-826c-e91377f5c450.png"></p><p>得到答案FLAG: moectf{d5819f8f-6c5f-e4a2-7131-67cece980472}</p><h2 id="01-第一章-神秘的手镯"><a href="#01-第一章-神秘的手镯" class="headerlink" title="01 第一章 神秘的手镯"></a>01 第一章 神秘的手镯</h2><p><img src="/2025MoeCTF/1754965161860-7af2961c-f316-4679-956e-db59bd2329e3.png"></p><p>这个题还是反向代理的，还得下个websocket的软件</p><p><img src="/2025MoeCTF/1754965225916-d562429f-90cc-4132-8de3-fb66a874a233.png"></p><p>打开来我们玄天至宝</p><p><img src="/2025MoeCTF/1754965241379-766800bc-0499-4509-98b7-8a771bf109eb.png"></p><p>至于迷咒，我看就是txt里边的内容吧</p><p><img src="/2025MoeCTF/1754965432685-cec19967-f601-4a5a-b8ce-e5a216dc0f61.png"></p><p>哦这边主要是考无法粘贴怎么输入进去</p><p>直接F12，然后在元素区定位这个框</p><p><img src="/2025MoeCTF/1754965692318-7d380d61-b358-4d81-97db-5d2fa7c385df.png"></p><p>然后把这行字“在此输入万言启封咒”改成密文</p><p><img src="/2025MoeCTF/1754965662931-7189ec35-51f4-4a12-abda-3795dc975fbc.png"></p><p>然后就出答案了</p><p>moectf{f_i2_1s_Your_g00d_fri3nd!!}</p><p><img src="/2025MoeCTF/1754966018007-10ffdbb1-f942-41a3-8d9a-4a1e09a93eab.png"></p><p>也是有小说密码了</p><p>@Dxyoyugnd8EHrg7NaXaSA1J</p><h2 id="02-第二章-初识金曦玄轨"><a href="#02-第二章-初识金曦玄轨" class="headerlink" title="02 第二章 初识金曦玄轨"></a>02 第二章 初识金曦玄轨</h2><p><img src="/2025MoeCTF/1754966258785-65837f34-e7ed-4120-8f89-d0830b5ed33c.png"></p><p>一道考Http请求包的题目哇，先连接看看</p><p><img src="/2025MoeCTF/1754966370278-9fc09599-e2cb-46b8-8c8c-e4460bf5b2a1.png"></p><p>按下ctrl+u即可用神识探查其中文字</p><p><img src="/2025MoeCTF/1754966363256-18129451-0dc8-49e5-91f7-fac5d1482183.png"></p><p>让我们前往黄金轨道看看</p><p><img src="/2025MoeCTF/1754966684509-1be40c8a-6e0f-41eb-bb8d-557f6f74a1d7.png"></p><p>什么？！天道。。拒绝了我。。。。</p><p><img src="/2025MoeCTF/1754967038052-a42ec900-191b-4a95-9433-dd5e2d213889.png"></p><p>还是要学一下这个http包怎么写吧</p><p>不过这题其实直接抓包然后看这个网站就行了</p><p><img src="/2025MoeCTF/1754968042447-d62dd377-81ff-477b-a8d4-2c9dc0fd227e.png"></p><p>确实在破阵盘这不直接看见了（所以抓包软件就是破阵盘？？？）</p><p>moectf{0bs3rv3_Th3_Gold3n_traiL}</p><p><img src="/2025MoeCTF/1754968243966-bc8bab62-de77-492b-9a7f-ffa808846ee9.png"></p><p>来了这不就fAMwxQ2rEhbXWUw9IJmvU4ec</p><p><img src="/2025MoeCTF/1754968343239-e12f890d-f55c-470f-a640-4b299b6b26c1.png"></p><p>看这玩意中二的</p><h2 id="03-第三章-问剑石！篡天改命！"><a href="#03-第三章-问剑石！篡天改命！" class="headerlink" title="03 第三章 问剑石！篡天改命！"></a>03 第三章 问剑石！篡天改命！</h2><p><img src="/2025MoeCTF/1754968390664-d0fc8257-c9d6-409c-88a5-94abc9ca859a.png"></p><p><img src="/2025MoeCTF/1754968485231-91bd5ec9-ccaf-4e7d-8a6f-874c5266be7c.png"></p><p>改东西呗</p><p><img src="/2025MoeCTF/1754968652599-b4cec1a8-7af2-4666-a500-7c633f5061af.png"></p><p>直接抓包然后篡改天道，资质直接S，光芒也给直接干到flowing_azure_clouds</p><p>然后发送请求就能看见flag</p><p>moectf{gEt-pO5T-TraNSMIssion_15-4_gOoD_mEthoD!!110}</p><p><img src="/2025MoeCTF/1754968767973-83042529-fe3b-43e7-a904-01968a183210.png"></p><p>小说解压密码：cBrtGRQSKeLvty0@lKyFpU@Z</p><p>是很经典的打脸环节（虽然资质是假的）</p><h2 id="04-第四章-金曦破禁与七绝傀儡阵"><a href="#04-第四章-金曦破禁与七绝傀儡阵" class="headerlink" title="04 第四章 金曦破禁与七绝傀儡阵"></a>04 第四章 金曦破禁与七绝傀儡阵</h2><p>（我其实很好奇为什么要把04设置的比05难导致04出现在05后边了）</p><p><img src="/2025MoeCTF/1754968954888-e72c3447-e090-492f-ba23-dcf62a7873a0.png"></p><p><img src="/2025MoeCTF/1754969031076-a28bf08e-1b3b-48c5-aeae-ba94639d0e15.png"></p><p>确实是真经</p><h3 id="磐石傀儡"><a href="#磐石傀儡" class="headerlink" title="磐石傀儡"></a>磐石傀儡</h3><p><img src="/2025MoeCTF/1754970758586-8d4f4a65-1dee-4be5-a261-6643437900d9.png"></p><p>这真是教程题啊，太适合新生了，比如我</p><p><img src="/2025MoeCTF/1754970984482-4d0c25e9-619f-4b53-9e4b-14c62c0d308c.png"></p><p><img src="/2025MoeCTF/1754971058441-529c4f46-80cc-4e39-a87e-f17d1d6ce754.png"></p><p>我们直接给url添加参数即可</p><p><img src="/2025MoeCTF/1754971082671-12a9f95e-9c6b-40cf-b3f6-f7920df8eca7.png"></p><p>获得玉简碎片: bW9lY3Rme0Mw不知道后边会不会有用</p><blockquote><p>做完之后的答案如下：</p><p><img src="/2025MoeCTF/1754974845179-8f7bbda2-56b3-4b73-b695-56fc8faa97d8.png"></p></blockquote><p>好第二关</p><h3 id="织云傀儡"><a href="#织云傀儡" class="headerlink" title="织云傀儡"></a>织云傀儡</h3><p><img src="/2025MoeCTF/1754971113893-908fb16d-21b3-491f-a466-0b84549407c9.png"></p><p>post请求</p><p><img src="/2025MoeCTF/1754971133937-5c28ded4-8fda-4b79-85da-4b62555ff182.png"></p><p><img src="/2025MoeCTF/1754971166939-38b5095b-712e-4d3f-a58c-5f1f26d6ee4d.png"></p><p>直接hackbar插件载入即可</p><p>获得玉简碎片: bjZyNDd1MTQ3</p><blockquote><p>做完之后的答案如下：</p><p><img src="/2025MoeCTF/1754974876229-bc56b931-65a9-4d65-9bc6-7bcf941af759.png"></p></blockquote><p>好第三关</p><h3 id="溯源傀儡"><a href="#溯源傀儡" class="headerlink" title="溯源傀儡"></a>溯源傀儡</h3><p><img src="/2025MoeCTF/1754971225146-26c7e4cc-ec3d-4680-8de9-e354d3cb4e1a.png"></p><p>第三关要本地访问</p><p>利用X-Forwarded-For连到自己这边</p><p><img src="/2025MoeCTF/1754971341753-edfccc5e-c04a-4403-946c-c6d369286fa7.png"></p><p><img src="/2025MoeCTF/1754971445345-258107cc-607e-4ff6-bafe-ff8dd09df591.png"></p><p>加上就能看见回显答案了</p><p><img src="/2025MoeCTF/1754971462346-b23a8361-d44e-4ca6-a7ff-a2501a344315.png"></p><p>获得玉简碎片: MTBuNV95MHVy</p><blockquote><p>做完之后的答案如下：</p><p><img src="/2025MoeCTF/1754974985659-94a285b8-5394-4271-ad59-6deb4b10230d.png"></p></blockquote><p>输入soul什么的进入第四关</p><h3 id="器灵傀儡"><a href="#器灵傀儡" class="headerlink" title="器灵傀儡"></a>器灵傀儡</h3><p><img src="/2025MoeCTF/1754971488169-f5057cb6-c3a9-45b0-be1d-fbbab0d5d9d0.png"></p><p>使用moe browser，去哪搞这个，直接修改浏览器标识即可</p><p>user-agent改成这个就行</p><p><img src="/2025MoeCTF/1754971642172-3f1023c1-83fb-44cd-b627-2d53973ad0fb.png"></p><p>看见答案了</p><p><img src="/2025MoeCTF/1754971660511-1ecea6bc-3656-4584-bec3-33ad45c1e970.png"></p><p>获得玉简碎片: X2g3N1BfbDN2</p><blockquote><p>做完之后的答案如下：</p><p><img src="/2025MoeCTF/1754974924496-e84246ad-0e0e-47e2-9768-058ed6a5500d.png"></p></blockquote><p>&#x2F;heart_seal进入第五关</p><h3 id="心印傀儡"><a href="#心印傀儡" class="headerlink" title="心印傀儡"></a>心印傀儡</h3><p><img src="/2025MoeCTF/1754971691731-20ed54ff-127a-44bc-b9c5-7dece9cce431.png"></p><p>修改身份认证来了</p><p><img src="/2025MoeCTF/1754972630024-31d06800-0935-4046-b9a0-693a85a0dfcd.png"></p><p>这边记一下这些sec-fetch</p><p><img src="/2025MoeCTF/1754972655154-4e1ed782-fbcb-4fd1-87ab-eadeb0dbb3b5.png"></p><p><img src="/2025MoeCTF/1754972663301-6f5aff29-8db1-47fd-83fe-ea14b8a01912.png"></p><p><img src="/2025MoeCTF/1754972677436-4e3a67fa-81e0-47a7-8820-d168b263d11b.png"></p><p><img src="/2025MoeCTF/1754972692297-cbbccf97-5643-4261-b96e-d42d620ee84b.png"></p><p>当然这题跟这些都没关系，这题考cookie来的</p><p><img src="/2025MoeCTF/1754974013172-3afcf9f0-db2f-4a79-ada3-659da014380c.png"></p><p>直接加入这个cookie就好了</p><p><img src="/2025MoeCTF/1754974003138-317908d3-53dd-4d03-9616-9a72d0b89ac4.png"></p><p>获得玉简碎片: M2xfMTVfcjM0</p><blockquote><p>做完之后的答案如下：</p><p><img src="/2025MoeCTF/1754974963969-6821fd13-ca0d-4ef7-9486-aff8517b8f09.png"></p><p><img src="/2025MoeCTF/1754975901234-c936b333-13f4-440e-b46c-ae3aa1024044.png"></p></blockquote><p>&#x2F;pathfinder前往第六关！！！</p><h3 id="前尘傀儡"><a href="#前尘傀儡" class="headerlink" title="前尘傀儡"></a>前尘傀儡</h3><p><img src="/2025MoeCTF/1754974072373-c110603d-47aa-4689-8aae-f84d3eabb011.png"></p><p>考的referer</p><p><img src="/2025MoeCTF/1754974218802-b1d7dc88-dc25-4b92-9296-2bbb33fe378a.png"></p><p><img src="/2025MoeCTF/1754974234681-ea7021a8-b681-4397-b12c-f51484c1772e.png"></p><p>所以我们加入Referer:<a href="http://panshi/entry%E5%8D%B3%E5%8F%AF">http://panshi/entry即可</a></p><p><img src="/2025MoeCTF/1754974419851-ea20f445-8305-4afd-9fe9-bfa12c799bc6.png"></p><p>获得玉简碎片: bGx5X2gxOWgh</p><blockquote><p>做完之后的答案如下：</p><p><img src="/2025MoeCTF/1754975452838-4087dc94-8755-4d81-a075-6398d633d86b.png"></p></blockquote><p>&#x2F;void_rebirth最后一关去咯</p><h3 id="逆转傀儡"><a href="#逆转傀儡" class="headerlink" title="逆转傀儡"></a>逆转傀儡</h3><p><img src="https://cdn.nlark.com/yuque/0/2025/png/54209285/1754974460142-3462e80d-d6ba-46c0-8095-b410acbfc347.png"></p><p>这啥玩意，春秋蛊吗</p><blockquote><p>这边学到个扫描的方法，记一下</p><p><img src="/2025MoeCTF/1754974566679-39f822ed-ca5f-4f8c-8830-fc643adfa945.png"></p></blockquote><p><img src="/2025MoeCTF/1754974672642-810aae87-a750-4551-92a1-848b5bef55ff.png"></p><p>就直接put新生！就好啦？</p><p><img src="/2025MoeCTF/1754974696314-76a9c052-88ba-449f-a936-2aeccdd2fb47.png"></p><p>获得玉简碎片: fQ&#x3D;&#x3D;，这不是一眼base64吗</p><blockquote><p>做完之后的答案如下：</p><p><img src="/2025MoeCTF/1754975446313-1b38e83d-f33b-4e6d-8826-4df70a8b15c5.png"></p><p><img src="/2025MoeCTF/1754975882929-fba43a9f-c4f2-4d30-b897-f757a5aa5b88.png"></p></blockquote><p>&#x2F;final_success走我们去合成玄机秘钥</p><p><img src="/2025MoeCTF/1754975569009-027950d2-4f7f-4a17-8e45-cd6a44a29647.png"></p><p>应该就是base64了，我们集合一下通关玉简bW9lY3Rme0MwbjZyNDd1MTQ3MTBuNV95MHVyX2g3N1BfbDN2M2xfMTVfcjM0bGx5X2gxOWghfQ&#x3D;&#x3D;</p><p><img src="/2025MoeCTF/1754975656707-d7f0c289-2786-47bf-97f8-3413e2f2c426.png"></p><p>得到答案moectf{C0n6r47u14710n5_y0ur_h77P_l3v3l_15_r34lly_h19h!}</p><p><img src="/2025MoeCTF/1754975724170-2a6eb8f6-fb61-497c-b3dd-2a1d9e5258d9.png"></p><p>jU92itArJr2pe04Em6HF_tik</p><p>小说没啥，就展示了一下代码</p><h2 id="05-第五章-打上门来！"><a href="#05-第五章-打上门来！" class="headerlink" title="05 第五章 打上门来！"></a>05 第五章 打上门来！</h2><p><img src="/2025MoeCTF/1754975942459-ed02d81f-ebd4-4341-8961-0f1017ffede0.png"></p><p><img src="/2025MoeCTF/1754976454289-7aba8c88-9a7a-4749-a9c2-07948958bdec.png"></p><p>破阵之机，寻得根目录</p><p><img src="/2025MoeCTF/1754976039294-de6e3e8b-c2ae-496e-82e6-ee1c7e8c64b8.png"></p><p>谁家赛博本源</p><p>根据这个提示，在文件目录穿梭的技法，锁定的是目录遍历漏洞，<a href="https://blog.csdn.net/angry_program/article/details/107855078">链接</a></p><p><img src="/2025MoeCTF/1754987275241-0e33a2c0-948a-4eaa-bb12-1a9b6469f18c.png"></p><p>原理如下</p><p><img src="/2025MoeCTF/1754987827542-252e30ef-d8e5-490d-a2cf-4a482e3baeba.png"></p><blockquote><p><img src="/2025MoeCTF/1754987816097-f46eb545-e994-446e-afd6-7900c39b7447.png"></p><p>看见所有的目录了，每一行信息如下</p><p><img src="/2025MoeCTF/1754988328449-d9187235-6cd1-4fa8-b6c9-9031ffef2c2b.png"></p><p>x不代表没有密码，而是代表着密码在..&#x2F;..&#x2F;..&#x2F;etc&#x2F;shadow</p><p><img src="/2025MoeCTF/1754988385198-541513a7-f367-4c30-9d5c-894ebe944071.png"></p><p><strong><font style="color:rgb(77, 77, 77);">这边每个字段意义是——用户名：加密密码：最后一次修改时间：最小修改时间间隔：密码有效期：密码需要变更前的警告天数：密码过期后的宽限时间：账号失效时间：保留字段</font></strong></p><p><img src="/2025MoeCTF/1754988740081-96e2cdbb-0dae-4769-abad-3ec29d1fc8cc.png"></p></blockquote><p>当然了，这题用不到那么多东西，这题只需要我们退回到上级目录即可</p><p><img src="/2025MoeCTF/1754989290787-bd1764d9-6df0-430f-83d6-c85388fad403.png"></p><p>马上就看见个flag文件夹</p><p><img src="/2025MoeCTF/1754989310235-c0dad1e6-3620-4596-97c6-5e0082672f76.png"></p><p>这就有了</p><p>moectf{@LI-1NPuT_I5-MaIiC1Ou52c17d18d}</p><p><img src="/2025MoeCTF/1754989333873-f7360d64-dc63-46ce-9eef-409f8a8e76ca.png"></p><p><img src="/2025MoeCTF/1754989383151-32cb51c5-db33-4755-b13c-c2c2bff0f2a1.png"></p><h2 id="06-第六章-藏经禁制？玄机初探！"><a href="#06-第六章-藏经禁制？玄机初探！" class="headerlink" title="06 第六章 藏经禁制？玄机初探！"></a>06 第六章 藏经禁制？玄机初探！</h2><p><img src="/2025MoeCTF/1754991922083-ea8da96c-54fd-402a-9ab7-e6fe4e4abd0c.png"></p><p>这不数据库的sql注入吗（）</p><p><img src="/2025MoeCTF/1754991913122-af2eaa80-616f-49be-8e95-1505e5919743.png"></p><p><img src="/2025MoeCTF/1754992053071-22bbb35b-7e15-4800-9215-b6729f6b10f5.png"></p><p>看这大阵，所以这个是这样子传输的，就是个sql注入题</p><p><img src="/2025MoeCTF/1754992141879-8d9d6ef8-25f9-43bc-8cc2-a1cbff30b37c.png"></p><p>输入万能密码</p><p>username&#x3D;’&#x3D;’&amp;password&#x3D;’&#x3D;’</p><p>后端的程序大概如下：</p><p>string sql &#x3D; select * from users where username &#x3D; ‘input_username’ and password &#x3D; ‘input_password’;</p><p>我的输出会让这个变成：</p><p>string sql &#x3D; select * from users where username &#x3D; ‘’&#x3D;’’ and password &#x3D; ‘’&#x3D;’’;</p><p>其中的<code>&#39;&#39;=&#39;&#39;</code>返回<code>1</code></p><p>即<code>username=True and password=True</code>，即可绕过。</p><p><img src="/2025MoeCTF/1754994502890-6563124f-4224-4640-ac9b-5e49d46915c1.png"></p><p>moectf{W31cOM3_To-sQI_InjECtiOnl168a28fe}</p><p><img src="/2025MoeCTF/1754994526181-800182ac-915b-482b-9c08-806a51eafb86.png"></p><p><img src="/2025MoeCTF/1754994659840-adedfd00-9c08-4010-975f-3b415da25109.png"></p><p>也是让这个恒等，但步骤显然不是我这样子，做题还是要先探查再去看，不是盲目去做</p><h2 id="07-第七章-灵蛛探穴与阴阳双生符"><a href="#07-第七章-灵蛛探穴与阴阳双生符" class="headerlink" title="07 第七章 灵蛛探穴与阴阳双生符"></a>07 第七章 灵蛛探穴与阴阳双生符</h2><p><img src="/2025MoeCTF/1754995063166-c6120bbc-04d8-4f78-a09d-736f4d9b70c8.png"></p><p>这个文件。。有点眼熟啊，是不是robots.txt啊</p><p>欸不让我去&#x2F;flag.php</p><p><img src="/2025MoeCTF/1754995352962-e6e27857-0df2-446d-b2fc-bcb8896c0d58.png"></p><p>那我们手动上这个，发现这样子的php文件</p><p><img src="/2025MoeCTF/1754995742034-72c03551-c6f5-4e72-85a1-ab134aedcb6e.png"></p><p>其实就是要两个具有相同 MD5 哈希的不同字符串</p><p>&#x2F;flag.php?a&#x3D;d131dd02c5e6eec4693d9a0698aff95c2fcab58712467eab4004583eb8fb7f8955ad340609f4b30283e488832571415a085125e8f7cdc99fd91dbdf280373c5bd8823e3156348f5bae6dacd436c919c6dd53e2b487da03fd02396306d248cda0e99f33420f577ee8ce54b67080a80d1ec69821bcb6a8839396f9652b6ff72a70&amp;b&#x3D;d131dd02c5e6eec4693d9a0698aff95c2fcab50712467eab4004583eb8fb7f8955ad340609f4b30283e4888325f1415a085125e8f7cdc99fd91dbd7280373c5bd8823e3156348f5bae6dacd436c919c6dd53e23487da03fd02396306d248cda0e99f33420f577ee8ce54b67080280d1ec69821bcb6a8839396f965ab6ff72a70</p><p>我辛辛苦苦找的md5一样的值竟然不行，或许是太长了，试试看绕过吧</p><p><img src="/2025MoeCTF/1754996818926-57e7e87b-9ee0-4f62-a8e7-02bcdf247d24.png"></p><p><img src="/2025MoeCTF/1754996827800-d95682ab-af55-41e3-878a-2391ed0d8a96.png"></p><p>可以试试看0e绕过，一下就成功了</p><p><img src="/2025MoeCTF/1754996949366-7148bddb-78b4-49e8-8bab-b1c032a286e9.png"></p><p><font style="color:rgb(0, 0, 0);">moectf{md5-Is_not_SafE!l292f0e0dcfb}</font></p><p><img src="/2025MoeCTF/1754996967015-2d1bc807-c6b0-406a-9fc2-e4708d2aa438.png"></p><p><img src="/2025MoeCTF/1754997034736-4c049fe3-98cc-4108-9adb-122acb684aeb.png"></p><p>还真是（）</p><h2 id="08-第八章-天衍真言，星图显圣"><a href="#08-第八章-天衍真言，星图显圣" class="headerlink" title="08 第八章 天衍真言，星图显圣"></a>08 第八章 天衍真言，星图显圣</h2><p><img src="/2025MoeCTF/1754997228392-d06456ff-bb6c-404c-935c-cb57720a1918.png"></p><p>看起来还是sql注入，估计是过滤加上了</p><p>果然之前的不行了</p><p>先进行模糊测试</p><p><img src="/2025MoeCTF/1754998323417-1220463c-23a9-437e-aebd-c064b4348bc5.png"></p><p>似乎都能通过？</p><p><img src="/2025MoeCTF/1754998836131-45c64929-e57f-4dd1-9d2a-aaebf25f8faa.png"></p><p>提示是都要这仨的精髓</p><p>这里我想尝试看看列数但是这边毫无回显啊</p><p><img src="/2025MoeCTF/1755005553863-fcb1f69a-35a8-4f99-a5f6-960721a86202.png"></p><p>但是输入经典 ‘ OR 1&#x3D;1 –   或者是上一题的&#x3D;&#x3D;这种万能钥匙，成功进入了管理者页面，回显正常</p><p>现在应该试试看可查询的属性列了</p><p><img src="/2025MoeCTF/1755013902274-58999ba9-0fc8-46f1-bcfa-9d4d1a1be111.png"></p><p><img src="/2025MoeCTF/1755015853840-6e286506-80ea-49c4-8530-f450d5298844.png"></p><p>尝试了多次后发现得这样子构造，需要&#x2F;<em>!BY</em>&#x2F;来替代空格</p><p>需要#替代–+</p><p>联合构造永真环境</p><p>最后测试出这个列数为2</p><p>那我们直接输入’ UNION SELECT null,null#验证一下</p><p><img src="/2025MoeCTF/1755017135293-23a1502d-8885-4938-a286-dba350298567.png"></p><p>没问题的</p><p>下一步确认回显位置</p><p>‘ UNION SELECT ‘test1’,’test2’#</p><p>输入后如下，确认位置在第一个</p><p><img src="/2025MoeCTF/1755017180382-c493d350-8c2e-47e4-b87d-3b2495f31d53.png"></p><p>因此我们输入’ UNION SELECT @@version,database()</p><p>直接输出数据库版本</p><p><img src="/2025MoeCTF/1755017398065-6cc73b35-a29a-4e44-9567-b9cb86fc0176.png"></p><p>‘ UNION SELECT table_name,table_schema FROM information_schema.tables WHERE table_schema &#x3D; database() LIMIT 0,1#</p><p><font style="color:rgb(77, 77, 77);">要找列肯定是去information_schema库</font></p><p><img src="/2025MoeCTF/1755017702305-7afe7d46-af95-468c-bed8-3e53bba7c59c.png"></p><p>输入直接welcome flag了，关键表名为flag</p><p>‘ UNION SELECT column_name, data_type FROM information_schema.columns WHERE table_name &#x3D; ‘flag’ LIMIT 0,1#</p><p>提取一下列名</p><p><img src="/2025MoeCTF/1755017814951-e3bf4587-b1e0-41ac-a061-17c7ab8cbb80.png"></p><p>所以列名为value</p><p>都知道了呗，表名flag，列名value</p><p>‘ UNION SELECT value, null FROM flag#</p><p>直接搜，注意value要在一列的位置</p><p><img src="/2025MoeCTF/1755018344120-8485ca16-33d6-42b5-ac85-9c0ce7ec4022.png"></p><p>解得flag</p><p>moectf{UnIOn_Bas3d-sq1i-fTW1!d4719196}</p><p><img src="/2025MoeCTF/1755018374607-79f8893a-230a-4e35-bb68-83d0e9200e00.png"></p><p><img src="/2025MoeCTF/1755018435807-3321f5b0-f0b0-4716-94cd-46ef9ad3e0b9.png"></p><p>？为什么是二五，我试出来是1啊，奇了怪了，算了算了</p><p>web就这样子ak啦，还有很多要学的，这个真的很好玩</p><h2 id="09-第九章-星墟禁制·天机问路"><a href="#09-第九章-星墟禁制·天机问路" class="headerlink" title="09 第九章 星墟禁制·天机问路"></a>09 第九章 星墟禁制·天机问路</h2><p><img src="/2025MoeCTF/1755481437181-30c7cbc5-e1ab-4b7b-92f1-cc899eaa013c.png"></p><p><img src="/2025MoeCTF/1755481789609-1dba8aff-ddb1-4b1f-b800-3afaf228b37f.png"></p><p>输入星域真名就好了</p><p><img src="/2025MoeCTF/1755481827856-6eb1ada9-4129-4ac1-89d4-b420264cdede.png"></p><p>尝试直接ls &#x2F;失败</p><p>但是尝试; ls &#x2F;成功了</p><p>这说明了命令注入漏洞存在（；被识别为命令分隔符），那我们也是确认了空格和；的可用性</p><p><img src="/2025MoeCTF/1755521611146-d9635e9f-ef41-435b-bb59-49a866a85ba9.png"></p><p>只是没有看见flag的痕迹，再找找看</p><p>实在是在各种路径都没找到</p><p>所以我们只能直接全局搜索了; find &#x2F; -name ‘<em>flag</em>‘ 2&gt;&#x2F;dev&#x2F;null</p><p><img src="/2025MoeCTF/1755521807866-bab7fa6b-5664-4a2e-84b0-8446624e14ad.png"></p><p>没找到可用文件，cat得到的都是没效果的内容</p><p>说明不存在以flag命名的文件，我们换一个思路，搜索看看环境变量里是否存在</p><p>;env | grep -i flag</p><p>列出含有flag的环境变量</p><p><img src="/2025MoeCTF/1756202333530-773ddc8f-b747-4461-aa51-f16a81b4e58b.png"></p><p>成功找到flag，这说明很多时候flag也会藏在环境变量中</p><p><img src="/2025MoeCTF/1756202361750-7ad32a41-4f88-40e3-aebd-d77b562ea560.png"></p><p>CszFiOPw1kDQoKB_hS6@Do^n</p><p><img src="/2025MoeCTF/1756205201559-b194f047-edbb-4538-87b0-6412acd339d6.png"></p><h2 id="10-第十章-天机符阵"><a href="#10-第十章-天机符阵" class="headerlink" title="10 第十章 天机符阵"></a>10 第十章 天机符阵</h2><p><img src="/2025MoeCTF/1756205226571-ca0ae8d5-4ea3-4e22-8468-aafd88769b97.png"></p><p>省流也是够省了</p><p>直接输入ls，提示报错</p><p><img src="/2025MoeCTF/1756205405554-fa63dc88-2871-45c6-af59-6ed4529690c7.png"></p><p>说明我必须传入合法的xml格式内容</p><p><img src="/2025MoeCTF/1756210466483-1fb51fba-4046-4e2a-8e5e-f9b43dfd6051.png"></p><p>注意XML的语法规则</p><p>在几次失败尝试后逐渐摸清了应该是&lt;契约&gt;&lt;阵枢&gt;&#x2F;flag.txt;&lt;&#x2F;阵枢&gt;&lt;解析&gt;cat&lt;&#x2F;解析&gt;&lt;&#x2F;契约&gt;的类型</p><p>但是一直不出来，似乎这条路被过滤了</p><p><img src="/2025MoeCTF/1756264347610-8a8ac423-d1f8-4ae9-86b3-3441f2424972.png"></p><p>在尝试了各种绕过后最后确认了这题需要使用外部攻击，利用XML外部实体声明<!ENTITY xxe SYSTEM "./flag.txt">得到flag</p><p><img src="/2025MoeCTF/1756264855149-f83d4282-24c3-48f8-83ac-6f01a47d2f77.png"><img src="/2025MoeCTF/1756264875057-ac764052-5dfe-405a-986b-b4ba7a8e3ede.png"></p><p>我想主要还是因为有配置，解析器会加载外部实体，如果没有的话估计不行</p><p>我们来看revenge</p><h2 id="10-第十章-天机符阵-revenge"><a href="#10-第十章-天机符阵-revenge" class="headerlink" title="10 第十章 天机符阵_revenge"></a>10 第十章 天机符阵_revenge</h2><p><img src="/2025MoeCTF/1756264992415-7b21ff3c-2570-4e39-b2f0-ef171f99aa97.png"></p><p><img src="/2025MoeCTF/1756264983559-8ac161c8-c880-41a2-bff1-7b46760f45d9.png"></p><p>果然前边的不让用了</p><p>可能只是在别的地方？过滤一下数据流看看flag.txt的绝对地址</p><p><img src="/2025MoeCTF/1756265306398-1b90efe9-7ad2-4c00-8b15-f6ff3791a02b.png"></p><p>直接就出来了，这说明这题依旧没有屏蔽外部实体</p><p><img src="/2025MoeCTF/1756265318840-2ccdc9c1-7357-414a-8e04-9b7d89e722bf.png"></p><p>0mzKObH~eIodVLbwF9921DTT</p><p><img src="/2025MoeCTF/1756265379302-14e6806b-5508-41a8-92c8-2fbcff1493af.png"></p><p>果然啊，这题就是有天道护盾，所以只能用外部实体符强行嵌入</p><p>而且这个版本也能工作，说明<code>/flag.txt</code>文件的内容不包含任何特殊字符</p><p>这题还是XXE漏洞啊</p><p>安全建议如下：</p><p><img src="/2025MoeCTF/1756265742654-424feee7-57ec-48e7-ac50-a71a343db4f4.png"></p><h2 id="11-第十一章-千机变·破妄之眼"><a href="#11-第十一章-千机变·破妄之眼" class="headerlink" title="11 第十一章 千机变·破妄之眼"></a>11 第十一章 千机变·破妄之眼</h2><p><img src="/2025MoeCTF/1756277739758-df8eaee5-c64b-4e17-b77b-3c52f0b8ecfa.png"></p><p>省流已经写的很清楚了</p><p>但是五种怎么说也有120种排列，单靠手打显然不可能，更何况参数名还要等于参数值</p><p>所以我们编写脚本，将120种参数传入</p><p><img src="/2025MoeCTF/1756282898727-4f11adf9-2cf7-468b-a96f-48b7328dabc0.png"></p><p>在遍历后成功发现了正确的输出</p><p><img src="/2025MoeCTF/1756282939595-70ecf955-1899-4c91-a6b1-87cc8b248383.png"></p><p>但是这个参数时刻都在变化，并不是找到后就可进入的</p><p>寻得正确参数，再以虚空穿行之法，穿越层层禁制，直抵阵眼核心。</p><p>需要虚空穿行一下</p><p>我们在查出来后直接访问flag.php即可</p><p><img src="/2025MoeCTF/1756283363562-baeb568b-453a-4f3d-96ff-9d919eadb6d5.png"></p><p>失败了</p><p>尝试直接访问网址，访问到了find.php</p><p><img src="/2025MoeCTF/1756291845301-00130470-3c15-4f50-818f-152c8d453096.png"></p><p><img src="/2025MoeCTF/1756291870430-7e16564b-6994-4d2b-baae-178e997b69f8.png"></p><p>然后就被嘲讽了</p><p>看不见，那试试看能不能靠编码出</p><p><img src="/2025MoeCTF/1756293620738-5aa3e1d2-5e5f-463a-bb5a-982e26472757.png"></p><p>尝试用base64输出</p><p><img src="/2025MoeCTF/1756293637670-6256564e-2b2f-40f3-b029-d51e89016a1c.png"></p><p>直接就有了，看这老弟</p><p>moectf{79bc1e24-caea-3a27-f57d-1c9f376d53a5}</p><p><img src="/2025MoeCTF/1756293667068-91dd8626-dcc2-4955-b5aa-17b67a794c64.png"></p><p>W3WOVC8XU1v_189G0dINixcb</p><h2 id="12-第十二章-玉魄玄关·破妄"><a href="#12-第十二章-玉魄玄关·破妄" class="headerlink" title="12 第十二章 玉魄玄关·破妄"></a>12 第十二章 玉魄玄关·破妄</h2><p><img src="/2025MoeCTF/1756293760507-62d69286-e31f-4522-8940-9a6216b2e0cb.png"></p><p>这省流越来越精简了，蚁剑简单啊</p><p><img src="/2025MoeCTF/1756294859322-ef7b3edd-49a7-4488-9e38-f3842583dd02.png"></p><p>可以看到连接密码是cmd，直接蚁剑吧</p><p><img src="/2025MoeCTF/1756294911951-4f5a3e97-30ce-4bee-b2cb-f3f51967a322.png"></p><p>找半天找不到，试试看直接命令行搜吧</p><p><img src="/2025MoeCTF/1756303567035-f13a5b99-ccd6-458c-8f05-e21c1fe080bc.png"></p><p>结果压根就没有叫flag的文件啊</p><p>也有可能存在环境变量里</p><p><img src="/2025MoeCTF/1756981302208-3d78c330-6e96-4fa0-b839-4411c41984b9.png"></p><p>找到了，flag</p><p><img src="/2025MoeCTF/1756981350316-70358972-26d0-42fe-afb3-f67c8285630b.png"></p><p>其实就是说这个moectf的flag在环境变量而已</p><h2 id="13-第十三章-通幽关·灵纹诡影"><a href="#13-第十三章-通幽关·灵纹诡影" class="headerlink" title="13 第十三章 通幽关·灵纹诡影"></a>13 第十三章 通幽关·灵纹诡影</h2><p><img src="/2025MoeCTF/1757992176427-6da02121-de27-4a0b-9b33-a3585fdfd513.png"></p><p>这边给的提示很多，已经把要求都说完了</p><p><img src="/2025MoeCTF/1757992212476-2cca5bbc-0097-4ce7-bbf5-ae957590a8d0.png"></p><p>只要满足这些即可，我们随便搞一个jpg文件然后在文件尾加上一句话木马看看</p><p><img src="/2025MoeCTF/1757992496079-ce0e51a7-bed2-4abd-9fa1-f895e2a8441b.png"></p><p>反正只看前边的六个十六进制</p><p>我们可以直接上传php，反正也没过滤，伪装一下就行了，进去改成说这玩意是jpg</p><p>蚁剑连接后即可得到flag</p><p><img src="/2025MoeCTF/1757993054147-38af9958-9750-4ac1-a0ef-c9d9b0a56b45.png"></p><p><img src="/2025MoeCTF/1757993297641-9fc8a3fc-8b96-49c3-9e67-0428bab516af.png"></p><p>就是把php文件伪装成jpg文件上传即可</p><h2 id="14-第十四章-御神关·补天玉碑"><a href="#14-第十四章-御神关·补天玉碑" class="headerlink" title="14 第十四章 御神关·补天玉碑"></a>14 第十四章 御神关·补天玉碑</h2><p><img src="/2025MoeCTF/1757993622640-9f7acd84-9028-4d0c-a755-14065fecc127.png"></p><p><img src="/2025MoeCTF/1757993643880-b5766fbd-68b3-4776-8ff7-1b5e04909835.png"></p><p>御神关同样是文件上传漏洞来的</p><p>但是在这边过滤了很多邪道术法</p><p>考虑到题目的提示，我们可以找找看有什么apache特殊文件</p><p><img src="/2025MoeCTF/1758429119830-34f53a88-1bc4-41ea-8342-e31387eb124c.png"></p><p>搜索后可以找到这个.htaccess文件</p><p><img src="/2025MoeCTF/1758429157293-9df5bc57-9350-4c29-8574-30991726009a.png"></p><p>这边可以参考我在nssctf遇到的题目，直接上传这个文件，然后让所有的文件都是用php解析，再上传php一句木马伪装的文件即可</p><p><img src="/2025MoeCTF/1758429648060-f785a8d0-0d3c-487a-9694-bf8780fc83b0.png"></p><p><img src="/2025MoeCTF/1758429395433-6e06a556-0e09-4dbc-9e07-e84ea8421791.png"></p><p>OK先上传这个</p><p><img src="/2025MoeCTF/1758429411835-617e0243-56a9-4a0d-b573-edf25cf607e8.png"></p><p>然后上传伪装的php一句话木马</p><p><img src="/2025MoeCTF/1758429692013-66fea84b-b520-4a68-b4fd-0d96d8730584.png"></p><p>接下来蚁剑连接即可</p><p><img src="/2025MoeCTF/1758429746276-f3de1dcf-df1a-4f62-9d1c-6d402ff1bfd1.png"></p><p><img src="/2025MoeCTF/1758429763179-66e8362b-66f8-4439-99eb-ca16d452b1b6.png"></p><p><img src="/2025MoeCTF/1758429777891-b04744dd-f9c5-44b6-9b81-67776d0aa4e7.png"></p><p>答案是这样子的</p><h2 id="15-第十五章-归真关·竞时净魔"><a href="#15-第十五章-归真关·竞时净魔" class="headerlink" title="15 第十五章 归真关·竞时净魔"></a>15 第十五章 归真关·竞时净魔</h2><p><img src="/2025MoeCTF/1758429874865-2cffff71-6a13-442a-a2b3-7fe949293557.png"></p><p>这边倒是没给什么提示</p><p><img src="/2025MoeCTF/1758430279270-9383deba-277f-4457-a3a0-c00fa7d2a2a4.png"></p><p>还是一样的传.jpg&#x2F;.png&#x2F;.gif文件漏洞</p><p>但是会进行重命名净化不太明白是什么意思</p><h2 id="16-第十六章-昆仑星途"><a href="#16-第十六章-昆仑星途" class="headerlink" title="16 第十六章 昆仑星途"></a>16 第十六章 昆仑星途</h2><p><img src="/2025MoeCTF/1758356044843-67809535-a499-4d1b-ad77-c6a32f8947f2.png"></p><?phperror_reporting(0);highlight_file(__FILE__);include($_GET['file'] . ".php");![](2025MoeCTF/1758356142126-58ea4688-1317-46cc-94da-4d629ec224d8.png)代码很少，一条条看首先是error_reporting(0);意味着就算发生错误了也不会有任何的回显报错然后是`highlight_file(__FILE__);`：高亮显示当前文件的源代码（即这个脚本本身）。当你直接访问该脚本时，会看到其源代码最后是include($_GET['file'] . ".php");从`file`GET参数中获取值，并自动附加`.php`扩展名，然后尝试包含（include）该文件。例如，如果`file=flag`，则实际包含的文件是`flag.php`。所以一个问题是如果flag不是在.php文件里，会被强行加上.php的后缀，如何绕过另一个问题就是如何避免其被highlight_file执行既然这样子写了，那很有可能就确实不是.php文件结尾的了，因此我们不能使用`php://filter`方法，因为我们是永远无法定位到具体路径的，就算用../遍历，也会面临最后变成.txt.php的问题，从而定位不到具体路径，而无法提取![](2025MoeCTF/1758359081575-c40631e0-e551-45a9-acd1-3aa1a0f50704.png)因此这边解决第一个问题我们只能使用data://方法而避免highlight执行我们可以利用base64绕过，也可以利用<?php system('');?><p>包裹执行system命令</p><p>?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,<?php system('ls /');?></p><p><img src="/2025MoeCTF/1758359442547-232ae53a-cb93-4370-af0a-b03f8c210c55.png"></p><p>成功读到flag所在文件</p><p>cat &#x2F;flag-1pZ2J0vNMvyuId8a8wmMF3BsWXeCao.txt</p><p><img src="/2025MoeCTF/1758359423284-ba0d5882-3cfc-4259-b23d-3be8e13d4187.png"></p><p>得到flag</p><p><img src="/2025MoeCTF/1758359600362-2284e3a2-8f6e-4ab1-87e0-3f0108dc9420.png"></p><p>而在答案中则是利用的base64绕过，其实是一样的，只是base64输出<?php system('cat /flag'); ?></p><h2 id="17-第十七章-星骸迷阵·神念重构"><a href="#17-第十七章-星骸迷阵·神念重构" class="headerlink" title="17 第十七章 星骸迷阵·神念重构"></a>17 第十七章 星骸迷阵·神念重构</h2><p><img src="/2025MoeCTF/1758530073338-41423d5f-af7b-4018-b90d-0208058a7e7d.png"></p><p><img src="/2025MoeCTF/1758530102396-aea0717a-009c-4d55-bf0f-cb5fa3138cb2.png"></p><p>开始返璞归真没有外壳了</p><p>上来还是经典highlight_file(<strong>File</strong>)，当你直接访问该脚本时，会看到其源代码</p><p>接下来是类A，有一个公共元素$a，然后定义了一个魔术方法__destruct，当销毁时会自动调用，执行$a中包含的字符串</p><p>后边是反序列化，看有没有参数a，有就直接用unserialize函数</p><p>我们构造一下payload</p><p>我们说有一个对象，类名为A，长度为1</p><p>然后再描述一下这个A，就说其为字符串，属性值为phpinfo（）；看看</p><p>a&#x3D;O:1:”A”:1:{s:1:”a”;s:10:”phpinfo();”;}</p><p>直接就出了</p><p><img src="/2025MoeCTF/1758530587396-f16646cd-3cbd-420e-ac03-0efdae8984ee.png"><br>moectf{db332f2c-cb7a-edc1-a671-e8dd883a7bdc}</p><h2 id="18-第十八章-万卷诡阁·功法连环"><a href="#18-第十八章-万卷诡阁·功法连环" class="headerlink" title="18 第十八章 万卷诡阁·功法连环"></a>18 第十八章 万卷诡阁·功法连环</h2><p><img src="/2025MoeCTF/1758530981978-1a897467-fe19-4589-9af5-c1bac47dd72d.png"></p><p><img src="/2025MoeCTF/1758530976806-95c4ed0f-a6e0-444c-8d51-511c2a85e392.png"></p><p>其实和上边那题差不多</p><p>这边代码会检查是否存在GET函数person，如果存在就对其调用unserialize（）函数，这边反序列化了输入且无过滤</p><p>而PersonA定义了wakeup函数，会在被反序列化之后自动调用，执行$this-&gt;name-&gt;work()</p><p>如果这边我们能控制PersonA的$name属性，使其成为一个PersonB对象，那么我们实际上调用的就是PersonB的work函数了</p><p>这边work函数还有eval函数</p><p>所以我们应该想办法构造PersonB的$name属性，然后通过eval（）函数执行</p><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="逆向工程入门指北"><a href="#逆向工程入门指北" class="headerlink" title="逆向工程入门指北"></a>逆向工程入门指北</h2><p><img src="/2025MoeCTF/1755019115949-4c854547-5ef0-4e66-8ba6-100c5d64b51b.png"></p><p><img src="/2025MoeCTF/1755019097081-ba54bd24-2b8f-495b-88b7-6bb2fa1aaa2f.png"></p><p>第一题打开还有教程呢，那我们直接听话ida打开就好</p><p>然后shift+f12：可以打开string窗口，一键找出所有的字符串，右击setup，还能对窗口的属性进行设置</p><p><img src="/2025MoeCTF/1755019274578-1acb5c75-813a-4a62-a02f-85160fe32a25.png"></p><p>打开来就是一大串哇</p><p>直接crtl+f打开搜索栏，搜索flag</p><p><img src="/2025MoeCTF/1755019244959-61c53df2-c663-45ac-9c53-ddb2ef826ebf.png"></p><p><img src="/2025MoeCTF/1755019264675-699415f2-0288-4d31-9af5-72c14c832247.png"></p><p>成功找到flag为：</p><p>moectf{open_your_IDA_and_start_reverse_engineering!!}</p><h2 id="upx"><a href="#upx" class="headerlink" title="upx"></a>upx</h2><p><img src="/2025MoeCTF/1755019328546-06209174-718e-45d0-b00f-1f0faa539389.png"></p><p><img src="/2025MoeCTF/1755047578655-68c78c59-3976-4023-88c5-51bfb2895757.png"></p><p>UPX是什么？是一个可执行文件的压缩工具，同时可以用于加壳</p><p><img src="/2025MoeCTF/1755047728000-ccd35fae-df1b-45b3-bef0-b9bda4139823.png"></p><p>加壳指的就是给那个程序执行前加了点步骤，防御</p><p><img src="/2025MoeCTF/1755047776164-074297d7-970a-4487-8634-57dc5f5a56d0.png"></p><p>先看看原来给的加没加壳</p><p><img src="/2025MoeCTF/1755048189559-e40a1bd0-ae0e-4d00-b5e8-c7c25bb46d00.png"></p><p>下了个PEiD看看</p><p>那这边输入upx -d 1.exe我们直接对题目所给的exe进行脱壳，成功脱壳</p><p><img src="/2025MoeCTF/1755047859041-03249500-3b94-4a40-bd8f-9a3382eb3bd5.png"></p><p>可以看见脱壳后文件都大了不少</p><p>原来的是放不进ida的，而现在能够放进去了</p><p><img src="/2025MoeCTF/1755048756440-b773be2e-e707-4308-ba94-a39dc840648d.png"></p><p>看见这样子一串，我们肯定是要(char)v9[i] &#x3D;&#x3D; v6[i]</p><p>这边输入字符串，会把我的输入放到buffer（包括我输入的回车），然后会遍历每一个字符，一个个放到v9[]去</p><p>接下来最后一个字符 v9[i] &#x3D; Buffer[i] ^ Buffer[i+1] ^ 0x21  最后一个 v9[i] &#x3D; Buffer[i] ^ 0x21  </p><p>接着校验前 35 个字节：<code>(char)v9[i]</code> 必须逐个等于常量表 <code>v6[i]</code></p><p>所以让 <code>(char)v9[i] == v6[i]</code> 的方法：把 <code>s[35]=0x0A</code> 当作已知，从 <code>i=34</code> 倒推 <code>s[i]=v6[i]^s[i+1]^0x21</code>，得到的 35 个字节是你的输入；最后按回车提交  </p><p>那我们根据v6，直接写代码逆推即可</p><p><img src="/2025MoeCTF/1755050077230-ff54e4b8-f867-4697-b049-03451023781e.png"></p><p>正好v6[]就在上边</p><p><img src="/2025MoeCTF/1755050123179-8dccf708-05cb-41e1-960b-bba536718d79.png"></p><p>果然是要考虑到换行边界的，最后得到flag为moectf{Y0u_c4n_unp4ck_It_vvith_upx}</p><h2 id="upx-revenge"><a href="#upx-revenge" class="headerlink" title="upx_revenge"></a>upx_revenge</h2><p><img src="/2025MoeCTF/1757990774255-129ea257-f5e9-4ed8-8055-2d27060c1cd6.png"></p><p>upx-d不让用了，但是手动脱壳看上去过于困难了</p><p><img src="/2025MoeCTF/1757990817657-6e4a0795-c59a-4999-90a2-ba9c409aa9d6.png"></p><p>猜测是不是改UPX了，好像很多题都这样</p><p>发现确实，多加了一个1，放到十六进制发现还有个0</p><p>那我们删一下</p><p><img src="/2025MoeCTF/1757990848947-358c9057-5ea2-4471-99e9-1ce993d3ef10.png"></p><p><img src="/2025MoeCTF/1757991002698-c5abc412-8ac5-4378-b4c7-37ccac23d79f.png"></p><h2 id="ez3"><a href="#ez3" class="headerlink" title="ez3"></a>ez3</h2><p><img src="/2025MoeCTF/1755050248389-27b8c669-06cb-458c-beca-9237e9d82d58.png"></p><p>问我知不知道z3 solver，还真不知道，搜一下</p><p><img src="/2025MoeCTF/1755050359595-ac07c936-fa80-44db-8f4c-f1bdcd869c24.png"></p><p>是一个求解器，可以用来做数学运算、综合性编程问题和逻辑题之类</p><p><img src="/2025MoeCTF/1755054178068-0f0fdbae-97e6-403f-a833-d047275867c0.png"></p><p>先在ida看看这个题目，发现输入后首先要求输入是42位长度</p><p>然后是要用moectf{}来包裹住这个flag</p><p>所以我们要reverse的就是中间那34个字节的东西</p><p><img src="/2025MoeCTF/1755054362374-68f98d5d-d46d-46ea-9980-bd77bfc259b8.png"></p><p>而这些东西需要和check函数比对</p><p>那我们就去看看check函数</p><p><img src="/2025MoeCTF/1755054419401-be2df43f-a8a6-4c1f-affa-a78811250784.png"></p><p>check函数长成这样子</p><p><img src="/2025MoeCTF/1755106246335-9874f882-d4d3-4348-9fe3-bf8ec7a7e68b.png"></p><p>是在进行一个遍历后选择异或的操作</p><p><img src="/2025MoeCTF/1755106260438-d926f31e-ee3f-4dd5-928e-833d9d33bf90.png"></p><p><img src="/2025MoeCTF/1755106132511-eb1f670a-4092-463f-802f-c75470d4b392.png"></p><p>当然需要和a[n33]比较，我们这边找到了a数组的内容</p><p><img src="/2025MoeCTF/1755106508193-b0ec0a34-2ca7-49b9-b806-75038ebe2484.png"></p><p><img src="/2025MoeCTF/1755106515626-23b9499c-0442-4d16-987d-be6cd9f337f8.png"></p><p>写得代码，根据数组a逆向，成功得到flag</p><p>（虽然我并没有用z3 solver，这玩意老是报错）</p><p>moectf{Y0u_Kn0w_z3_S0Iv3r_N0w_a1f2bdce4a9}</p><h2 id="base"><a href="#base" class="headerlink" title="base"></a>base</h2><p><img src="/2025MoeCTF/1755587138842-bb182f47-555b-4dda-8fd8-626248414ef4.png"></p><p>先die，看见是64位</p><p><img src="/2025MoeCTF/1755587234512-f8ff4b1a-e56e-4976-9fb3-4ac067686c74.png"></p><p>定位main函数</p><p><img src="/2025MoeCTF/1755587257169-ff8bb3e8-344b-418e-98a8-a85d5fb61006.png"></p><p>就好了？就没了，好吧</p><p>moectf{Y0u_C4n_G00d_At_B45e64!!}</p><h2 id="speed"><a href="#speed" class="headerlink" title="speed"></a>speed</h2><p><img src="/2025MoeCTF/1755587335224-cf9fac1a-6127-4073-bb50-e63f194af4b4.png"></p><p>先die</p><p><img src="/2025MoeCTF/1755587318521-581c73e0-edad-431e-ac83-4d7409da2418.png"></p><p>好哦是64位，放到ida里</p><p><img src="/2025MoeCTF/1755587368917-7fb37f43-5305-44a1-bb03-195803a42ce8.png"></p><p>定位一下main函数</p><p>似乎没东西，再看窗口Winmain</p><p><img src="/2025MoeCTF/1755607329461-a68f4db9-9c8e-400b-b0f3-eaa43497e9a2.png"></p><p>能看见moe，蛮好的</p><p>有窗口函数，但是原来的文件打不开，试试看动态调试</p><p><img src="/2025MoeCTF/1755607594038-2270216c-ba0d-4a7a-b4b3-01161c62cb2e.png"></p><p>果然在这个地方出现了窗口，打开后结果如下：</p><p><img src="/2025MoeCTF/1755607565419-736171f4-a3c6-4999-9282-b453e64f94b2.png"></p><p>moectf{Just_dyn@mic_d3bugg1ng}</p><h2 id="catch"><a href="#catch" class="headerlink" title="catch"></a>catch</h2><p><img src="/2025MoeCTF/1755595661950-3359abef-154c-4695-9ccc-ae36dfcb614f.png"></p><p>先die然后ida64打开</p><p><img src="/2025MoeCTF/1755595702119-4e9e6f6c-b3c3-42e7-ab3f-bb9f42937401.png"></p><p>搜索后发现了flag藏在程序中</p><p><img src="/2025MoeCTF/1755595728835-82c4ab84-2120-4382-bd99-de848e645555.png"></p><p>一步步找我们就能找到flag如下，密文为geoi<del>lq</del>bcyUcyUkUlkaoUlfkmw</p><p><img src="/2025MoeCTF/1755595779510-49c3a89b-afd5-43e1-ad2c-9eb89efeea62.png"></p><p><img src="/2025MoeCTF/1755595828057-a03b1c2f-aa1c-43e2-93f7-9734adb050ac.png"></p><p>这边enc函数是在给这玩意与11异或，那咱直接把密文和11异或即可</p><p><img src="/2025MoeCTF/1755596825058-2b424f0d-5786-4e13-b1da-c89b772b2a9d.png"></p><p>好算出来不对啊，我无语了</p><p>结果直接shift+f12就看见了个差不多的</p><p><img src="/2025MoeCTF/1755596810544-7a2eedc8-9a9e-4e11-a378-f64bab078533.png"></p><p><img src="/2025MoeCTF/1755596847831-7051386f-86e9-4549-a10d-6071320fc483.png"></p><p>rot13就出来了，flag就这个moectf{S4m3_Tr1ck_with_@flower_desuwa}</p><p>（其实是自己有一个算法，一直在变的，多动调几次就出来了）</p><h2 id="ezpy"><a href="#ezpy" class="headerlink" title="ezpy"></a>ezpy</h2><p><img src="/2025MoeCTF/1755698661549-a259d6f0-6aca-4295-9ef8-7ed1c22f7a9a.png"></p><p>给的pyc文件，直接线上改成py文件看看</p><p><img src="/2025MoeCTF/1755698704337-f17455d7-2f23-4818-9c43-f7edfcce7cae.png"></p><p>反编译结果如上</p><p>阅读代码，会将输入和114514进行一个编码</p><p>而输出如果为wyomdp{I0e_Ux0G_zim}即正确</p><p>其实上边就是个凯撒而已，我们扔随波逐流都能出</p><p><img src="/2025MoeCTF/1755699015000-5f1dccd0-ebec-41d5-8b46-42828049bca5.png"></p><p>moectf{Y0u_Kn0W_pyc}</p><h2 id="flower"><a href="#flower" class="headerlink" title="flower"></a>flower</h2><p><img src="/2025MoeCTF/1755107205008-6e37535e-0753-4f58-809b-b0834e7cf902.png"></p><p>这个在spc新生赛的时候就有略微了解过，说起来下边的maze题也是</p><p>我记得没错的话花指令就是存在一串垃圾指令，它与程序本身的功能无关，并不影响程序本身的逻辑，用来防御</p><p><img src="/2025MoeCTF/1755107613225-497d4928-5d64-402d-84b1-4c516d604fb9.png"></p><p>搜索了一下看见这样子一串</p><p>但是这一次遇见的和之前的不一样，这个是可以反编译的花指令</p><p><font style="color:rgb(77, 77, 77);">这类花指令本身是正常的汇编指令，它们运行完后不会改变原来程序的堆栈，寄存器，但能起到干扰静态分析的作用，一般分为两种，一种是改变堆栈操作，另一种是利用call指令或Jmp指令增加执行流程复杂度。</font></p><p>这边找一下，找到_start函数出现问题</p><p><img src="/2025MoeCTF/1755157588358-30c32a39-5181-4422-930a-df69fc48a27b.png"></p><p>检测到正的sp值了，堆栈指针不平衡</p><p><img src="/2025MoeCTF/1755157698419-f51bc3f0-bab7-47d7-afa0-cd4cf500accf.png"></p><p>存在以上问题</p><p>要进行栈调整，首先应选中进行调整的地址，并选择Edit▶Functions▶Change Stack Pointer</p><p><img src="/2025MoeCTF/1755158064265-e734b37f-992b-45c7-ae0a-4c6e940acb5c.png"></p><p>改完之后发现问题仍然存在，似乎是_libc_start_main_impl处有问题</p><p><img src="/2025MoeCTF/1755158407696-d6cfbc55-b0e1-4ff1-a4aa-386c8d73c9f8.png"></p><p>确实报错了，检测到对const内存的写访问，输出可能是错误的</p><p>主要是这俩错误</p><p><img src="/2025MoeCTF/1755158468034-a0e6e933-dd34-4309-b9cb-d737aab77dc2.png"></p><p>先把初始sp值改成0</p><p><img src="/2025MoeCTF/1755158846544-7f4c18cb-478f-4d01-ac19-1aa36fd6bd13.png"></p><p>自动修复栈分析后长的都不一样了</p><p>（上边是之前做的，下边是培训完做的）</p><p><img src="/2025MoeCTF/1755608524664-ad63de59-9ac3-46e8-b816-d11e9aaa908c.png"></p><p>咱导入Linux去</p><p><img src="/2025MoeCTF/1755620976427-f28dcabe-590f-426a-8131-fce8d80b5361.png"></p><p>来连上先</p><p><img src="/2025MoeCTF/1755621066712-f7a177d5-9a29-4599-a83a-54d655c69579.png"></p><p>定位main函数</p><p><img src="/2025MoeCTF/1755621136180-eb44fd75-b570-4ece-8ee9-0dcdf5bf3d07.png"></p><p>动态调试失败</p><p>分析主函数，似乎核心问题在于check和solve函数</p><p>check函数未发现异常，而solve函数似乎遭到了抵抗阻止反编译的进行</p><p><img src="/2025MoeCTF/1755622579035-46db7885-1bb5-496a-a427-7751f9ca1b9a.png"></p><p><img src="/2025MoeCTF/1755792180918-121a7856-64c5-446b-b304-f62794a791b8.png"></p><p>定位红色区域</p><p><img src="/2025MoeCTF/1755791629311-a4fa2c6c-dc9f-4295-b75e-881923f39e01.png"></p><p>找花指令直接nop掉</p><p><img src="/2025MoeCTF/1755792852543-61c12334-1162-4c27-8460-b3e7c966bec8.png"></p><h2 id="A-cup-of-tea"><a href="#A-cup-of-tea" class="headerlink" title="A cup of tea"></a>A cup of tea</h2><p><img src="/2025MoeCTF/1755672015055-3b160bc1-8af9-4200-8601-156a96f7d729.png"></p><p>正好今天学到tea加密啊，我们来看看moe的</p><p><img src="/2025MoeCTF/1755672075977-ef87aed3-82a2-44a0-95fa-380cbc91be17.png"></p><p><img src="/2025MoeCTF/1755672120828-c25e03fd-6194-4b3b-8f6e-983a94614403.png"></p><p>定位到主要的函数</p><p><img src="/2025MoeCTF/1755672177591-b329656a-b4c7-4bc4-a936-f113dcfe9968.png"></p><p>找到key和密文</p><p><img src="/2025MoeCTF/1755672333095-f4c24f1c-9dde-4c49-92f3-5855781cd600.png"></p><p>定位到tea加密部分</p><p>直接改数字</p><p><img src="/2025MoeCTF/1755676041550-e8d7ba32-91eb-41c7-8a9b-7578baca2a14.png"></p><p><img src="/2025MoeCTF/1755676045859-c30e1811-2f58-4e68-82e3-9568bd89cfc7.png"></p><p>moectf{h3r3_4_cuP_0f_734_f0R_y0U!!!!!!}</p><p>今天也是学的颇有成效</p><h2 id="Two-cups-of-tea"><a href="#Two-cups-of-tea" class="headerlink" title="Two cups of tea"></a>Two cups of tea</h2><p><img src="/2025MoeCTF/1755676586155-6dd38d96-ecbe-40d1-aef7-28499dc6bc03.png"></p><p>规范做默认</p><p><img src="/2025MoeCTF/1755676633361-82995b0f-606d-4376-b557-b76a9f9b6ebe.png"></p><p><img src="/2025MoeCTF/1755676657902-4fd6c518-bf8c-4175-b7be-737b9d56650e.png"></p><p>我们点开来看看tea加密部分</p><h2 id="Mazegame"><a href="#Mazegame" class="headerlink" title="Mazegame"></a>Mazegame</h2><p><img src="/2025MoeCTF/1755162398047-e480dec5-751b-41aa-89c6-2f59874b6214.png"></p><p>打开主函数</p><p><img src="/2025MoeCTF/1758182506918-49d5a102-86dd-432a-bcf6-1ec0f728e663.png"></p><p>可以看到这部分是迷宫四个方向会导致的结果</p><p><img src="/2025MoeCTF/1758182530268-8f4920f2-072e-4e08-ab6e-bbaef437ddba.png"></p><p>而结果正在下边</p><p>大概解读如下：</p><p><img src="/2025MoeCTF/1758182489474-8bf3d2cc-ead6-424e-8d40-4a6df7f7817a.png"></p><p><img src="/2025MoeCTF/1758182645922-7855d405-e486-41da-8ddc-4e78dd5974e0.png"></p><p>查字符串能看见大概迷宫</p><p><img src="/2025MoeCTF/1758182903151-27909837-1442-4f34-99ec-0680382964ec.png"></p><p>定位过去，这个v9数组应该就是具体的迷宫框架，结合尝试与迷宫四边肯定都是墙的常识</p><p>这边是1是墙，0是路</p><p>但是这个顺序不太对，我们让ai重新生成一份标准的迷宫图</p><p><img src="/2025MoeCTF/1758291264975-df247c2a-ef85-43b6-bba7-2952e622e479.png"></p><p>大致就这样子，试试看能不能ai跑一条路出来，太长了眼睛要瞎掉了</p><p><img src="/2025MoeCTF/1758355407836-7ae38ed9-0fc6-4499-b9c3-8ea290b3b485.png"></p><p><img src="/2025MoeCTF/1758355418023-4b4d58d5-eb14-4329-868e-639837555210.png"></p><p><img src="/2025MoeCTF/1758355430694-9a4d60a5-c074-4883-9707-c7c5f2d915d4.png"></p><p><img src="/2025MoeCTF/1758355471396-5a63e31e-a29c-4a11-a68b-9c4d4836eae4.png"></p><p><img src="/2025MoeCTF/1758355520637-9e7ac79a-95ef-4e20-b0fd-ff9bfca8a1a7.png"></p><p>一开始想当然了，因为是左上角开始的，就想当然认为结尾应该是在右下角</p><p><img src="/2025MoeCTF/1758355529299-b1990f20-c200-4844-9e32-f4a0b318ab8b.png"></p><p>看上去很对，但是输入后显示未到终点</p><p>再次分析</p><p><img src="/2025MoeCTF/1758182530268-8f4920f2-072e-4e08-ab6e-bbaef437ddba.png"></p><p>不应该忘了之前看见的这一个，因此我们可以确认答案在迷宫的第16行第33列的位置，这一个地方才是真正的终点（搞死人，也没个标识）</p><p>好在我们只需要修改位置即可</p><p><img src="/2025MoeCTF/1758355749033-041fb2cd-a479-4802-96af-abf81d979ed1.png"></p><p><img src="/2025MoeCTF/1758355767295-54f8001e-0cd2-47eb-935a-825a08c8f456.png"></p><p>位置有点壮观</p><p>最后ida可以看到答案即为输入，因此答案就是moectf{ssddddwwddssddddssddssssddwwddwwddwwwwddddssssaassssaaaassaassaawwaawwwwaaaassddssaassddssssaaaassddddddwwwwddddssddddwwddwwaawwddddssssssssssssaaasssdddssssaassssaaaassaassaawwaawwwwaaaassddssaassddssssaaaassddddddwwwwddddssddddwwddwwaawwddddssssssssssssaaawawwwaassaawwaassaaaaaaaaaawwwwaassssssddddssssssdddddddddwwdddssddwwwdddsssdddddwwawwddddddddddddddddddddssddddddddwwwwawwwwwwwwdwwwwwwwwwwwaawwdwwwwwwwwwwdwwwwwwaaaasssssssssssssssssssssssssssssssssssssaaawwaaaaaaaaaaaaaaaaaaawwwddddddddwwddddddddddwwwawaawawwwwwwwwwwwwwddwwwwaassaawwaassaaaaaaaaaawwwwaawwddwwaawwdwwwdwwwwddddddddddssddddssssdsdssddssaassaaaawwaaaassssaaaaaawwddddwwwwaawwawaassdsssdd}（这太震撼了）</p><h2 id="ezandroid"><a href="#ezandroid" class="headerlink" title="ezandroid"></a>ezandroid</h2><p><img src="/2025MoeCTF/1757413271345-24960797-8be6-4a87-a261-9a944d6353e3.png"></p><p><img src="/2025MoeCTF/1757413324006-0dfe864b-6c7d-44b1-99f3-e7ae25ff4cee.png"></p><p>APK软件，主要还是用雷电APP智能分析和jadx或许多一些</p><p>直接雷电打开</p><p><img src="/2025MoeCTF/1758290767019-7a81695e-9565-4faa-bd18-40d9809128c9.png"></p><p>敏感信息捕捉，直接给抓到了</p><p><img src="/2025MoeCTF/1758290785321-05a6620e-21e4-4e0b-b845-e86554021bc8.png"></p><p>这一看就是base64的moectf</p><p><img src="/2025MoeCTF/1758290802292-ebf7bba3-8a07-4362-bd50-2ae9fddde334.png"></p><p>直接就完成了，确实是ez</p><h2 id="ezandroid-pro"><a href="#ezandroid-pro" class="headerlink" title="ezandroid.pro"></a>ezandroid.pro</h2><p><img src="/2025MoeCTF/1758432784931-2129deb6-c1a6-4094-b6bf-3690af5a91c3.png"></p><p>问native层，先了解一下大致结构</p><p><img src="/2025MoeCTF/1758432778187-9680bfbc-80d0-4b22-8f57-ed11bcaf63aa.png"></p><p>可以大概得知安卓有<font style="color:rgb(47, 51, 57);">应用层、应用框架层、系统运行库层、硬件抽象层（HAL）和Linux内核层。其中，Native层主要位于系统运行库层和硬件抽象层</font></p><p><img src="/2025MoeCTF/1758432834948-b4cb5ca6-718c-4bf6-ae19-60bf90403f32.png"></p><p><img src="/2025MoeCTF/1758432862192-b0e4de70-7805-4c86-9e0a-24ec4d31e1a7.png"></p><p>其职责主要就是运行本地的代码，来实现核心算法，后边再让java层调用这一层的函数，输出出去</p><h2 id="2048-master-re"><a href="#2048-master-re" class="headerlink" title="2048_master_re"></a>2048_master_re</h2><p><img src="/2025MoeCTF/1758444288049-e4f36efe-dd91-4419-bd54-48f68409b480.png"></p><p>这边和misc是同一个附件</p><p>我们放入ida看看</p><p><img src="/2025MoeCTF/1758444281287-34340a36-fbfa-4e28-973b-e85c0d8bbc79.png"></p><p>搜索字符串就可以发现，这边藏着说我们找到了一些线索，但是不够解锁最深的秘密，而我们就是要找到这个秘密</p><p>双击进入加密函数sub_401C83</p><p><img src="/2025MoeCTF/1758444403206-f32b8277-2560-4b77-bf17-0fb4341720a7.png"></p><p>可以看见这个block&#x3D;的sub_401A81函数即为加密函数，四参数</p><p><img src="/2025MoeCTF/1758444444280-5f2c1912-8ebc-4c89-81c4-111f4a23b7e5.png"></p><p><img src="/2025MoeCTF/1758444517316-c1983ab8-1e6e-454e-85a5-bad44fb3b9bc.png"></p><p>再往里边看，这其实是一个XXTEA的加密</p><p><img src="/2025MoeCTF/1758444594386-1394c51d-c712-4744-9599-0a1922833d10.png"></p><p><img src="/2025MoeCTF/1758444599639-49f2669f-1c5e-4542-bfaa-a9ab03779d83.png"></p><p>这边解密一下</p><p><img src="/2025MoeCTF/1758444615612-e38bcf30-502a-41f2-8b4c-8292b8acd2e0.png"></p><p>成功得到flag：moectf{@_N1c3_cup_0f_XXL_te4_1n_2O48}</p><h1 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h1><p>终于敢写pwn题目了</p><h2 id="0-二进制漏洞审计入门指北"><a href="#0-二进制漏洞审计入门指北" class="headerlink" title="0 二进制漏洞审计入门指北"></a>0 二进制漏洞审计入门指北</h2><p><img src="/2025MoeCTF/1756177200498-6d27a8ce-0d70-4bb3-8edf-f49e66ae3a32.png"></p><p>这边直接把附件放进虚拟机然后写一串代码就好了，代码都给了，不用大改</p><p><img src="/2025MoeCTF/1756976036608-40bd3d5a-6fa8-4bea-8e98-4fca1d544263.png"></p><p>先连接</p><p><img src="/2025MoeCTF/1756976096947-3c045ca3-4bfd-4f0f-838d-c60edb4126da.png"></p><p>根据虚拟机网段配置wsrx</p><p><img src="/2025MoeCTF/1756976159736-4a8dbf8d-efd2-47b6-a4df-f036c7fe2858.png"></p><p>直接就原来给的代码塞进去就是了</p><p>每一步写的很详细了</p><p><img src="/2025MoeCTF/1756976270665-cece6651-a2c2-403e-9ae2-0e93874c91f5.png"></p><p>这边send和sendline的区别主要在这</p><p><img src="/2025MoeCTF/1756976183758-a91108b7-bdaf-4cc1-b188-6d7da3fdf848.png"></p><p>这边直接与运行python即可得到flag</p><h2 id="1-ez-u64"><a href="#1-ez-u64" class="headerlink" title="1 ez_u64"></a>1 ez_u64</h2><p><img src="/2025MoeCTF/1758172859319-f4d3365a-d526-49d1-85cf-d6ca81bae486.png"></p><p><img src="/2025MoeCTF/1758172893848-1bfb3bac-d90b-42df-b6a5-987d0ae93551.png"></p><p>首先确定是64位系统，接着看一下如何解题</p><p><img src="/2025MoeCTF/1758172983217-ce3af72f-7e67-4d69-88b7-c69d75048990.png"></p><p>查看main函数，只需要满足v1 &#x3D; num即可执行system（&#x2F;bin&#x2F;sh）提权了，接下来就简单了，因此本题的问题只在于如何使v1&#x3D;num</p><p><img src="/2025MoeCTF/1758174320099-d0a8aeaa-c63d-4115-bf93-f4d0ca1fbd7a.png"></p><p>这边我们是先连上环境</p><p>然后定位到Here这句话，相当于打断点</p><p>打过来之后马上提取后边八个字节的内容，输入到data里，因为后边是hint，是和我们输入对比的num，只要捕获并作为v1输入即可</p><p>后边构造payload再sendline</p><p>即提权成功</p><p>后边经典ls和cat即可</p><p><img src="/2025MoeCTF/1758174252009-7d27d65b-b5a4-4933-8332-f5918264d4b0.png"></p><p>moectf{US3Ful_tHlNg5-IN-pwNTOol52b463460}</p><h2 id="1-find-it"><a href="#1-find-it" class="headerlink" title="1 find it"></a>1 find it</h2><p><img src="/2025MoeCTF/1758174441956-bc5d54b7-9d5b-4a4e-9211-24a9e3759b12.png"></p><p><img src="/2025MoeCTF/1758174488968-12132179-65c5-47a7-9b28-9ecaf6f5f77d.png"></p><p>依旧是64位的内容</p><p><img src="/2025MoeCTF/1758180740254-94692cbb-4de2-482e-a0e8-0fa3d308b0d4.png"></p><p>可以理解一下fd先，文件描述符，对于Linux中一切都是文件，因此fd就相当于是每一个被打开文件的一个地址符</p><p><img src="/2025MoeCTF/1758433444872-a62cd2bd-80ce-4c20-9025-309167e53f98.png"></p><p>我们默认fd0为stdin标准输入，fd1为stdout标准输出，fd2为stderr标准错误，而后边打开的每一个文件会自动领到3以后的数字作为自己的文件标识符</p><p>我们这边先看看内容</p><p><img src="/2025MoeCTF/1758174521909-5f72853b-ff6a-469e-9384-d38d8cd92d83.png"></p><p>这边我们来看主函数</p><p>上来先说自己把标准输出隐藏起来了，让我们去找他</p><p>这边可以看到，v3&#x3D;dup(1)</p><p>也就是说fd&#x3D;1被藏到了fd&#x3D;3的地方</p><p>所以当问我们在哪里的时候我们应该回复的是3，如果回复1就会被close</p><p>接下来就问我们想看什么，会打开我们输入的那个file</p><p>这边我们输入flag就是了</p><p>一般由于fd012都被占用，这边新打开的文件应该是fd&#x3D;3才对</p><p>但是刚刚把fd&#x3D;1变成了fd&#x3D;3，所以fd&#x3D;1的地方是空着的，也就是说现在打开的这个flag在fd&#x3D;1的地方</p><p>所以它问我们fd，我们输入1，如下</p><p><img src="/2025MoeCTF/1758434172935-35efd60a-1d71-4863-b7d9-e8f1e3ceb757.png"></p><p>成功得到flag</p><h2 id="2-EZtext"><a href="#2-EZtext" class="headerlink" title="2 EZtext"></a>2 EZtext</h2><p><img src="/2025MoeCTF/1758434359618-d5e014c2-de50-4e99-8f17-d55c437d20b5.png"></p><p><img src="/2025MoeCTF/1758435211700-4a6bb44c-1fe5-43dd-adfb-7402eb5d94de.png"></p><p>先确定是64位的</p><p><img src="/2025MoeCTF/1758434744711-256e8e60-2d18-427a-9aa5-168c64cf83dd.png"></p><p>这边可以看到这一题是在考栈溢出</p><p><img src="/2025MoeCTF/1758434793134-487422bc-b5ed-41e0-9d3b-8b195c23221f.png"></p><p>这边的v4是我们输入的，输入4+8就满了</p><p><img src="/2025MoeCTF/1758434827607-3c0933a0-32f8-4a8a-ac76-791a2b545ef0.png"></p><p>可以看到只要输入8个及以上就会填满栈，然后这边还有一个另一个read函数，可以输入8+8个，但是我们只能输入a1个内容，也就是说我们应该让a1大一点，超过16才是</p><p><img src="/2025MoeCTF/1758434854432-74a7299d-cb94-4c28-ab21-036c22adb57b.png"></p><p>所以我们一开始可以先输入个50，然后我们写入16个a即可完成栈溢出</p><p><img src="/2025MoeCTF/1755765916320-c5c63cb4-dbf9-43f7-a056-cc4518e3f6ca.png"></p><p><img src="/2025MoeCTF/1758435563136-ed9f4a20-307c-485f-9c45-37267d8db502.png"></p><p>我们还可以注意到左边有个treasure函数</p><p><img src="/2025MoeCTF/1758435637556-d956f43d-5117-48ea-a07d-fe17cfc076b3.png"></p><p>我们&#x2F;bin&#x2F;sh的程序在这个地方</p><p>所以我们应该改地址改0x4011CD的位置</p><p>注意这边是64位程序啊，要用p64来封装</p><p><img src="/2025MoeCTF/1758437007282-549c6c02-7062-49c3-ba42-7900d4f938cc.png"></p><p>就直接一步步下来先发50再发溢出再发&#x2F;bin&#x2F;sh地址即可</p><p><img src="/2025MoeCTF/1758436992876-ba0fddac-afa8-4724-9592-682117bec8ce.png"></p><p>得到flag</p><p>moectf{reTZt3Xt_iS-tHE-stArT_0f-rop18d3c395}</p><h2 id="2-ezshellcode"><a href="#2-ezshellcode" class="headerlink" title="2 ezshellcode"></a>2 ezshellcode</h2><p><img src="/2025MoeCTF/1758437174693-7e61a053-d3df-43d2-82a1-65835d4cfaf6.png"></p><p><img src="/2025MoeCTF/1758437186792-4cd9dbc7-f945-4f66-9b7d-4057dc9bd210.png"></p><p>这是一道没有system的题目</p><p><img src="/2025MoeCTF/1758437587808-76c89338-4b73-4edc-9271-dbd587b4f76c.png"></p><blockquote><p><del>这边一开始需要我们输入4，然后往下跳</del></p><p><img src="/2025MoeCTF/1758437671163-9bb6350f-8258-4be3-af09-c94d73154707.png"></p><p><del>这边栈溢出成立，可以输入4096个但是输入0x10+8就溢出了</del></p></blockquote><p>这边的重点是没有system函数，即我们必须直接通过系统调用得到&#x2F;bin&#x2F;sh提权</p><p>其实system(“&#x2F;bin&#x2F;sh”)底层是调用execve(“&#x2F;bin&#x2F;sh”,0,0)</p><p>我们需要通过pwntools的asm函数来汇编shellcode</p><p>pwntools有个强大的工具shellcraft，可以直接帮助我们生成shellcode</p><p>所以这一题就是需要我们编写汇编代码，直接调用 <code>execve</code>系统调用</p><p><img src="/2025MoeCTF/1758439004734-9fd2831c-b7cd-447d-9cb6-b789d2267adf.png"></p><p>直接写大概长这样子（当然不长这样子了），太困难了，我们还是尝试使用shellcraft</p><p><img src="/2025MoeCTF/1758439132985-195ab451-b141-4f14-bdbf-18d9d1bee31c.png"></p><p>利用shellcraft可以方便很多shellcode &#x3D; asm(shellcraft.sh())</p><p><img src="/2025MoeCTF/1758440234113-e1f4915d-8c7f-4e28-bf22-6fed650d5d22.png"></p><p>注意这题已经创建好了一个专门的shellcode区域</p><p><img src="/2025MoeCTF/1758440303380-667dab6c-296f-4803-bb25-796219bf6f36.png"></p><p>用户的输入会填充到这里的，所以这题根本就不需要所谓的缓冲区溢出</p><p><img src="/2025MoeCTF/1758440578191-b54fc2b6-e39c-4a34-80b9-3181cdddb5b5.png"></p><p>直接这样子就搞定了，刚刚卡住一直想利用栈溢出，但这题其实没有，在payload前这样子写只会妨碍shellcode执行</p><p>得解</p><p><img src="/2025MoeCTF/1758440675053-1ff4b71e-0e61-4f95-99e7-7ae7965d76de.png"></p><p>moectf{pOWErfUl-sHeL1cod3-Can_d0-ANythlNgbe879}</p><h2 id="3-认识libc"><a href="#3-认识libc" class="headerlink" title="3 认识libc"></a>3 认识libc</h2><p><img src="/2025MoeCTF/1758440739822-d4dca627-c558-4e31-ab69-d55123c820bf.png"></p><p>先看位数</p><p><img src="/2025MoeCTF/1758714969227-a833262b-75a4-486b-b497-9483fc7396fe.png"></p><p>我发现moe很喜欢出64位的恶心人（）</p><p>会多一个libc文件，system我们在源文件找不到，只能在libc文件里找到</p><p>一般是我们只知道偏移地址，但是不知道基地址，通过puts可以得到它现在的地址，减去偏移地址便可得到基地址</p><p><img src="/2025MoeCTF/1758499908976-dd8997b0-b1d1-4210-bb0e-3586a0ed0cf6.png"></p><p>先看原来的pwn文件</p><p><img src="/2025MoeCTF/1758499942524-7d2b864d-185a-40cd-b005-6eb5ea74aaf5.png"></p><p>上来先到这边io.recvuntil(“&gt; “)一下</p><p>可以看到这边存在栈溢出漏洞，我们可以填入0x100个内容，但是buf只能存储0x40+8个内容</p><p><img src="/2025MoeCTF/1758499976608-c410990e-66b2-4cd6-a161-8928f38875ab.png"></p><p>padding&#x3D;0x40+8</p><p>接下来我们直接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs plain">main = elf.symbols[&quot;main&quot;]<br>puts_plt = elf.plt[&quot;puts&quot;]<br>puts_got = elf.got[&quot;puts&quot;]<br></code></pre></td></tr></table></figure><p>当puts被调用时，puts_plt会把puts函数的地址储存在puts_got中，所以直接把puts_got作为puts_plt的参数使用，puts函数就会把自己的函数地址打印出来</p><p>main作为返回地址、得到puts的实际地址之后会重新开始操作</p><p>ROPgadget –binary “ret2libc” –only “pop|ret”</p><p>然后我们再确定一下pop rdi和ret地址，就可以开始构造第一个payload1了</p><p><img src="/2025MoeCTF/1758715535480-e6131061-8064-4bf8-8a83-e8792c18aba7.png"></p><p>我去。。。问题在这边，这题做不出来的主要原因就是传不了参，但我现在只会传参，再学会儿吧</p><p>pop_rbp&#x3D;0x40116d</p><p>ret&#x3D;0x40101a</p><p><img src="/2025MoeCTF/1758715659755-f83f7a5a-56f0-412a-93dc-a8a566f4a7b1.png"></p><p>好之后我们直接提取\x7f的前六位</p><p>puts &#x3D; u64(p.recvuntil(“\x7f”)[-6:].ljust(8, b”\x00”))</p><p>基地址也能算出来了</p><p>然后system地址直接由基地址算出来</p><p>libc_base &#x3D; puts - libc.dump(“puts”)</p><p>system &#x3D; libc_base + libc.dump(“system”)</p><p>而&#x2F;bin&#x2F;sh其实题目自带了</p><p><img src="/2025MoeCTF/1758500965639-a63c52db-e4e5-484a-9067-beadf04b9983.png"></p><p>所以bin_sh&#x3D;0x1D8678</p><p><img src="/2025MoeCTF/1758715894168-2d14d178-21fe-452d-adb3-e08748d2da0f.png"></p><p>老实了，等学到rbp咋玩再说吧</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2025盘古石晋级赛</title>
    <link href="/2025/10/28/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/"/>
    <url>/2025/10/28/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<h2 id="手机取证-Mobile-Forensics"><a href="#手机取证-Mobile-Forensics" class="headerlink" title="手机取证 Mobile Forensics"></a><font style="color:rgb(79, 79, 79);">手机取证 Mobile Forensics</font></h2><h3 id="1、分析安卓手机检材，手机的IMSI是？-答案格式：660336842291717-1分"><a href="#1、分析安卓手机检材，手机的IMSI是？-答案格式：660336842291717-1分" class="headerlink" title="1、分析安卓手机检材，手机的IMSI是？[答案格式：660336842291717] (1分)"></a><font style="color:rgb(79, 79, 79);">1、分析安卓手机检材，手机的IMSI是？[答案格式：660336842291717] (1分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1751862127979-89488694-0394-4226-a228-fc315361e25a.png"></p><p>如图，直接在火眼分析安卓手机后即可在基本设备信息处找到手机的IMSI码，为460036641292715</p><h3 id="2、养鱼诈骗投资1000，五天后收益是？-答案格式：123-1分"><a href="#2、养鱼诈骗投资1000，五天后收益是？-答案格式：123-1分" class="headerlink" title="2、养鱼诈骗投资1000，五天后收益是？[答案格式：123] (1分)"></a><font style="color:rgb(79, 79, 79);">2、养鱼诈骗投资1000，五天后收益是？[答案格式：123] (1分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1751862862695-aa69a834-9b91-4b47-9cdd-bfb05362eff3.png"></p><p>根据思路，问诈骗投资的收益，很有可能跟聊天记录有关，如图打开qq可以看见就有这样一张图，五天后收益为175</p><h3 id="3、分析苹果手机检材，手机的IDFA是？-答案格式：E377D1D7-BA02-4A79-BB9A-5C2DE5BD1F17-2分"><a href="#3、分析苹果手机检材，手机的IDFA是？-答案格式：E377D1D7-BA02-4A79-BB9A-5C2DE5BD1F17-2分" class="headerlink" title="3、分析苹果手机检材，手机的IDFA是？[答案格式：E377D1D7-BA02-4A79-BB9A-5C2DE5BD1F17] (2分)"></a><font style="color:rgb(79, 79, 79);">3、分析苹果手机检材，手机的IDFA是？[答案格式：E377D1D7-BA02-4A79-BB9A-5C2DE5BD1F17] (2分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1751863444736-8b4a592a-2099-41aa-b114-b9eaa50ee3a9.png"></p><p>打开苹果手机，同第一题，送分题，易得E477D4C7-BD02-4979-BC9D-5C5DE7BD1F17</p><h3 id="4、Telegram应用的卸载时间是？-答案格式：2023-01-22-17-37-50-2分"><a href="#4、Telegram应用的卸载时间是？-答案格式：2023-01-22-17-37-50-2分" class="headerlink" title="4、Telegram应用的卸载时间是？[答案格式：2023-01-22-17:37:50] (2分)"></a><font style="color:rgb(79, 79, 79);">4、Telegram应用的卸载时间是？[答案格式：2023-01-22-17:37:50] (2分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1751863504182-7f1515b4-0bec-4d89-a01d-0fa841e6c980.png"></p><p>直接可以看见app的安装卸载记录，搜索telegram，易得时间为2025-04-17-10:51:39</p><h3 id="5、机主hotmail邮箱地址是？-答案格式：123345-hotmail-com-2分"><a href="#5、机主hotmail邮箱地址是？-答案格式：123345-hotmail-com-2分" class="headerlink" title="5、机主hotmail邮箱地址是？[答案格式：123345@hotmail.com] (2分)"></a><font style="color:rgb(79, 79, 79);">5、机主hotmail邮箱地址是？[答案格式：<a href="mailto:&#x31;&#x32;&#x33;&#x33;&#x34;&#53;&#64;&#x68;&#111;&#116;&#109;&#97;&#105;&#x6c;&#46;&#99;&#111;&#109;">123345@hotmail.com</a>] (2分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1751863970717-26a21f26-46c7-4fca-a7c6-f6d453d32f56.png"></p><p>这边有点藏，下意识会去找有没有关于hotmail的app，后来没找到，最后按照常规先看看聊天记录，找到了，以hotmail.com结尾，没问题</p><h3 id="6、苹果电脑开机密码是？-答案格式：12345-4分"><a href="#6、苹果电脑开机密码是？-答案格式：12345-4分" class="headerlink" title="6、苹果电脑开机密码是？[答案格式：12345] (4分)"></a><font style="color:rgb(79, 79, 79);">6、苹果电脑开机密码是？[答案格式：12345] (4分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1751864256375-e6b40438-28a3-44e7-964e-6ca90f6945a5.png"></p><p>这个确实是没啥思路，在备忘录和各种会备注东西的里边先兜一圈，发现没有之后找到截屏，一张张扫，成功发现了mac密码</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1751864330093-afb89dbf-345b-4bd8-ad06-311b36072f29.png"></p><p>密码为12345678</p><h3 id="7、Telegram加密通讯中，加密聊天信息用到的第二个解密载体是？-答案格式：123-zip-4分"><a href="#7、Telegram加密通讯中，加密聊天信息用到的第二个解密载体是？-答案格式：123-zip-4分" class="headerlink" title="7、Telegram加密通讯中，加密聊天信息用到的第二个解密载体是？[答案格式：123.zip] (4分)"></a><font style="color:rgb(79, 79, 79);">7、Telegram加密通讯中，加密聊天信息用到的第二个解密载体是？[答案格式：123.zip] (4分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1751864448352-9e8601c0-5a19-4400-bf6f-91966f14b3f4.png"></p><p>它说telegram，那我们先去telegram看一眼，发现加密聊天的载体为蜜语规则</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1751864513404-64c8a606-4e8e-4868-8b28-d82b6adcb56c.png"></p><p>发现备忘录里一直在强调这个东西，但似乎不太对，找不到所谓第二个一说，先不急，上一题找到了苹果电脑的开机密码，那我们去苹果电脑里看一下，毕竟是同一个人的设备，钟无声</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1751885721610-e3795a82-447a-4df6-99ce-cb8bc67178eb.png"></p><p>果然输入上一题答案后，可以直接在备忘录里找到蜜语规则，第二条为2.mp4</p><h3 id="8、贾韦码的内部代号是？-答案格式：77-5分"><a href="#8、贾韦码的内部代号是？-答案格式：77-5分" class="headerlink" title="8、贾韦码的内部代号是？[答案格式：77] (5分)"></a><font style="color:rgb(79, 79, 79);">8、贾韦码的内部代号是？[答案格式：77] (5分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1751886314362-7a1df410-cbfd-4d58-8874-818a34b8b066.png"></p><p>根据思路，内部代号触及的地方第一个应该是聊天记录，没找到，然后应该就是一些word文档，再不济就只能是截图里边看有没有信息了</p><p>注意到word里有这样一段对话提到了内部代号，结合剧情，确实是贾韦码死了，所以他应该内部代号为48</p><p>（写个wp我还以为这个内容在下边的加密蜜语里，开始根据偏移计算：将总和与 26取模后加1，生成 1-26区间的固定位移量解密了，不过好像其实不用）</p><h3 id="9、特快专递的收货地址是？-标准格式：老牛市快速路11号ADE公司-5分"><a href="#9、特快专递的收货地址是？-标准格式：老牛市快速路11号ADE公司-5分" class="headerlink" title="9、特快专递的收货地址是？[标准格式：老牛市快速路11号ADE公司] (5分)"></a><font style="color:rgb(79, 79, 79);">9、特快专递的收货地址是？[标准格式：老牛市快速路11号ADE公司] (5分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1751888469958-5de9e652-b7ea-41cf-80dc-4c88f142ed14.png"></p><p>跟上题在同一个地方，往下拖一眼出</p><p>（这次盘古石晋级赛的手机取证可以说是毫无难度了，当初是卡在苹果电脑开机密码不得存进，但其实下边两题也用不着mac密码吧，再说翻翻相册也不是什么累事，批评mqy，这14分毫无难度）</p><h2 id="APK取证-APK-Forensics"><a href="#APK取证-APK-Forensics" class="headerlink" title="APK取证 APK Forensics"></a><font style="color:rgb(79, 79, 79);">APK取证 APK Forensics</font></h2><h3 id="1、分析安卓检材，远控工具包名是？-标准格式：com-app-cpp-2分"><a href="#1、分析安卓检材，远控工具包名是？-标准格式：com-app-cpp-2分" class="headerlink" title="1、分析安卓检材，远控工具包名是？[标准格式：com.app.cpp] (2分)"></a><font style="color:rgb(79, 79, 79);">1、分析安卓检材，远控工具包名是？[标准格式：com.app.cpp] (2分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752070045134-66256aec-c86a-48cf-b0c1-8123e6f074cd.png"></p><p>根据聊天记录定位这个银联会议有很大嫌疑可能是远控包</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752070035626-21bb6c80-ccfe-424f-8ac7-5463d10219f9.png"></p><p>打开后显示为rustdesk，明显为远控软件，确定</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752070119448-b7361137-be2d-4b7b-8733-ccc5c018855a.png"></p><p>可以看见包名：<font style="color:rgb(77, 77, 77);">com.carriez.flutter_hbb</font></p><p><font style="color:rgb(77, 77, 77);"></font></p><p><font style="color:rgb(77, 77, 77);"></font></p><h3 id="2、远控工具中继服务器IP是？-标准格式：192-168-11-11-2分"><a href="#2、远控工具中继服务器IP是？-标准格式：192-168-11-11-2分" class="headerlink" title="2、远控工具中继服务器IP是？[标准格式：192.168.11.11] (2分)"></a><font style="color:rgb(79, 79, 79);">2、远控工具中继服务器IP是？[标准格式：192.168.11.11] (2分)</font></h3><p>这里有两种做法</p><p>做法一：直接在文件中找到对应存储中继服务器ip的配置文件</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752071526309-f8141784-eb48-4424-9623-bf0f101e1731.png"></p><p>在对应包名文件中寻找可以找到这个rustdesk2.toml文件，可以看见里边一栏</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752071568087-d1d82ce7-0ef9-4255-b658-2cafed749602.png"></p><p>因此中继服务器ip为59.110.10.229</p><p>做法二：<img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752071814874-89f755be-856d-4217-8b31-dd4a2da48824.png"></p><p>下载MT管理器，将<font style="color:rgb(77, 77, 77);">C:\hlnet\1-1751861870\Image.tar\data\user\0\com.carriez.flutter_hbb文件包直接复制粘贴进去C:\Users\用户名\Documents\leidian9\Pictures</font></p><p><font style="color:rgb(77, 77, 77);">这个就是雷电的共享文件的路径C:\Users\用户名\Documents\leidian9\Pictures</font></p><p><font style="color:rgb(77, 77, 77);">然后去模拟器的中复制 接下来去mt里面的左侧，进入&#x2F;storage&#x2F;emulated&#x2F;0&#x2F;Pictures&#x2F;，右侧就是data&#x2F;data 长按复制（注意这边右边一定要是data才行）</font></p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752072599066-be6a2dcf-7bd8-4763-99d6-18d329b4feac.png"></p><p>复制过去，一定要过去之后再安装</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752072216703-85e62ea2-4e12-4693-8141-9d66051430fe.png"></p><p>然后下载银联会议</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752072655786-ce784e15-1ea0-41d1-b417-6f33f99f89ee.png"></p><p>就能在这个中继服务器能看见ip为59.110.10.229</p><h3 id="3、远控工具ID服务器端口是？-标准格式：8088-2分"><a href="#3、远控工具ID服务器端口是？-标准格式：8088-2分" class="headerlink" title="3、远控工具ID服务器端口是？[标准格式：8088] (2分)"></a><font style="color:rgb(79, 79, 79);">3、远控工具ID服务器端口是？[标准格式：8088] (2分)</font></h3><p>不管是哪一种做法都能看见的其实，但肯定是第二种最直接，一眼就看见了</p><h3 id=""><a href="#" class="headerlink" title=""></a><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752072772559-ac44f837-7583-499e-8276-c157a1f58574.png"></h3><p>端口为21116</p><h3 id="4、远控工具中继服务器Key是？-标准格式：HoTwGxUuV9OxSSEWRFsr1DVxQBkbbFRe0ImYMTlzyec-2分"><a href="#4、远控工具中继服务器Key是？-标准格式：HoTwGxUuV9OxSSEWRFsr1DVxQBkbbFRe0ImYMTlzyec-2分" class="headerlink" title="4、远控工具中继服务器Key是？[标准格式：HoTwGxUuV9OxSSEWRFsr1DVxQBkbbFRe0ImYMTlzyec&#x3D;] (2分)"></a><font style="color:rgb(79, 79, 79);">4、远控工具中继服务器Key是？[标准格式：HoTwGxUuV9OxSSEWRFsr1DVxQBkbbFRe0ImYMTlzyec&#x3D;] (2分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752072799711-4482ce85-deaa-45dd-bcd4-c5ae71d162b4.png"></p><p>WIUqzRq1Ocx4QNnsF26dZQijKdyd2L9OfaT55hDlQCI&#x3D;</p><h3 id="5、远控工具中收藏的远程ID是？-标准格式：123456-2分"><a href="#5、远控工具中收藏的远程ID是？-标准格式：123456-2分" class="headerlink" title="5、远控工具中收藏的远程ID是？[标准格式：123456] (2分)"></a><font style="color:rgb(79, 79, 79);">5、远控工具中收藏的远程ID是？[标准格式：123456] (2分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752072875400-0f3ea29a-10e3-4a6f-94b4-beaedf08787d.png"></p><p>app里贼显眼</p><p>在文件的话是这一个rustdesk local.toml</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752072945833-1998c296-84bd-40e4-bc01-4ccfb068f1b6.png"></p><h3 id="6、远程控制该手机的手机型号是？-标准格式：huawei-Hot-2分"><a href="#6、远程控制该手机的手机型号是？-标准格式：huawei-Hot-2分" class="headerlink" title="6、远程控制该手机的手机型号是？[标准格式：huawei-Hot] (2分)"></a><font style="color:rgb(79, 79, 79);">6、远程控制该手机的手机型号是？[标准格式：huawei-Hot] (2分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752072991560-17d15b55-21e1-459d-9b32-8287a440b7ec.png"></p><p>在1807892422.toml中也能看见</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752073031116-f57831f4-0a14-42d1-a7d3-6b705b9acf8c.png"></p><p>所以手机型号为google-Pixel</p><h3 id="7、监听工具包名是？-标准格式：com-app-cpp-2分"><a href="#7、监听工具包名是？-标准格式：com-app-cpp-2分" class="headerlink" title="7、监听工具包名是？[标准格式：com.app.cpp] (2分)"></a><font style="color:rgb(79, 79, 79);">7、监听工具包名是？[标准格式：com.app.cpp] (2分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752073214903-f63aba4e-6daa-4406-ae89-939ba045829e.png"></p><p>在其他应用处看见liekai这个软件可以看见很多音视频文件，猜测这个可能就是监听软件</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752073202508-892e253f-6276-4c18-82ba-ee5d0e1dddd9.png"></p><p>com.example.liekai</p><h3 id="8、监听工具代码主入口是？-标准格式：com-app-cpp-MainActidddy-2分"><a href="#8、监听工具代码主入口是？-标准格式：com-app-cpp-MainActidddy-2分" class="headerlink" title="8、监听工具代码主入口是？[标准格式：com.app.cpp.MainActidddy] (2分)"></a><font style="color:rgb(79, 79, 79);">8、监听工具代码主入口是？[标准格式：com.app.cpp.MainActidddy] (2分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752073574293-c001cb41-061f-4ce6-ba17-9dc4299ada05.png"></p><p>导入雷电即可：com.example.liekai.MainActivity</p><h3 id="9、监听工具的签名算法是？-标准格式：AES123RSA-1分"><a href="#9、监听工具的签名算法是？-标准格式：AES123RSA-1分" class="headerlink" title="9、监听工具的签名算法是？[标准格式：AES123RSA ] (1分)"></a><font style="color:rgb(79, 79, 79);">9、监听工具的签名算法是？[标准格式：AES123RSA ] (1分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752073612051-7fa47606-f13d-4db0-994b-dde1bcf7f1e5.png"></p><p>同理：SHA256-RSA</p><h3 id="10、监听工具运行多少秒后会跳转成黑色幕布？-标准格式：3-000-3分"><a href="#10、监听工具运行多少秒后会跳转成黑色幕布？-标准格式：3-000-3分" class="headerlink" title="10、监听工具运行多少秒后会跳转成黑色幕布？[标准格式：3.000] (3分)"></a><font style="color:rgb(79, 79, 79);">10、监听工具运行多少秒后会跳转成黑色幕布？[标准格式：3.000] (3分)</font></h3><p>1.000打开后计时一下差不多（我说实话这个很扯啊，但是没有一个wp写具体咋搞出来的，下边配一张看起来我觉得最有理由的，但是其实也是纯猜）</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752217976981-d0f8314b-a48b-48f6-bc62-0a36eba3b20c.png"></p><h3 id="11、监听工具运行后，黑色幕布上字符串是？-标准格式：aes取证平台-4分"><a href="#11、监听工具运行后，黑色幕布上字符串是？-标准格式：aes取证平台-4分" class="headerlink" title="11、监听工具运行后，黑色幕布上字符串是？[标准格式：aes取证平台] (4分)"></a><font style="color:rgb(79, 79, 79);">11、监听工具运行后，黑色幕布上字符串是？[标准格式：aes取证平台] (4分)</font></h3><blockquote><p>需要逆向一下 flutter，先用 <a href="https://github.com/worawit/blutter">blutter</a> 将符号表导出来，然后用 IDA 运行一下跑出来的 addNames.py（这里建议使用 IDA9），接下来搜索 liekai，能看到里面的函数，不过在这里面找不到黑色幕布上面的字。去看一下跑出来的 asm 那个文件夹，liekai 里面有一个 screens 文件夹，里面有一个 dart 写的 black_overlay.dart，这个就是和黑色幕布相关的东西。（这是aura写的）</p></blockquote><p>思考过程：</p><p>首先根据wp，我们需要逆向flutter，那么什么是flutter？</p><p>:::info<br><strong><font style="color:rgb(32, 33, 34);">Flutter</font></strong><font style="color:rgb(32, 33, 34);">是一个由</font><font style="color:rgb(51, 102, 204);">谷歌</font><font style="color:rgb(32, 33, 34);">开发的</font><font style="color:rgb(51, 102, 204);">开源</font><font style="color:rgb(32, 33, 34);">跨平台应用软件开发工具包，用于为</font><font style="color:rgb(51, 102, 204);">Android</font><font style="color:rgb(32, 33, 34);">、</font><font style="color:rgb(51, 102, 204);">iOS</font><font style="color:rgb(32, 33, 34);">、</font><font style="color:rgb(51, 102, 204);">Windows</font><font style="color:rgb(32, 33, 34);">、</font><font style="color:rgb(51, 102, 204);">macOS</font><font style="color:rgb(32, 33, 34);">、</font><font style="color:rgb(51, 102, 204);">Linux</font><font style="color:rgb(32, 33, 34);"> </font><font style="color:rgb(32, 33, 34);">Desktop、</font><font style="color:rgb(51, 102, 204);">Google Fuchsia</font><font style="color:rgb(32, 33, 34);">开发应用</font><a href="https://zh.wikipedia.org/zh-cn/Flutter#cite_note-5"><sup><font style="color:rgb(51, 102, 204);">[5]</font></sup></a><font style="color:rgb(32, 33, 34);">。</font></p><p><font style="color:rgb(32, 33, 34);">Flutter第一个版本支持</font><font style="color:rgb(51, 102, 204);">Android</font><font style="color:rgb(32, 33, 34);">操作系统，开发代号称作“Sky”。</font></p><p><font style="color:rgb(32, 33, 34);">Flutter的主要组成部分包括：</font></p><ul><li><font style="color:rgb(51, 102, 204);">Dart</font><font style="color:rgb(32, 33, 34);">平台：Flutter是使用</font><font style="color:rgb(51, 102, 204);">Dart</font><font style="color:rgb(32, 33, 34);">语言编写，并利用该语言的许多高级功能。</font></li><li><font style="color:rgb(32, 33, 34);">Flutter引擎：主要使用</font><font style="color:rgb(51, 102, 204);">C++</font><font style="color:rgb(32, 33, 34);">开发，通过Google的</font><font style="color:rgb(51, 102, 204);">Skia图形库</font><font style="color:rgb(32, 33, 34);">提供底层渲染支持</font></li><li><font style="color:rgb(32, 33, 34);">基础库：基础库由</font><font style="color:rgb(51, 102, 204);">Dart</font><font style="color:rgb(32, 33, 34);">编写，提供了用Flutter构建应用所需的基本的类和函数</font></li><li><font style="color:rgb(32, 33, 34);">定制化</font><font style="color:rgb(51, 102, 204);">设计语言</font><font style="color:rgb(32, 33, 34);">的组件</font></li><li><font style="color:rgb(32, 33, 34);">Flutter DevTools</font></li></ul><p><font style="color:rgb(32, 33, 34);"></font></p><p><font style="color:rgb(32, 33, 34);">Flutter支持使用 </font><a href="https://zh.wikipedia.org/wiki/Visual_Studio_Code"><font style="color:rgb(51, 102, 204);">Visual Studio Code</font></a><font style="color:rgb(32, 33, 34);"> 或 </font><a href="https://zh.wikipedia.org/wiki/Android_Studio"><font style="color:rgb(51, 102, 204);">Android Studio</font></a><font style="color:rgb(32, 33, 34);"> ，需要安装 Flutter 插件和 Dart 插件。</font></p><p>:::</p><p>简而言之，这玩意是个<font style="color:rgb(32, 33, 34);">软件开发工具包，用的还是dart语言编写，这边放一张这个语言写Hello world的代码，的确是蛮抽象的</font></p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752217795998-224955ba-0b0e-4d41-bf26-a5630d34b6fb.png"></p><p>不过从这个flutter的图标可以看见和这边的liekai监听软件一模一样，也可以看出这个软件应该就是利用Flutter这个软件开发包写出来的，那要知道我们这边黑幕中间是什么，利用逆向的思路，看看源码即可知道编写的时候编的什么了（其实我一开始想的是这个黑幕会不会是一个照片然后怎么搞到，搞到之后放大就能看见，看来不是这样子的）</p><p>那很显然下一步就是提取这个flutter写出来的apk文件的源码了，因此利用的是我们blutter</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752218117239-5ac2968e-0bec-4425-a58b-065befc9dc0b.png"></p><p>先配置我们blutter的环境，这篇csdn的代码我放在这边（<a href="https://blog.csdn.net/qihan1124/article/details/140836478?spm=1001.2014.3001.5506">耶</a>）</p><p>在各个官网安装即可，先下好这个git，cmake和ninja</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752218189375-859c00d4-07bc-4726-8e45-71630185df41.png"></p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752218203169-e85f4970-bca5-40d4-bf90-0278461551b3.png"></p><p>这边下好了可以用代码看一眼是不是真的好了，ninja的配置有点麻烦，再放个<a href="https://blog.csdn.net/sanqima/article/details/132635898?spm=1001.2014.3001.5506">链接</a>在这边</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752218241818-6e0ee4f1-dfff-4af0-b6ed-a9b1413d6090.png"></p><p>是这一篇，然后配置ninja环境</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752218619764-3721c622-aefb-4255-b64e-fccc0112df85.png"></p><p>下完三大神器之后终于可以开始配置blutter了</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752218719657-53a53784-281d-4657-875a-4436dbcef49b.png"></p><p>然后第一步就出问题了，在拉取代码的地方出问题了，放上<a href="https://blog.csdn.net/qq_43546721/article/details/139506583">解决链接</a></p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752218763504-327b34ad-7c6b-46c9-8600-7b162e638417.png"></p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752218891212-97f02566-7d73-44f1-9e3b-73267f6047a8.png"></p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752219384976-c82a73e7-08b1-4a98-a5a7-08aaf76f8702.png"></p><p>这边<font style="color:rgb(77, 77, 77);">设置 Git 使用本地代理即可解决问题，好，拉取代码成功</font></p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752219469237-7561fd5d-463d-4ded-a445-0be0c00a361b.png"></p><p>下一步初始化脚本成功</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753090456206-057e1b96-3fac-4c5a-8dd6-fe5d35e9e205.png"></p><p>后边还想继续发现报错了</p><p>发现该先下个flutter（下边这个是新主线）</p><blockquote><p>我发现好像不一定要下这个flutter，但是下都下了，下这玩意比下blutter简单多了（）</p></blockquote><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753090780633-1fdf7679-9562-4cbc-8257-6f7594dd22f0.png"></p><p><a href="https://blog.csdn.net/qq_40976321/article/details/121806555">链接</a></p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753090869954-e0e57b69-2d48-4d9a-bd7c-1c63a24a8e18.png"></p><p>好先创建系统环境变量</p><p>去官网下一个解压即可</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753091454463-5ff705dc-0b3d-48e8-b597-f2f384160723.png"> 点击这个就进来啦，可以配置一下环境变量顺便</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753091539651-ba51fb62-db63-4f54-9717-edb7d8b11fc7.png"></p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753091437933-707a0aeb-ad39-4436-8591-177301d724ac.png"></p><p>结果搞完之后闪退了，真的是问题一个接一个</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753095463836-d9710e38-71e6-432b-ac0f-71c885cde702.png"></p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753091717424-fb796afd-4e30-4f2b-b059-a880b01e271e.png"></p><p><a href="https://blog.csdn.net/weixin_46420350/article/details/147991628">链接</a>，这个没用</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753095715291-0c47d2be-1aed-4200-9b2f-f45baaf56b45.png"></p><p><a href="https://blog.csdn.net/qq_42753091/article/details/142484019">链接</a>，对症下药一下，依旧没用</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753096353310-86f58b82-b088-4aed-9f05-433488763e79.png"></p><p>最后加入了变量C:\Windows\System32，竟然顺利运行了，但前边的我全都试了一遍，我也不知道前边的是否必要</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753096422586-168a9304-c4b6-4e91-932a-361d72a3593a.png"></p><p>可以发现啊，有俩×俩！，还得配置，跟着主线走，一个是下chrome，这个简单</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753096676263-588c7cc3-f53d-422a-ad9a-ed1fa3d0c045.png"></p><p><a href="https://developer.android.google.cn/studio?hl=zh-cn">安装Android studio</a></p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753098054262-45d847b8-ff7b-4d4a-9e2a-66e5d89776ec.png"></p><p>下载Android SDK<img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753098145919-24aa5e10-b45e-4b5c-a7d7-377149e2bd5a.png"></p><p>终于成功配置完毕flutter</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753098252416-3d83d8c5-077a-4d17-aba9-553dca56bde8.png"><br>好继续回去搞blutter</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753098987917-f203965e-4ed3-4190-a769-4dc5b9ffdb0d.png"></p><p>又出问题了</p><p>这边应该把整个clone下来的全都搞到install文件夹里</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753158797723-23913482-738c-416f-8ee0-10935969040a.png"></p><p>如图</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753159316706-021e9e14-0cf5-4624-8410-80b61f0e9a60.png"></p><p>好然后不出意外还是出意外了</p><p>问一下ai</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753159403026-8af58cb8-ee0e-42d7-a4a9-a734811d0c19.png"></p><p>跟ai斗智斗勇一整天丝毫无用</p><p>尝试清理代理</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753244715507-35c0fc36-6b97-4010-86d5-241bfb005232.png"></p><p>也没用，去网站搜搜得了</p><p>现在就一直卡在unable to update url base from redirection，崩溃了</p><p>休整一段时间再看这个东西吧</p><h3 id="12、监听工具检测到多少分贝开始录音？-标准格式：30-4分"><a href="#12、监听工具检测到多少分贝开始录音？-标准格式：30-4分" class="headerlink" title="12、监听工具检测到多少分贝开始录音？[标准格式：30] (4分)"></a><font style="color:rgb(79, 79, 79);">12、监听工具检测到多少分贝开始录音？[标准格式：30] (4分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752073775206-a5f48809-98cf-4354-82c0-43db4a1feab2.png"></p><p>如图，声音阈值为70分贝</p><h3 id="13、监听工具录音连续几秒没有检测到声音停止录音？-标准格式：3-4分"><a href="#13、监听工具录音连续几秒没有检测到声音停止录音？-标准格式：3-4分" class="headerlink" title="13、监听工具录音连续几秒没有检测到声音停止录音？[标准格式：3] (4分)"></a><font style="color:rgb(79, 79, 79);">13、监听工具录音连续几秒没有检测到声音停止录音？[标准格式：3] (4分)</font></h3><p>4</p><h3 id="14、监听工具保存文件存储路径的数据库名称是？-标准格式：sqlite-db-2分"><a href="#14、监听工具保存文件存储路径的数据库名称是？-标准格式：sqlite-db-2分" class="headerlink" title="14、监听工具保存文件存储路径的数据库名称是？[标准格式：sqlite.db] (2分)"></a><font style="color:rgb(79, 79, 79);">14、监听工具保存文件存储路径的数据库名称是？[标准格式：sqlite.db] (2分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752073819651-03f00846-aa58-4321-b52c-860e186caa12.png"></p><p>分析出来了已经，其他应用里通过文件分类看数据库文件，就一个，就是这个，名称为**<font style="color:rgba(0, 0, 0, 0.87);"> </font>**<font style="color:rgba(0, 0, 0, 0.87);">recordings.db</font></p><p><font style="color:rgba(0, 0, 0, 0.87);"></font></p><p><font style="color:rgba(0, 0, 0, 0.87);"></font></p><h3 id="15、监听工具保存录像文件的文件夹是？-标准格式：file-4分"><a href="#15、监听工具保存录像文件的文件夹是？-标准格式：file-4分" class="headerlink" title="15、监听工具保存录像文件的文件夹是？[标准格式：file] (4分)"></a><font style="color:rgb(79, 79, 79);">15、监听工具保存录像文件的文件夹是？[标准格式：file] (4分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752074104515-a20533d7-e893-4085-a884-59d8daec412d.png"></p><p>经典路径，打开storage&#x2F;emulated&#x2F;0&#x2F;Android&#x2F;data&#x2F;com.example.liekai&#x2F;files中,就可以看见recording和video</p><p>因此录像文件夹是这个recording</p><h3 id="16、监听工具数据库中保存音视频文件的路径使用什么加密？-标准格式：Rsa-5分"><a href="#16、监听工具数据库中保存音视频文件的路径使用什么加密？-标准格式：Rsa-5分" class="headerlink" title="16、监听工具数据库中保存音视频文件的路径使用什么加密？[标准格式：Rsa] (5分)"></a><font style="color:rgb(79, 79, 79);">16、监听工具数据库中保存音视频文件的路径使用什么加密？[标准格式：Rsa] (5分)</font></h3><h3 id="17、录音的文件采用什么加密方式？-标准格式：RC4-123-5分"><a href="#17、录音的文件采用什么加密方式？-标准格式：RC4-123-5分" class="headerlink" title="17、录音的文件采用什么加密方式？[标准格式：RC4-123] (5分)"></a><font style="color:rgb(79, 79, 79);">17、录音的文件采用什么加密方式？[标准格式：RC4-123] (5分)</font></h3><h3 id="18、录像文件加密秘钥的最后一位是？-标准格式：0x6A-5分"><a href="#18、录像文件加密秘钥的最后一位是？-标准格式：0x6A-5分" class="headerlink" title="18、录像文件加密秘钥的最后一位是？[标准格式：0x6A] (5分)"></a><font style="color:rgb(79, 79, 79);">18、录像文件加密秘钥的最后一位是？[标准格式：0x6A] (5分)</font></h3><h3 id="19、原始文件md5为3b4d-55ae的创建时间是？-标准格式：2024-2-14-16-32-8-5分"><a href="#19、原始文件md5为3b4d-55ae的创建时间是？-标准格式：2024-2-14-16-32-8-5分" class="headerlink" title="19、原始文件md5为3b4d****55ae的创建时间是？[标准格式：2024-2-14-16:32:8] (5分)"></a><font style="color:rgb(79, 79, 79);">19、原始文件md5为3b4d****55ae的创建时间是？[标准格式：2024-2-14-16:32:8] (5分)</font></h3><p>（最后几题等我周末回家了复盘一下，有点麻烦，好像还不是一般的麻烦）</p><h2 id="计算机取证-Computer-Forensics"><a href="#计算机取证-Computer-Forensics" class="headerlink" title="计算机取证 Computer Forensics"></a><font style="color:rgb(79, 79, 79);">计算机取证 Computer Forensics</font></h2><h3 id="1、分析贾韦码计算机检材，计算机系统Build版本为？【标准格式：19000】-1分"><a href="#1、分析贾韦码计算机检材，计算机系统Build版本为？【标准格式：19000】-1分" class="headerlink" title="1、分析贾韦码计算机检材，计算机系统Build版本为？【标准格式：19000】 (1分)"></a><font style="color:rgb(79, 79, 79);">1、分析贾韦码计算机检材，计算机系统Build版本为？【标准格式：19000】 (1分)</font></h3><h5 id="-1"><a href="#-1" class="headerlink" title=""></a><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752122119323-688b1379-99d2-4013-ad33-01fff3811df4.png"></h5><p>火眼直接出，18362</p><h3 id="2、计算机最后一次正常关机的时间为？UTC-0【标准格式：2025-05-06-09-00-00】-1分"><a href="#2、计算机最后一次正常关机的时间为？UTC-0【标准格式：2025-05-06-09-00-00】-1分" class="headerlink" title="2、计算机最后一次正常关机的时间为？UTC +0【标准格式：2025-05-06 09:00:00】 (1分)"></a><font style="color:rgb(79, 79, 79);">2、计算机最后一次正常关机的时间为？UTC +0【标准格式：2025-05-06 09:00:00】 (1分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752122159633-00ac3d98-e222-4885-bcfc-9404069eb776.png"></p><p>同样一眼出，到开关机时间直接选择关机时间一看，时间为2025-04-18 11:20:54</p><h3 id="3、计算机网卡的MAC地址为？【标准格式：00-0B-00-A0-00-00】-1分"><a href="#3、计算机网卡的MAC地址为？【标准格式：00-0B-00-A0-00-00】-1分" class="headerlink" title="3、计算机网卡的MAC地址为？【标准格式：00-0B-00-A0-00-00】 (1分)"></a><font style="color:rgb(79, 79, 79);">3、计算机网卡的MAC地址为？【标准格式：00-0B-00-A0-00-00】 (1分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752122244655-6a6c5eb1-d519-4f84-988f-5c310655c406.png"></p><p>问网卡那肯定看网络配置，注意到物理网卡的mac地址为00-0C-29-0F-69-00</p><h3 id="4、计算机用户“贾韦码”-安全标识符SID为？【标准格式：S-X-X-X-X-X-X-X】-1分"><a href="#4、计算机用户“贾韦码”-安全标识符SID为？【标准格式：S-X-X-X-X-X-X-X】-1分" class="headerlink" title="4、计算机用户“贾韦码” 安全标识符SID为？【标准格式：S-X-X-X-X-X-X-X】 (1分)"></a><font style="color:rgb(79, 79, 79);">4、计算机用户“贾韦码” 安全标识符SID为？【标准格式：S-X-X-X-X-X-X-X】 (1分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752122297533-39f492b6-383f-4f94-91bf-820f4f10f870.png"></p><p>同样在用户列表里搜索贾韦码，观察sid得到答案为S-1-5-21-3733482367-3411043098-2536183883-1001</p><h3 id="5、计算机默认浏览器为？【标准格式：Mozilla-Firefox】-1分"><a href="#5、计算机默认浏览器为？【标准格式：Mozilla-Firefox】-1分" class="headerlink" title="5、计算机默认浏览器为？【标准格式：Mozilla Firefox】 (1分)"></a><font style="color:rgb(79, 79, 79);">5、计算机默认浏览器为？【标准格式：Mozilla Firefox】 (1分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752122353504-41189840-848d-492e-bad0-a25df80482da.png"></p><p>有一栏就是默认浏览器，可以看到是Google Chrome</p><h3 id="6、计算机默认浏览器版本为？【标准格式：000-0-0000-00】-1分"><a href="#6、计算机默认浏览器版本为？【标准格式：000-0-0000-00】-1分" class="headerlink" title="6、计算机默认浏览器版本为？【标准格式：000.0.0000.00】 (1分)"></a><font style="color:rgb(79, 79, 79);">6、计算机默认浏览器版本为？【标准格式：000.0.0000.00】 (1分)</font></h3><p>结合上一题，就是Google Chrome的版本</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752122425445-ae8aee27-7208-489e-a1a8-6c092d56b04c.png"></p><p>在安装软件处搜索即可，版本号为135.0.7049.96</p><h3 id="7、机主通过浏览器搜索国外社交软件为？【标准格式：Whatsapp】-1分"><a href="#7、机主通过浏览器搜索国外社交软件为？【标准格式：Whatsapp】-1分" class="headerlink" title="7、机主通过浏览器搜索国外社交软件为？【标准格式：Whatsapp】 (1分)"></a><font style="color:rgb(79, 79, 79);">7、机主通过浏览器搜索国外社交软件为？【标准格式：Whatsapp】 (1分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752122474892-ef07bf43-14b5-468d-9eb1-d63010cc9852.png"></p><p>直接去浏览器找历史记录，找到社交软件符合的为Telegram</p><h3 id="8、机主的邮箱账号为？【标准格式：pgscup-pgs-com】-3分"><a href="#8、机主的邮箱账号为？【标准格式：pgscup-pgs-com】-3分" class="headerlink" title="8、机主的邮箱账号为？【标准格式：pgscup@pgs.com】 (3分)"></a><font style="color:rgb(79, 79, 79);">8、机主的邮箱账号为？【标准格式：<a href="mailto:&#x70;&#103;&#115;&#99;&#x75;&#112;&#x40;&#x70;&#103;&#x73;&#x2e;&#x63;&#111;&#x6d;">pgscup@pgs.com</a>】 (3分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752122569576-ec4da425-9b5c-4b6e-aee9-8edfe8adf46a.png"></p><p>也没问是啥邮箱，这边能看见Thunderbird这个软件，找到了有邮箱账号，就是这一个<font style="color:rgb(77, 77, 77);"><a href="mailto:&#116;&#113;&#x6d;&#x64;&#x61;&#118;&#105;&#x64;&#106;&#x6f;&#x68;&#x6e;&#115;&#111;&#110;&#51;&#x30;&#x30;&#64;&#x67;&#x6d;&#x61;&#105;&#x6c;&#46;&#x63;&#111;&#109;">tqmdavidjohnson300@gmail.com</a></font></p><p><font style="color:rgb(77, 77, 77);"></font></p><p><font style="color:rgb(77, 77, 77);"></font></p><h3 id="9、计算机装过一款反取证软件为？【标准格式：EnCrypt-exe】-1分"><a href="#9、计算机装过一款反取证软件为？【标准格式：EnCrypt-exe】-1分" class="headerlink" title="9、计算机装过一款反取证软件为？【标准格式：EnCrypt.exe】 (1分)"></a><font style="color:rgb(79, 79, 79);">9、计算机装过一款反取证软件为？【标准格式：EnCrypt.exe】 (1分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752122654744-7342ddde-6b86-454a-8f8d-8908970c69e2.png"></p><p>反取证软件嘛，在可疑程序处寻找，找到是老朋友vc，按标准格式写进去就行VeraCrypt.exe</p><h3 id="10、计算机通过Xshell远程连接的ip地址为？【标准格式：127-0-0-1】-1分"><a href="#10、计算机通过Xshell远程连接的ip地址为？【标准格式：127-0-0-1】-1分" class="headerlink" title="10、计算机通过Xshell远程连接的ip地址为？【标准格式：127.0.0.1】 (1分)"></a><font style="color:rgb(79, 79, 79);">10、计算机通过</font><strong><font style="color:rgb(78, 161, 219) !important;">Xshell</font></strong><font style="color:rgb(79, 79, 79);">远程连接的ip地址为？【标准格式：127.0.0.1】 (1分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752122714227-75ade38b-df02-4123-94bb-8eba2b6da220.png"></p><p>直接打开Xshell，看见ip为192.168.56.129</p><h3 id="11、机主曾买过一个美国的TG账号，请给该账号的原两步验证密码？【标准格式：8位数字】-2分"><a href="#11、机主曾买过一个美国的TG账号，请给该账号的原两步验证密码？【标准格式：8位数字】-2分" class="headerlink" title="11、机主曾买过一个美国的TG账号，请给该账号的原两步验证密码？【标准格式：8位数字】 (2分)"></a><font style="color:rgb(79, 79, 79);">11、机主曾买过一个美国的TG账号，请给该账号的原两步验证密码？【标准格式：8位数字】 (2分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752122808682-a3690000-f5c5-47d7-9106-10f23318c00b.png"></p><p>一般这种验证密码都发邮箱，打开邮箱看看，可以看见这边有个TG账号购买的消息，打开来就可以看得见原两步验证的密码为13770603</p><h3 id="12、给出其电脑内加密容器的解密密码？【标准格式：Abc-123】-5分"><a href="#12、给出其电脑内加密容器的解密密码？【标准格式：Abc-123】-5分" class="headerlink" title="12、给出其电脑内加密容器的解密密码？【标准格式：Abc@123】 (5分)"></a><font style="color:rgb(79, 79, 79);">12、给出其电脑内加密容器的解密密码？【标准格式：Abc@123】 (5分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1752220746511-e1990274-f2fb-405e-bc5e-942a36d96ebf.png"></p><p>这个跟在vr密室里找到的纸头有关（当时压根没想到说这个vr还有信息啊）</p><p>找到密码加密规则后找加密容器</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753269299524-199b35f6-9c8e-4287-9313-9beb031c9ef6.png"></p><p>直接文件分类，看看加密容器，就能找到这个容器</p><p>放入passware kit</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753269349002-1fdcc794-2583-4de2-8b66-97ba076b816d.png"></p><p>得到最后的密码为Pgs8521d3j</p><h3 id="13、给出其电脑内加密容器挂载的盘符？【标准格式：C】-3分"><a href="#13、给出其电脑内加密容器挂载的盘符？【标准格式：C】-3分" class="headerlink" title="13、给出其电脑内加密容器挂载的盘符？【标准格式：C】 (3分)"></a><font style="color:rgb(79, 79, 79);">13、给出其电脑内加密容器挂载的盘符？【标准格式：C】 (3分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753269420685-3a2c2a2b-450a-45e2-9fd2-77d5c412cd8e.png"></p><p>火眼可以看到访问记录，同样的其实打开虚拟机也能看见</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753269666727-ebcc15b9-3969-4359-b13f-784093731ce8.png"></p><p>这边有f盘的痕迹，但是没有f盘的存在</p><p>所以可以怀疑是这个盘</p><h3 id="14、给出其电脑内存放了多少张伪造身份证？【标准格式：10】-4分"><a href="#14、给出其电脑内存放了多少张伪造身份证？【标准格式：10】-4分" class="headerlink" title="14、给出其电脑内存放了多少张伪造身份证？【标准格式：10】 (4分)"></a><font style="color:rgb(79, 79, 79);">14、给出其电脑内存放了多少张伪造身份证？【标准格式：10】 (4分)</font></h3><p>这个结合上边有图片藏在隐藏容器里不难推测出这就是看隐藏容器的照片数目（以防万一注意看看有没有重复的）</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753278977247-dfa03350-fa13-4c08-8b47-e629fc7a16e5.png"></p><p>看见身份证海了</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753279007946-a551185c-6cd4-4a0d-9c67-f9849ba8fa5f.png"></p><p>没挖坑，真的1023张</p><h3 id="15、找出任敏的身份证编号？【标准格式：18位】-4分"><a href="#15、找出任敏的身份证编号？【标准格式：18位】-4分" class="headerlink" title="15、找出任敏的身份证编号？【标准格式：18位】 (4分)"></a><font style="color:rgb(79, 79, 79);">15、找出任敏的身份证编号？【标准格式：18位】 (4分)</font></h3><p>本来想导出来ai，但其实第三张就是他的了</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753279059352-472c3195-8486-4c45-a472-110511abd250.png"></p><p>所以身份证编号为430529195112085460</p><p>其实excel里搜也能直接搜出来，只是想考你这个加密容器而已，考完加密容器后边都送分来了</p><h3 id="16、找出其电脑内存放的密钥文件，计算其MD5-【标准格式：字母小写】-5分"><a href="#16、找出其电脑内存放的密钥文件，计算其MD5-【标准格式：字母小写】-5分" class="headerlink" title="16、找出其电脑内存放的密钥文件，计算其MD5?【标准格式：字母小写】 (5分)"></a><font style="color:rgb(79, 79, 79);">16、找出其电脑内存放的密钥文件，计算其MD5?【标准格式：字母小写】 (5分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753279438591-c4a8334c-680a-470b-b21a-b2eb7403fce8.png"></p><p>这边似乎存在这样子的3pgscup.rar文件，里边可能存放着密钥文件，但只有快捷方式存在</p><p>所以直接导入x-ways暴搜rar文件的文件头</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753330896202-d3a94c69-afa1-4d30-bdad-16690e1d39f3.png"></p><p>搜到二十多条，这一条里明显提到了所谓keyfile的内容，应该就是这一个了，提取出来</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753331015633-a763f8f4-3092-4551-bda1-0244a05ab9ca.png"></p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753331080754-b1342e53-ee6f-4d38-8282-cc8ea9324fc1.png"></p><p>可见到keyfile文件</p><p>计算本文件的md5值即可</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753331191812-44df36f4-cf69-4994-b9fa-9aaafba83b3c.png"></p><p>得到md5值为1022cc083a4a5a9e2036065e2822c48e</p><h3 id="17、找出其电脑内存放的密钥文件，解密此密钥文件，给出其内容？【标准格式：第3届pgscup】-5分"><a href="#17、找出其电脑内存放的密钥文件，解密此密钥文件，给出其内容？【标准格式：第3届pgscup】-5分" class="headerlink" title="17、找出其电脑内存放的密钥文件，解密此密钥文件，给出其内容？【标准格式：第3届pgscup】 (5分)"></a><font style="color:rgb(79, 79, 79);">17、找出其电脑内存放的密钥文件，解密此密钥文件，给出其内容？【标准格式：第3届pgscup】 (5分)</font></h3><p>根据上题，此密钥文件放入winhex后显示为emZz5Yqg5a+GcG9vbOWvhumSpeaWh+S7tg&#x3D;&#x3D;，随波逐流一下看看</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753331355120-27e39c12-a2b7-42bc-9d8c-8ae8251dc544.png"></p><p>明显是base64，内容为：zfs加密pool密钥文件</p><h3 id="18、对macOS系统进行解析，登陆的电子邮件服务是谁提供的？【标准格式-pgscup】-1分"><a href="#18、对macOS系统进行解析，登陆的电子邮件服务是谁提供的？【标准格式-pgscup】-1分" class="headerlink" title="18、对macOS系统进行解析，登陆的电子邮件服务是谁提供的？【标准格式:pgscup】 (1分)"></a><font style="color:rgb(79, 79, 79);">18、对macOS系统进行解析，登陆的电子邮件服务是谁提供的？【标准格式:pgscup】 (1分)</font></h3><p>可以看到18明显跳出了前边几题所说的密钥文件范畴，与前几题应该是隔离的</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753330357514-d721a0b3-766b-4712-865d-43a759ce1ed8.png"></p><p>在mac笔记本里可以看到这个浏览器的最近关闭记录，发现登录的电子邮件服务是hotmail提供的，一分题随便找找很合理</p><h3 id="19、系统备忘录的包名是什么？【标准格式-com-dfefef-note】-2分"><a href="#19、系统备忘录的包名是什么？【标准格式-com-dfefef-note】-2分" class="headerlink" title="19、系统备忘录的包名是什么？【标准格式:com.dfefef.note】 (2分)"></a><font style="color:rgb(79, 79, 79);">19、系统备忘录的包名是什么？【标准格式:com.dfefef.note】 (2分)</font></h3><p>接上题，直接找软件的包名即可</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753330469446-77866988-3cad-4c92-9038-6de380ab76f5.png"></p><p>答案为com.apple.Notes</p><h3 id="20、图片中隐藏的内容是什么？【标准格式：隐藏内容-厨子戏子痞子】-4分"><a href="#20、图片中隐藏的内容是什么？【标准格式：隐藏内容-厨子戏子痞子】-4分" class="headerlink" title="20、图片中隐藏的内容是什么？【标准格式：隐藏内容 厨子戏子痞子】 (4分)"></a><font style="color:rgb(79, 79, 79);">20、图片中隐藏的内容是什么？【标准格式：隐藏内容 厨子戏子痞子】 (4分)</font></h3><p>也没说是啥图片，看看有没有什么比较特殊的图片</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753330511691-3a33c3b3-320a-4207-a27d-a59617675439.png"></p><p>那一定要说特殊肯定是这一张了</p><p>看看有没有什么图片隐写，导入stegslove看看</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753330597867-3136e381-bb1b-4fd5-9ef5-b9237ff2b333.png"></p><p>在这个red plane0通道就看见了这个二维码，扫一下就是答案</p><p>答案：<font style="color:rgb(77, 77, 77);">位移加密 正向位移操作</font></p><p><font style="color:rgb(77, 77, 77);"></font></p><p><font style="color:rgb(77, 77, 77);"></font></p><h3 id="21、被加密文件的扩展名是什么？【标准格式：123】-1分"><a href="#21、被加密文件的扩展名是什么？【标准格式：123】-1分" class="headerlink" title="21、被加密文件的扩展名是什么？【标准格式：123】 (1分)"></a><font style="color:rgb(79, 79, 79);">21、被加密文件的扩展名是什么？【标准格式：123】 (1分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753330673618-e0588bb0-3d71-4404-a525-8943e8412e32.png"></p><p>桌面信息处发现两个，一个是被加密的，一个加密器</p><p>加密的似乎像一个rar压缩包，先去掉后边看看能否打开</p><blockquote><p>（这边需要做完苹果应用取证之后才能做，所以这边先暂停我们往下看先）</p></blockquote><p>发现打不开，还是需要查看这个文件加密器的内容，导出文件加密器后具体步骤看苹果应用取证部分</p><p>在修复后的encrypt_deobfuscated文件里可以看到这样一串代码</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753371639241-cb9dcf2c-fe8f-4a92-9fb9-96b9ad15df54.png"></p><p>因此可以发现</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753371728577-e22002ff-caad-4091-852d-4dd7c7cfeb1c.png"></p><p>最后加上的拓展名就是enc，即答案为enc</p><h3 id="22、被加密的文件总共有几个？【标准格式：5】-5分"><a href="#22、被加密的文件总共有几个？【标准格式：5】-5分" class="headerlink" title="22、被加密的文件总共有几个？【标准格式：5】 (5分)"></a><font style="color:rgb(79, 79, 79);">22、被加密的文件总共有几个？【标准格式：5】 (5分)</font></h3><p>搜索.enc的文件，发现只有一个，就是桌面那个</p><h3 id="23、贾韦码家使用的智能门锁品牌型号是什么？【标准格式：小米X号】"><a href="#23、贾韦码家使用的智能门锁品牌型号是什么？【标准格式：小米X号】" class="headerlink" title="23、贾韦码家使用的智能门锁品牌型号是什么？【标准格式：小米X号】"></a><font style="color:rgb(79, 79, 79);">23、贾韦码家使用的智能门锁品牌型号是什么？【标准格式：小米X号】</font></h3><p>通过对于encrypt_deobfuscated模块代码的解读，我们得知了加密逻辑的密钥实际上是固定静态的，因此我们可以做到解密密码来打开“贾韦码资料.rar.enc”</p><p>直接在encrypt_deobfuscated模块中加入一行 print(self.enhanced_key.hex())，让它直接将密钥输出即可</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753418133593-150d01e7-8aba-4502-b0c4-e9c045d1dedc.png"></p><p>直接调试</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753418264644-496a2fd5-d2e2-4a15-bdb2-596124a148fa.png"></p><p>这就是文件加密器</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753418344059-1f04a4f4-fd55-4d24-bbb8-42f9bb2d7f68.png"></p><p>工作效果如下</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753418400036-28c5fcb8-c521-41c9-8549-4201e956d49e.png"></p><p>成功输出了密钥为a78ea9f73a9d69af44e014943ed38dd1</p><p>好打开cyberchef，我们知道了密钥，也知道了iv为前十六字节，因此打开AES Decrypt，输入即可</p><p>（这边key就是a78ea9f73a9d69af44e014943ed38dd1；iv为前十六字节2CD7460B2F7FD3C26C86C81A9ADC27CA；input为贾韦码资料.rar的十六进制）</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753419050815-26de8f16-b92a-4e82-aa9d-caa88e4e66aa.png"></p><p>bake之后保存为压缩包形式，打开，如下可以看到两个文件</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753418987009-2c5c9f30-7841-4c94-9fbf-bc843b5a45b2.png"></p><p>打开资料.docx得到答案</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753419142621-2d857170-496f-42a4-b7f6-e85bdf321399.png"></p><p>锁的型号为金刚III号</p><h2 id="EXE取证-PE-Binary-Forensics"><a href="#EXE取证-PE-Binary-Forensics" class="headerlink" title="EXE取证 PE Binary Forensics"></a><font style="color:rgb(79, 79, 79);">EXE取证 PE Binary Forensics</font></h2><h3 id="1、分析Windows木马，其控制端ip是？-标准格式：192-168-1-11-2分"><a href="#1、分析Windows木马，其控制端ip是？-标准格式：192-168-1-11-2分" class="headerlink" title="1、分析Windows木马，其控制端ip是？[标准格式：192.168.1.11] (2分)"></a><font style="color:rgb(79, 79, 79);">1、分析Windows木马，其控制端ip是？[标准格式：192.168.1.11] (2分)</font></h3><h2 id="-2"><a href="#-2" class="headerlink" title=""></a><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753332178744-d5f25b65-59cb-46cb-a760-7689003d620e.png"></h2><p>打开虚拟机马上就有报警来了，显然这个exe的木马病毒就是这个lupg.exe</p><p>先导出来，然后用沙箱看看</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753332418398-e3e365ce-af46-4367-9d28-b90594047573.png"></p><p>好导入云沙箱</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753332655949-22035977-fd77-4988-8871-759c56c513e0.png"></p><p>在网络行为这一块可以看见其控制端指纹地址</p><p>ip为104.18.45.79</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753332702057-311cc599-9934-4c78-acfe-581417093358.png"></p><h3 id="2、软件会复制自身到哪个文件夹下？-标准格式：DaTa-2分"><a href="#2、软件会复制自身到哪个文件夹下？-标准格式：DaTa-2分" class="headerlink" title="2、软件会复制自身到哪个文件夹下？[标准格式：DaTa] (2分)"></a><font style="color:rgb(79, 79, 79);">2、软件会复制自身到哪个文件夹下？[标准格式：DaTa] (2分)</font></h3><p>对其进程进行分析</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753332765298-823fb97e-4f65-4a65-bee3-07b639d43781.png"></p><p>可以看见它一个软件产出的两个文件都在文件夹SubDir名下，所以这个文件夹就是SubDir</p><h3 id="3、接上题，复制后软件名称是？-标准格式：AppTmp-exe-3分"><a href="#3、接上题，复制后软件名称是？-标准格式：AppTmp-exe-3分" class="headerlink" title="3、接上题，复制后软件名称是？[标准格式：AppTmp.exe] (3分)"></a><font style="color:rgb(79, 79, 79);">3、接上题，复制后软件名称是？[标准格式：AppTmp.exe] (3分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753332845970-210e18b7-c64a-4ec4-b778-4e1882154236.png"></p><p>跟上题一样，名称为BwAcr.exe</p><h3 id="4、软件一共可以窃取多少种浏览器的信息？-标准格式：3-4分"><a href="#4、软件一共可以窃取多少种浏览器的信息？-标准格式：3-4分" class="headerlink" title="4、软件一共可以窃取多少种浏览器的信息？[标准格式：3] (4分)"></a><font style="color:rgb(79, 79, 79);">4、软件一共可以窃取多少种浏览器的信息？[标准格式：3] (4分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753333036106-b4486b2b-88cb-4fb5-a001-fc9f651a3e36.png"></p><p>先die一下，得到其库为.NET</p><p>所以我们用dnSpy去看具体内容</p><p>这边dnSpy里的信息过于繁杂，只能进行<img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753356474534-a759af93-b806-41e8-bd42-904a9c994778.png"></p><p>利用关键词搜索</p><blockquote><p>这边我搜到的aura的wp是说看出来了，但是我是看不懂到底怎么看出来说要用ReadAccount来进行搜索了<img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753356523025-b9d2cde3-4e5a-4a9c-a19d-581ef320f6b7.png"></p><p>可能是因为这边的第一行？</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753360166872-57ab970c-a1c4-4f45-866a-5c2c75783d85.png"></p></blockquote><p>在搜索ReadAccounts后，我们得到了以下内容</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753356551051-8f6ae1a9-f745-442b-84f1-96fd21593fac.png"></p><p>点开即可发现其窃取的浏览器名字</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753356574151-10b2c50c-b5ce-4783-b971-b555e1a398bf.png"></p><p>所以数一下一共八个：Firefox、edge、Yandex、Opera、Google Chrome、OperaGX、Brave、IE</p><h3 id="5、软件查询安装的杀毒软件出错或异常会返回什么字符串？-标准格式：Apps-3分"><a href="#5、软件查询安装的杀毒软件出错或异常会返回什么字符串？-标准格式：Apps-3分" class="headerlink" title="5、软件查询安装的杀毒软件出错或异常会返回什么字符串？[标准格式：Apps] (3分)"></a><font style="color:rgb(79, 79, 79);">5、软件查询安装的杀毒软件出错或异常会返回什么字符串？[标准格式：Apps] (3分)</font></h3><p>这题两个做法</p><p>做法一：</p><p>直接继续在dnSpy里找</p><p>通过查找谁调用System.Management库寻找可疑的函数,该函数smethod_2()方法进行杀毒软件的查询,分析代码可知异常则返回Unknown</p><blockquote><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753366230231-37b75121-71a4-484c-8bf4-c564d6769c92.png"></p></blockquote><blockquote><p>（很诡异我的dnSpy能搜出来前一题搜不出来这个，甚至为我对着答案输入也搜不到这个）</p></blockquote><p>可以看到这边写着异常会返回“Unknown”</p><p>做法二：</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753366464688-18278507-c14b-403c-aca9-d2b161558cbb.png"></p><p>在云沙箱可以看到这个木马属于木马家族：Quasar<img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753366489545-08a059ff-ef4e-45e8-aaa2-7d9db601521c.png"></p><p>所以我们直接去找这个Quasar的源代码</p><p>在GitHub可以搜到，<a href="https://github.com/quasar/Quasar/blob/master/Quasar.Client/Helper/SystemHelper.cs">网址</a></p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753366600220-267af9e1-32e2-46cb-b412-10aa05db40a7.png"></p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753366628582-b7dee38e-8f5a-4e56-83f6-51226e886492.png"></p><p>所以输出就是这个了</p><h2 id="苹果应用取证-macOS-Apps-Forensics"><a href="#苹果应用取证-macOS-Apps-Forensics" class="headerlink" title="苹果应用取证 macOS Apps Forensics"></a><font style="color:rgb(79, 79, 79);">苹果应用取证 macOS Apps Forensics</font></h2><h3 id="1、对mac电脑中的加密程序进行分析，使用了一个特定的数作为密钥生成的种子，请问这个数是什么？【标准格式：1234】-4分"><a href="#1、对mac电脑中的加密程序进行分析，使用了一个特定的数作为密钥生成的种子，请问这个数是什么？【标准格式：1234】-4分" class="headerlink" title="1、对mac电脑中的加密程序进行分析，使用了一个特定的数作为密钥生成的种子，请问这个数是什么？【标准格式：1234】 (4分)"></a><font style="color:rgb(79, 79, 79);">1、对mac电脑中的加密程序进行分析，使用了一个特定的数作为密钥生成的种子，请问这个数是什么？【标准格式：1234】 (4分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753366900825-723fc34f-01be-42b1-9c6b-be158928ed7a.png"></p><p>很显然加密程序就是这个文件加密器.app，我们先把这玩意导出来</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753367412270-5d45c673-1cda-498c-89cf-ce7ca44af6ce.png"></p><p>可以找到在resources下的加密程序</p><p>打开来</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753367440960-4f30cbb3-7de7-45c2-bb96-c65106c77445.png"></p><p>启动调试后出现错误，无法导入encrypt_deobfuscated模块</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753367182725-ba0f36fe-5712-4b31-b309-d165942eec38.png"></p><p>那么找到并导入这个模块即是关键，这个就是核心，而我们可以在python3.8.zip里找到它，但是是pyc格式</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753367744465-cbbda3c5-4d8b-4b25-9a36-de295fe4503b.png"></p><p>这边可以利用在线软件pylingual，<a href="https://pylingual.io/">网址</a></p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753368835312-57fa3444-8347-46d7-ac78-5c85b0f3e6fc.png"></p><p>好直接拖进去</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753371296573-a2f64999-77bc-4dd7-96bb-4e4dbabbd3e6.png"></p><p>就能看到反编译成功的需要的py代码</p><p>问密钥生成的核心种子，是一个数字</p><p>能看到代码里这一块写着异或生成<code>descramble key</code>的部分</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753371364460-90d66de4-287f-477e-a8cc-6d7e59165ff6.png"></p><p>所以答案种子数字就是42</p><h3 id="2、分析文件头部元素并确定它们的正确顺序。将字段名称按顺序连接并提交？【标准格式：字段1-字段2-字段3…】-5分"><a href="#2、分析文件头部元素并确定它们的正确顺序。将字段名称按顺序连接并提交？【标准格式：字段1-字段2-字段3…】-5分" class="headerlink" title="2、分析文件头部元素并确定它们的正确顺序。将字段名称按顺序连接并提交？【标准格式：字段1_字段2_字段3…】 (5分)"></a><font style="color:rgb(79, 79, 79);">2、分析文件头部元素并确定它们的正确顺序。将字段名称按顺序连接并提交？【标准格式：字段1_字段2_字段3…】 (5分)</font></h3><p>分析文件头部元素，首先需要回顾代码中关于文件加密的部分，特别是<code>encrypt_file</code>方法，因为这部分负责生成加密文件的结构。</p><p>在<code>EncryptionTool</code>类的<code>encrypt_file</code>方法中，可以看到加密后的数据保存逻辑是</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753415960925-19f79e31-b4a3-4e3b-9756-937216a17c17.png"></p><p>这里，<code>iv</code>是AES-CBC模式的初始化向量，<code>encrypted_data</code>是加密后的文件数据。因此，加密文件的头部应该包含<code>iv</code>，后面跟着加密后的数据</p><p>所以答案其实就是iv_encrypted_data</p><p>直接将这串py代码扔给ai然后问ai其实也可以直接得到答案<img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753416164147-9496fdda-3c19-43d0-8751-abd003f16212.png"></p><h3 id="3、密钥派生过程中使用了几个算法步骤。其中一个函数使用了与其实际功能不符的名称。找出这个函数名并提交？【标准格式：函数名】-5分"><a href="#3、密钥派生过程中使用了几个算法步骤。其中一个函数使用了与其实际功能不符的名称。找出这个函数名并提交？【标准格式：函数名】-5分" class="headerlink" title="3、密钥派生过程中使用了几个算法步骤。其中一个函数使用了与其实际功能不符的名称。找出这个函数名并提交？【标准格式：函数名】 (5分)"></a><font style="color:rgb(79, 79, 79);">3、密钥派生过程中使用了几个算法步骤。其中一个函数使用了与其实际功能不符的名称。找出这个函数名并提交？【标准格式：函数名】 (5分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753416928290-beb57421-6689-4ac2-9763-c7d4825aaff8.png"></p><p>其实在我让ai帮我解读这个代码的时候已经自动跳出来了</p><p>就是这个_descramble_key</p><h3 id="4、程序中实现了一个故意减慢加密过程的机制，延迟值是多少？【标准格式：1-1】-5分"><a href="#4、程序中实现了一个故意减慢加密过程的机制，延迟值是多少？【标准格式：1-1】-5分" class="headerlink" title="4、程序中实现了一个故意减慢加密过程的机制，延迟值是多少？【标准格式：1.1】 (5分)"></a><font style="color:rgb(79, 79, 79);">4、程序中实现了一个故意减慢加密过程的机制，延迟值是多少？【标准格式：1.1】 (5分)</font></h3><p>这道题明显是在这个密钥派生的encrypt_deobfuscated模块之外的</p><p>但真的每一个都尝试着打开看过，真的没啥跟time.sleep（）之类有关的函数</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753417757851-13a0cf5b-347b-4ae2-ba46-a6bc66591c16.png"></p><p>唯一有可能是这个，别的wp都没有这题的解答，也不确定这个对不对（本题做不出）</p><h3 id="5、程序中隐藏了一个版本标识符，请找出版本号？【标准格式：v1-1-1】-5分"><a href="#5、程序中隐藏了一个版本标识符，请找出版本号？【标准格式：v1-1-1】-5分" class="headerlink" title="5、程序中隐藏了一个版本标识符，请找出版本号？【标准格式：v1.1.1】 (5分)"></a><font style="color:rgb(79, 79, 79);">5、程序中隐藏了一个版本标识符，请找出版本号？【标准格式：v1.1.1】 (5分)</font></h3><p>如图，在程序中可以找到一个info.plist打开即可看见下边有些version号</p><p>答案为0.28.8<img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753417544578-799174fe-e462-4f0e-ad37-5869e85baa28.png"></p><h2 id="物联网取证-IOT-Forensics"><a href="#物联网取证-IOT-Forensics" class="headerlink" title="物联网取证 IOT Forensics"></a><font style="color:rgb(79, 79, 79);">物联网取证 IOT Forensics</font></h2><h3 id="1、分析冰箱，请问智能冰箱的品牌？【标准格式-xiaomi】-2分"><a href="#1、分析冰箱，请问智能冰箱的品牌？【标准格式-xiaomi】-2分" class="headerlink" title="1、分析冰箱，请问智能冰箱的品牌？【标准格式:xiaomi】 (2分)"></a><font style="color:rgb(79, 79, 79);">1、分析冰箱，请问智能冰箱的品牌？【标准格式:xiaomi】 (2分)</font></h3><p>智能冰箱只有个.bin的二进制文件，也只能放到winhex里看看了</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753937494823-9ed3d799-3e4f-466d-92d9-9472ba473eae.png"></p><p>上来就看见牌子了</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753937519170-c7bb264f-3450-4dab-ba56-cf29ca8c0858.png"></p><p>确实是个牌子，答案就是</p><p>Panasonic</p><h3 id="2、请问智能冰箱的型号？【标准格式-MiFridge2024】-1分"><a href="#2、请问智能冰箱的型号？【标准格式-MiFridge2024】-1分" class="headerlink" title="2、请问智能冰箱的型号？【标准格式:MiFridge2024】 (1分)"></a><font style="color:rgb(79, 79, 79);">2、请问智能冰箱的型号？【标准格式:MiFridge2024】 (1分)</font></h3><p>就刚刚这个图，上边是牌子下边可能就是型号</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753937494823-9ed3d799-3e4f-466d-92d9-9472ba473eae.png"></p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753937633006-2dd7b19e-286c-4cdf-af18-c9e6568ca355.png"></p><p>搜了一下确实是个冰箱的型号，那答案就是这个了</p><p>NR-E46CV1</p><h3 id="3、请找智能冰箱的uuid？【标准格式：34567890-12cd-efab-3456-789012cdefab】-4分"><a href="#3、请找智能冰箱的uuid？【标准格式：34567890-12cd-efab-3456-789012cdefab】-4分" class="headerlink" title="3、请找智能冰箱的uuid？【标准格式：34567890-12cd-efab-3456-789012cdefab】 (4分)"></a><font style="color:rgb(79, 79, 79);">3、请找智能冰箱的uuid？【标准格式：34567890-12cd-efab-3456-789012cdefab】 (4分)</font></h3><p>找了很久没有类似uuid的内容，如果一定要是的话只能是牌子下边这一串没用过的内容，与格式很像</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1753937718154-9175268e-c6b1-4e2f-9b52-04f8422ec012.png"></p><p>12345678-90AB-CDEF-1234-567890ABCDEF6661636531</p><p>对上标准格式其实更像了，那后边应该不是</p><p>答案应该是12345678-90AB-CDEF-1234-567890ABCDEF（根据标准格式来的，有点抽象）</p><h3 id="4、请问智能冰箱默认保存几张图片？【标准格式：1】-5分"><a href="#4、请问智能冰箱默认保存几张图片？【标准格式：1】-5分" class="headerlink" title="4、请问智能冰箱默认保存几张图片？【标准格式：1】 (5分)"></a><font style="color:rgb(79, 79, 79);">4、请问智能冰箱默认保存几张图片？【标准格式：1】 (5分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1756392072591-56393c12-9c3c-4d82-88d1-f402fdecb784.png"></p><p>搜FFD8文件头，可以发现前边有个所谓face1</p><p>几乎每一个都有，搜搜看face</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1756392148151-8d875941-3bea-4164-937c-a957da4e765f.png"></p><p>发现有5个face也就是五张jpg（不能看FFD8的数量因为很有可能默认保存5张但是只拍到了4张而已）</p><p>所以答案是5</p><h3 id="5、请问冰箱中已存的第一张图片上的内容是什么？【标准格式：满城尽带黄金甲】-4分"><a href="#5、请问冰箱中已存的第一张图片上的内容是什么？【标准格式：满城尽带黄金甲】-4分" class="headerlink" title="5、请问冰箱中已存的第一张图片上的内容是什么？【标准格式：满城尽带黄金甲】 (4分)"></a><font style="color:rgb(79, 79, 79);">5、请问冰箱中已存的第一张图片上的内容是什么？【标准格式：满城尽带黄金甲】 (4分)</font></h3><p>刚刚已经找到是jpg文件了，那我们直接去提取这些jpg文件即可</p><p>直接用foremost提取</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1756392534914-410f57ba-779c-4102-851e-b1baa3cc93cb.png"></p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1756392551565-f283de1f-f835-460d-9b98-77ccc2c65bf9.png"></p><p>所以第一张上写的盘古石杯贾韦码</p><h3 id="6、请问冰箱中已存的第二张图片的名称是什么？【标准格式：123-jpg】-4分"><a href="#6、请问冰箱中已存的第二张图片的名称是什么？【标准格式：123-jpg】-4分" class="headerlink" title="6、请问冰箱中已存的第二张图片的名称是什么？【标准格式：123.jpg】 (4分)"></a><font style="color:rgb(79, 79, 79);">6、请问冰箱中已存的第二张图片的名称是什么？【标准格式：123.jpg】 (4分)</font></h3><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1756392926038-27dcba16-c853-4c7a-a254-d41d9cfb904f.png"></p><p>结合mac解出来这玩意就叫face1，第二张图片应该就叫face2.jpg</p><h3 id="7、请找冰箱中隐藏的内容？【标准格式：chuzixizipizi】-5分"><a href="#7、请找冰箱中隐藏的内容？【标准格式：chuzixizipizi】-5分" class="headerlink" title="7、请找冰箱中隐藏的内容？【标准格式：chuzixizipizi】 (5分)"></a><font style="color:rgb(79, 79, 79);">7、请找冰箱中隐藏的内容？【标准格式：chuzixizipizi】 (5分)</font></h3><p>直接在虚拟机输入命令</p><p>strings SmartFridge.bin</p><p>然后搜索字符串即可</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1756393638318-7a57b70f-50c7-4e8c-bb23-30fbfe7e2b8b.png"></p><p>可以看到隐藏的内容为pangushicup</p><h3 id="8、请找出冰箱中嫌疑人图片MD5值的后六位？【标准格式：1a2b3d】-5分"><a href="#8、请找出冰箱中嫌疑人图片MD5值的后六位？【标准格式：1a2b3d】-5分" class="headerlink" title="8、请找出冰箱中嫌疑人图片MD5值的后六位？【标准格式：1a2b3d】 (5分)"></a><font style="color:rgb(79, 79, 79);">8、请找出冰箱中嫌疑人图片MD5值的后六位？【标准格式：1a2b3d】 (5分)</font></h3><p>嫌疑人不就钟无声嘛</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1756393786461-66f5c5bc-c5b3-421f-948c-254e54c48d8a.png"></p><p>然后就一张钟无声的照片，直接拿去搜即可</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1756393931144-27de2fc7-76a1-4193-8108-a15a204a9c5e.png"></p><p>后六位是882564</p><h3 id="9、请找出冰箱最后一次开门时间？【标准格式：10-11】-5分"><a href="#9、请找出冰箱最后一次开门时间？【标准格式：10-11】-5分" class="headerlink" title="9、请找出冰箱最后一次开门时间？【标准格式：10:11】 (5分)"></a><font style="color:rgb(79, 79, 79);">9、请找出冰箱最后一次开门时间？【标准格式：10:11】 (5分)</font></h3><p>按道理，照片肯定是一张张往里塞的</p><p>所以故意最后没塞第五张，就是告诉我们第一张是face4，最后一张是face1</p><p>而又正好，靠foremost是看不到开门时间的，但是face1在app里提取出来了已经</p><p>所以我们直接可以看属性</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1756394400580-0e11f5fe-b144-44bd-8e82-c1e7c93d9e8d.png"></p><p>修改时间即为最后一次开门时间15：48</p><h3 id="10、默认图片的存储限制大小是多少？【标准格式：1KB】-5分"><a href="#10、默认图片的存储限制大小是多少？【标准格式：1KB】-5分" class="headerlink" title="10、默认图片的存储限制大小是多少？【标准格式：1KB】 (5分)"></a><font style="color:rgb(79, 79, 79);">10、默认图片的存储限制大小是多少？【标准格式：1KB】 (5分)</font></h3><p>存储大小，那就要看每张图片的一个偏移量了</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1756394585341-bac1e2fb-b647-4d46-8b13-2644b1a5c3f3.png"></p><p>每个照片肯定是从face开始的，那我们直接搜face就好了</p><p>算出来去掉小数点的话，偏移量都大约在100KB左右，所以是100KB</p><h3 id="11、分析video-E01，被修改的录像md5前5位是？【标准格式：1a2b3】-4分"><a href="#11、分析video-E01，被修改的录像md5前5位是？【标准格式：1a2b3】-4分" class="headerlink" title="11、分析video.E01，被修改的录像md5前5位是？【标准格式：1a2b3】 (4分)"></a><font style="color:rgb(79, 79, 79);">11、分析video.E01，被修改的录像md5前5位是？【标准格式：1a2b3】 (4分)</font></h3><p>分析监控了开始，先挂上火眼</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1756395339729-2f42f435-05bb-4334-80e8-61b8b1a3da46.png"></p><p>视频一共就26个，还只有4个能看，那就看看吧</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1756395470678-46fb254a-fc7e-4abc-b1bc-03c9e13e2162.png"></p><p>最后发现是这个视频，在这个地方有一个闪然后回退了4秒</p><p>我们把这个视频提取出来然后测测md5</p><p>最后算出来前五位为ea7be</p><p><img src="/2025%E7%9B%98%E5%8F%A4%E7%9F%B3%E6%99%8B%E7%BA%A7%E8%B5%9B/1756395575138-fd69ca47-377b-410c-9b76-d296426b68c2.png"></p><p>（物联网就到这结束了，现在是真的感觉良好哈哈哈哈哈，不知道明年比怎么样）</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
